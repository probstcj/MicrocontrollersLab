ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_Init, %function
  25              	ADC_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 2


  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 3


  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 4


 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 1020     		movs	r0, #16
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  41              		.loc 1 173 0
  42 000a 2049     		ldr	r1, .L6
  43 000c 1020     		movs	r0, #16
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0122     		movs	r2, #1
  48 0014 1E4B     		ldr	r3, .L6+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 5


 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 1E4B     		ldr	r3, .L6+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L5
  56 0020 1D49     		ldr	r1, .L6+12
  57 0022 00E0     		b	.L2
  58              	.L5:
  59 0024 1D49     		ldr	r1, .L6+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 1E4A     		ldr	r2, .L6+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 1D4A     		ldr	r2, .L6+24
  68 0030 1D4B     		ldr	r3, .L6+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 1D4A     		ldr	r2, .L6+32
  72 0036 1E4B     		ldr	r3, .L6+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 1D4A     		ldr	r2, .L6+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 1D4A     		ldr	r2, .L6+44
  80 0042 1E49     		ldr	r1, .L6+48
  81 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 1E49     		ldr	r1, .L6+52
  84 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  85              		.loc 1 197 0 discriminator 4
  86 004a 1E4A     		ldr	r2, .L6+56
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 6


  87 004c 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  88              		.loc 1 198 0 discriminator 4
  89 004e 1E4A     		ldr	r2, .L6+60
  90 0050 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  91              		.loc 1 199 0 discriminator 4
  92 0052 0122     		movs	r2, #1
  93 0054 1D4B     		ldr	r3, .L6+64
  94 0056 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
  95              		.loc 1 206 0 discriminator 4
  96 0058 1D4A     		ldr	r2, .L6+68
  97 005a 1168     		ldr	r1, [r2]
  98              	.LVL2:
  99 005c 1D4B     		ldr	r3, .L6+72
 100 005e 0B40     		ands	r3, r1
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 101              		.loc 1 221 0 discriminator 4
 102 0060 8021     		movs	r1, #128
 103              	.LVL3:
 104 0062 8905     		lsls	r1, r1, #22
 105 0064 0B43     		orrs	r3, r1
 106              	.LVL4:
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 107              		.loc 1 226 0 discriminator 4
 108 0066 1360     		str	r3, [r2]
 109              	.LVL5:
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 7


 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 110              		.loc 1 232 0 discriminator 4
 111 0068 0023     		movs	r3, #0
 112              	.LVL6:
 113 006a 0BE0     		b	.L3
 114              	.LVL7:
 115              	.L4:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 116              		.loc 1 253 0
 117 006c 9A00     		lsls	r2, r3, #2
 118 006e 1A49     		ldr	r1, .L6+76
 119 0070 5018     		adds	r0, r2, r1
 120 0072 0021     		movs	r1, #0
 121 0074 0160     		str	r1, [r0]
 122              	.LVL8:
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 8


 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 123              		.loc 1 298 0
 124 0076 5C00     		lsls	r4, r3, #1
 125 0078 1848     		ldr	r0, .L6+80
 126 007a 2152     		strh	r1, [r4, r0]
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 127              		.loc 1 311 0
 128 007c 1848     		ldr	r0, .L6+84
 129 007e 1949     		ldr	r1, .L6+88
 130 0080 5050     		str	r0, [r2, r1]
 232:Generated_Source\PSoC4/ADC.c ****     {
 131              		.loc 1 232 0
 132 0082 0133     		adds	r3, r3, #1
 133              	.LVL9:
 134              	.L3:
 232:Generated_Source\PSoC4/ADC.c ****     {
 135              		.loc 1 232 0 is_stmt 0 discriminator 1
 136 0084 002B     		cmp	r3, #0
 137 0086 F1D0     		beq	.L4
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 138              		.loc 1 314 0 is_stmt 1
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 9


 139              		@ sp needed
 140 0088 10BD     		pop	{r4, pc}
 141              	.L7:
 142 008a C046     		.align	2
 143              	.L6:
 144 008c 00000000 		.word	ADC_ISR
 145 0090 20003A40 		.word	1077542944
 146 0094 80033A40 		.word	1077543808
 147 0098 C00E1051 		.word	1360006848
 148 009c C00E0051 		.word	1358958272
 149 00a0 00003A40 		.word	1077542912
 150 00a4 88000080 		.word	-2147483512
 151 00a8 04003A40 		.word	1077542916
 152 00ac 0000FF07 		.word	134152192
 153 00b0 18003A40 		.word	1077542936
 154 00b4 1C003A40 		.word	1077542940
 155 00b8 04000400 		.word	262148
 156 00bc 10003A40 		.word	1077542928
 157 00c0 14003A40 		.word	1077542932
 158 00c4 28023A40 		.word	1077543464
 159 00c8 38023A40 		.word	1077543480
 160 00cc 18023A40 		.word	1077543448
 161 00d0 30003A40 		.word	1077542960
 162 00d4 FEFFFFDF 		.word	-536870914
 163 00d8 80003A40 		.word	1077543040
 164 00dc 00000000 		.word	ADC_offset
 165 00e0 204E0000 		.word	20000
 166 00e4 00000000 		.word	ADC_countsPer10Volt
 167              		.cfi_endproc
 168              	.LFE2:
 169              		.size	ADC_Init, .-ADC_Init
 170              		.section	.text.ADC_Enable,"ax",%progbits
 171              		.align	2
 172              		.global	ADC_Enable
 173              		.code	16
 174              		.thumb_func
 175              		.type	ADC_Enable, %function
 176              	ADC_Enable:
 177              	.LFB3:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 178              		.loc 1 331 0
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 10


 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 10B5     		push	{r4, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 4, -8
 185              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 186              		.loc 1 332 0
 187 0002 094B     		ldr	r3, .L11
 188 0004 1B68     		ldr	r3, [r3]
 189 0006 002B     		cmp	r3, #0
 190 0008 0CDB     		blt	.L8
 191              	.L10:
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 192              		.loc 1 336 0 discriminator 1
 193 000a 084B     		ldr	r3, .L11+4
 194 000c 1B68     		ldr	r3, [r3]
 195 000e 002B     		cmp	r3, #0
 196 0010 FBDB     		blt	.L10
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 197              		.loc 1 342 0
 198 0012 054A     		ldr	r2, .L11
 199 0014 1368     		ldr	r3, [r2]
 200 0016 8021     		movs	r1, #128
 201 0018 0906     		lsls	r1, r1, #24
 202 001a 0B43     		orrs	r3, r1
 203 001c 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 204              		.loc 1 345 0
 205 001e 0A20     		movs	r0, #10
 206 0020 FFF7FEFF 		bl	CyDelayUs
 207              	.LVL10:
 208              	.L8:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 209              		.loc 1 347 0
 210              		@ sp needed
 211 0024 10BD     		pop	{r4, pc}
 212              	.L12:
 213 0026 C046     		.align	2
 214              	.L11:
 215 0028 00003A40 		.word	1077542912
 216 002c 08023A40 		.word	1077543432
 217              		.cfi_endproc
 218              	.LFE3:
 219              		.size	ADC_Enable, .-ADC_Enable
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 11


 220              		.section	.text.ADC_Start,"ax",%progbits
 221              		.align	2
 222              		.global	ADC_Start
 223              		.code	16
 224              		.thumb_func
 225              		.type	ADC_Start, %function
 226              	ADC_Start:
 227              	.LFB1:
  64:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 228              		.loc 1 64 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 10B5     		push	{r4, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 4, -8
 235              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC.c ****     {
 236              		.loc 1 66 0
 237 0002 064B     		ldr	r3, .L15
 238 0004 1B78     		ldrb	r3, [r3]
 239 0006 002B     		cmp	r3, #0
 240 0008 04D1     		bne	.L14
  68:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 241              		.loc 1 68 0
 242 000a FFF7FEFF 		bl	ADC_Init
 243              	.LVL11:
  69:Generated_Source\PSoC4/ADC.c ****     }
 244              		.loc 1 69 0
 245 000e 0122     		movs	r2, #1
 246 0010 024B     		ldr	r3, .L15
 247 0012 1A70     		strb	r2, [r3]
 248              	.L14:
  71:Generated_Source\PSoC4/ADC.c **** }
 249              		.loc 1 71 0
 250 0014 FFF7FEFF 		bl	ADC_Enable
 251              	.LVL12:
  72:Generated_Source\PSoC4/ADC.c **** 
 252              		.loc 1 72 0
 253              		@ sp needed
 254 0018 10BD     		pop	{r4, pc}
 255              	.L16:
 256 001a C046     		.align	2
 257              	.L15:
 258 001c 00000000 		.word	.LANCHOR0
 259              		.cfi_endproc
 260              	.LFE1:
 261              		.size	ADC_Start, .-ADC_Start
 262              		.section	.text.ADC_Stop,"ax",%progbits
 263              		.align	2
 264              		.global	ADC_Stop
 265              		.code	16
 266              		.thumb_func
 267              		.type	ADC_Stop, %function
 268              	ADC_Stop:
 269              	.LFB4:
 348:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 12


 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 270              		.loc 1 366 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 275              		.loc 1 367 0
 276 0000 024A     		ldr	r2, .L18
 277 0002 1368     		ldr	r3, [r2]
 278 0004 5B00     		lsls	r3, r3, #1
 279 0006 5B08     		lsrs	r3, r3, #1
 280 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC.c **** }
 281              		.loc 1 368 0
 282              		@ sp needed
 283 000a 7047     		bx	lr
 284              	.L19:
 285              		.align	2
 286              	.L18:
 287 000c 00003A40 		.word	1077542912
 288              		.cfi_endproc
 289              	.LFE4:
 290              		.size	ADC_Stop, .-ADC_Stop
 291              		.section	.text.ADC_StartConvert,"ax",%progbits
 292              		.align	2
 293              		.global	ADC_StartConvert
 294              		.code	16
 295              		.thumb_func
 296              		.type	ADC_StartConvert, %function
 297              	ADC_StartConvert:
 298              	.LFB5:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 13


 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 299              		.loc 1 392 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 304              		.loc 1 394 0
 305 0000 034A     		ldr	r2, .L21
 306 0002 1368     		ldr	r3, [r2]
 307 0004 8021     		movs	r1, #128
 308 0006 4902     		lsls	r1, r1, #9
 309 0008 0B43     		orrs	r3, r1
 310 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 311              		.loc 1 399 0
 312              		@ sp needed
 313 000c 7047     		bx	lr
 314              	.L22:
 315 000e C046     		.align	2
 316              	.L21:
 317 0010 04003A40 		.word	1077542916
 318              		.cfi_endproc
 319              	.LFE5:
 320              		.size	ADC_StartConvert, .-ADC_StartConvert
 321              		.section	.text.ADC_StopConvert,"ax",%progbits
 322              		.align	2
 323              		.global	ADC_StopConvert
 324              		.code	16
 325              		.thumb_func
 326              		.type	ADC_StopConvert, %function
 327              	ADC_StopConvert:
 328              	.LFB6:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 14


 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 329              		.loc 1 417 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 334              		.loc 1 419 0
 335 0000 024A     		ldr	r2, .L24
 336 0002 1168     		ldr	r1, [r2]
 337 0004 024B     		ldr	r3, .L24+4
 338 0006 0B40     		ands	r3, r1
 339 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 340              		.loc 1 421 0
 341              		@ sp needed
 342 000a 7047     		bx	lr
 343              	.L25:
 344              		.align	2
 345              	.L24:
 346 000c 04003A40 		.word	1077542916
 347 0010 FFFFFEFF 		.word	-65537
 348              		.cfi_endproc
 349              	.LFE6:
 350              		.size	ADC_StopConvert, .-ADC_StopConvert
 351              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 352              		.align	2
 353              		.global	ADC_IsEndConversion
 354              		.code	16
 355              		.thumb_func
 356              		.type	ADC_IsEndConversion, %function
 357              	ADC_IsEndConversion:
 358              	.LFB7:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 15


 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 359              		.loc 1 451 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 364              	.LVL13:
 365 0000 0200     		movs	r2, r0
 366              	.LVL14:
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 367              		.loc 1 454 0
 368 0002 8307     		lsls	r3, r0, #30
 369 0004 0CD0     		beq	.L30
 370              	.LVL15:
 371              	.L29:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 372              		.loc 1 458 0 discriminator 2
 373 0006 074B     		ldr	r3, .L31
 374 0008 1B68     		ldr	r3, [r3]
 375 000a 0120     		movs	r0, #1
 376 000c 1840     		ands	r0, r3
 377              	.LVL16:
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 378              		.loc 1 459 0 discriminator 2
 379 000e 01D1     		bne	.L28
 380              		.loc 1 459 0 is_stmt 0 discriminator 1
 381 0010 9307     		lsls	r3, r2, #30
 382 0012 F8D4     		bmi	.L29
 383              	.L28:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 384              		.loc 1 461 0 is_stmt 1
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 16


 385 0014 0028     		cmp	r0, #0
 386 0016 04D0     		beq	.L27
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 387              		.loc 1 464 0
 388 0018 0122     		movs	r2, #1
 389              	.LVL17:
 390 001a 024B     		ldr	r3, .L31
 391 001c 1A60     		str	r2, [r3]
 392 001e 00E0     		b	.L27
 393              	.LVL18:
 394              	.L30:
 452:Generated_Source\PSoC4/ADC.c **** 
 395              		.loc 1 452 0
 396 0020 0020     		movs	r0, #0
 397              	.LVL19:
 398              	.L27:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 399              		.loc 1 486 0
 400              		@ sp needed
 401 0022 7047     		bx	lr
 402              	.L32:
 403              		.align	2
 404              	.L31:
 405 0024 10023A40 		.word	1077543440
 406              		.cfi_endproc
 407              	.LFE7:
 408              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 409              		.section	.text.ADC_GetResult16,"ax",%progbits
 410              		.align	2
 411              		.global	ADC_GetResult16
 412              		.code	16
 413              		.thumb_func
 414              		.type	ADC_GetResult16, %function
 415              	ADC_GetResult16:
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 17


 416              	.LFB8:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 417              		.loc 1 505 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              	.LVL20:
 422 0000 10B5     		push	{r4, lr}
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 4, -8
 425              		.cfi_offset 14, -4
 426 0002 041E     		subs	r4, r0, #0
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 427              		.loc 1 509 0
 428 0004 02D0     		beq	.L34
 429              		.loc 1 509 0 is_stmt 0 discriminator 1
 430 0006 0020     		movs	r0, #0
 431              	.LVL21:
 432 0008 FFF7FEFF 		bl	CyHalt
 433              	.LVL22:
 434              	.L34:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 435              		.loc 1 511 0 is_stmt 1
 436 000c 002C     		cmp	r4, #0
 437 000e 07D1     		bne	.L36
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 438              		.loc 1 513 0
 439 0010 A400     		lsls	r4, r4, #2
 440              	.LVL23:
 441 0012 054B     		ldr	r3, .L37
 442 0014 9C46     		mov	ip, r3
 443 0016 6444     		add	r4, r4, ip
 444 0018 2068     		ldr	r0, [r4]
 445 001a 0004     		lsls	r0, r0, #16
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 18


 446 001c 000C     		lsrs	r0, r0, #16
 447              	.LVL24:
 448 001e 00E0     		b	.L35
 449              	.LVL25:
 450              	.L36:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 451              		.loc 1 521 0
 452 0020 0020     		movs	r0, #0
 453              	.LVL26:
 454              	.L35:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 455              		.loc 1 525 0
 456 0022 00B2     		sxth	r0, r0
 457              	.LVL27:
 526:Generated_Source\PSoC4/ADC.c **** }
 458              		.loc 1 526 0
 459              		@ sp needed
 460 0024 10BD     		pop	{r4, pc}
 461              	.L38:
 462 0026 C046     		.align	2
 463              	.L37:
 464 0028 80013A40 		.word	1077543296
 465              		.cfi_endproc
 466              	.LFE8:
 467              		.size	ADC_GetResult16, .-ADC_GetResult16
 468              		.section	.text.ADC_SetChanMask,"ax",%progbits
 469              		.align	2
 470              		.global	ADC_SetChanMask
 471              		.code	16
 472              		.thumb_func
 473              		.type	ADC_SetChanMask, %function
 474              	ADC_SetChanMask:
 475              	.LFB9:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 19


 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 476              		.loc 1 550 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              		@ link register save eliminated.
 481              	.LVL28:
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 482              		.loc 1 551 0
 483 0000 0123     		movs	r3, #1
 484 0002 1840     		ands	r0, r3
 485              	.LVL29:
 486 0004 014B     		ldr	r3, .L40
 487 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 488              		.loc 1 552 0
 489              		@ sp needed
 490 0008 7047     		bx	lr
 491              	.L41:
 492 000a C046     		.align	2
 493              	.L40:
 494 000c 20003A40 		.word	1077542944
 495              		.cfi_endproc
 496              	.LFE9:
 497              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 498              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 499              		.align	2
 500              		.global	ADC_SetLowLimit
 501              		.code	16
 502              		.thumb_func
 503              		.type	ADC_SetLowLimit, %function
 504              	ADC_SetLowLimit:
 505              	.LFB10:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 20


 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 506              		.loc 1 594 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511              	.LVL30:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 512              		.loc 1 595 0
 513 0000 054A     		ldr	r2, .L43
 514 0002 1368     		ldr	r3, [r2]
 515 0004 1B0C     		lsrs	r3, r3, #16
 516 0006 1B04     		lsls	r3, r3, #16
 517 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 518              		.loc 1 596 0
 519 000a 1368     		ldr	r3, [r2]
 520 000c 0004     		lsls	r0, r0, #16
 521              	.LVL31:
 522 000e 000C     		lsrs	r0, r0, #16
 523 0010 1843     		orrs	r0, r3
 524 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 525              		.loc 1 597 0
 526              		@ sp needed
 527 0014 7047     		bx	lr
 528              	.L44:
 529 0016 C046     		.align	2
 530              	.L43:
 531 0018 18003A40 		.word	1077542936
 532              		.cfi_endproc
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 21


 533              	.LFE10:
 534              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 535              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 536              		.align	2
 537              		.global	ADC_SetHighLimit
 538              		.code	16
 539              		.thumb_func
 540              		.type	ADC_SetHighLimit, %function
 541              	ADC_SetHighLimit:
 542              	.LFB11:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 543              		.loc 1 615 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548              	.LVL32:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 549              		.loc 1 616 0
 550 0000 044A     		ldr	r2, .L46
 551 0002 1368     		ldr	r3, [r2]
 552 0004 1B04     		lsls	r3, r3, #16
 553 0006 1B0C     		lsrs	r3, r3, #16
 554 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 555              		.loc 1 617 0
 556 000a 1368     		ldr	r3, [r2]
 557 000c 0004     		lsls	r0, r0, #16
 558              	.LVL33:
 559 000e 1843     		orrs	r0, r3
 560 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 561              		.loc 1 618 0
 562              		@ sp needed
 563 0012 7047     		bx	lr
 564              	.L47:
 565              		.align	2
 566              	.L46:
 567 0014 18003A40 		.word	1077542936
 568              		.cfi_endproc
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 22


 569              	.LFE11:
 570              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 571              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 572              		.align	2
 573              		.global	ADC_SetLimitMask
 574              		.code	16
 575              		.thumb_func
 576              		.type	ADC_SetLimitMask, %function
 577              	ADC_SetLimitMask:
 578              	.LFB12:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 579              		.loc 1 639 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 0
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584              	.LVL34:
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 585              		.loc 1 640 0
 586 0000 0123     		movs	r3, #1
 587 0002 1840     		ands	r0, r3
 588              	.LVL35:
 589 0004 014B     		ldr	r3, .L49
 590 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 591              		.loc 1 641 0
 592              		@ sp needed
 593 0008 7047     		bx	lr
 594              	.L50:
 595 000a C046     		.align	2
 596              	.L49:
 597 000c 38023A40 		.word	1077543480
 598              		.cfi_endproc
 599              	.LFE12:
 600              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 601              		.section	.text.ADC_SetSatMask,"ax",%progbits
 602              		.align	2
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 23


 603              		.global	ADC_SetSatMask
 604              		.code	16
 605              		.thumb_func
 606              		.type	ADC_SetSatMask, %function
 607              	ADC_SetSatMask:
 608              	.LFB13:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 609              		.loc 1 662 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 614              	.LVL36:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 615              		.loc 1 663 0
 616 0000 0123     		movs	r3, #1
 617 0002 1840     		ands	r0, r3
 618              	.LVL37:
 619 0004 014B     		ldr	r3, .L52
 620 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 621              		.loc 1 664 0
 622              		@ sp needed
 623 0008 7047     		bx	lr
 624              	.L53:
 625 000a C046     		.align	2
 626              	.L52:
 627 000c 28023A40 		.word	1077543464
 628              		.cfi_endproc
 629              	.LFE13:
 630              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 631              		.section	.text.ADC_SetOffset,"ax",%progbits
 632              		.align	2
 633              		.global	ADC_SetOffset
 634              		.code	16
 635              		.thumb_func
 636              		.type	ADC_SetOffset, %function
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 24


 637              	ADC_SetOffset:
 638              	.LFB14:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 639              		.loc 1 690 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              	.LVL38:
 644 0000 70B5     		push	{r4, r5, r6, lr}
 645              		.cfi_def_cfa_offset 16
 646              		.cfi_offset 4, -16
 647              		.cfi_offset 5, -12
 648              		.cfi_offset 6, -8
 649              		.cfi_offset 14, -4
 650 0002 0400     		movs	r4, r0
 651 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 652              		.loc 1 692 0
 653 0006 0028     		cmp	r0, #0
 654 0008 02D0     		beq	.L55
 655              		.loc 1 692 0 is_stmt 0 discriminator 1
 656 000a 0020     		movs	r0, #0
 657              	.LVL39:
 658 000c FFF7FEFF 		bl	CyHalt
 659              	.LVL40:
 660              	.L55:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 661              		.loc 1 694 0 is_stmt 1
 662 0010 6400     		lsls	r4, r4, #1
 663              	.LVL41:
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 25


 664 0012 014B     		ldr	r3, .L56
 665 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 666              		.loc 1 695 0
 667              		@ sp needed
 668 0016 70BD     		pop	{r4, r5, r6, pc}
 669              	.L57:
 670              		.align	2
 671              	.L56:
 672 0018 00000000 		.word	ADC_offset
 673              		.cfi_endproc
 674              	.LFE14:
 675              		.size	ADC_SetOffset, .-ADC_SetOffset
 676              		.section	.text.ADC_SetGain,"ax",%progbits
 677              		.align	2
 678              		.global	ADC_SetGain
 679              		.code	16
 680              		.thumb_func
 681              		.type	ADC_SetGain, %function
 682              	ADC_SetGain:
 683              	.LFB15:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 684              		.loc 1 724 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              	.LVL42:
 689 0000 70B5     		push	{r4, r5, r6, lr}
 690              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 26


 691              		.cfi_offset 4, -16
 692              		.cfi_offset 5, -12
 693              		.cfi_offset 6, -8
 694              		.cfi_offset 14, -4
 695 0002 0400     		movs	r4, r0
 696 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 697              		.loc 1 726 0
 698 0006 0028     		cmp	r0, #0
 699 0008 02D0     		beq	.L59
 700              		.loc 1 726 0 is_stmt 0 discriminator 1
 701 000a 0020     		movs	r0, #0
 702              	.LVL43:
 703 000c FFF7FEFF 		bl	CyHalt
 704              	.LVL44:
 705              	.L59:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 706              		.loc 1 728 0 is_stmt 1
 707 0010 A400     		lsls	r4, r4, #2
 708              	.LVL45:
 709 0012 014B     		ldr	r3, .L60
 710 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 711              		.loc 1 729 0
 712              		@ sp needed
 713              	.LVL46:
 714 0016 70BD     		pop	{r4, r5, r6, pc}
 715              	.L61:
 716              		.align	2
 717              	.L60:
 718 0018 00000000 		.word	ADC_countsPer10Volt
 719              		.cfi_endproc
 720              	.LFE15:
 721              		.size	ADC_SetGain, .-ADC_SetGain
 722              		.global	__aeabi_idiv
 723              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 724              		.align	2
 725              		.global	ADC_CountsTo_mVolts
 726              		.code	16
 727              		.thumb_func
 728              		.type	ADC_CountsTo_mVolts, %function
 729              	ADC_CountsTo_mVolts:
 730              	.LFB16:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 27


 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 731              		.loc 1 757 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735              	.LVL47:
 736 0000 70B5     		push	{r4, r5, r6, lr}
 737              		.cfi_def_cfa_offset 16
 738              		.cfi_offset 4, -16
 739              		.cfi_offset 5, -12
 740              		.cfi_offset 6, -8
 741              		.cfi_offset 14, -4
 742 0002 0400     		movs	r4, r0
 743 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 744              		.loc 1 761 0
 745 0006 0028     		cmp	r0, #0
 746 0008 02D0     		beq	.L63
 747              		.loc 1 761 0 is_stmt 0 discriminator 1
 748 000a 0020     		movs	r0, #0
 749              	.LVL48:
 750 000c FFF7FEFF 		bl	CyHalt
 751              	.LVL49:
 752              	.L63:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 753              		.loc 1 772 0 is_stmt 1
 754 0010 6300     		lsls	r3, r4, #1
 755 0012 0F4A     		ldr	r2, .L66
 756 0014 995A     		ldrh	r1, [r3, r2]
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 28


 757 0016 09B2     		sxth	r1, r1
 758 0018 691A     		subs	r1, r5, r1
 759 001a 09B2     		sxth	r1, r1
 760              	.LVL50:
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 761              		.loc 1 774 0
 762 001c 0D48     		ldr	r0, .L66+4
 763 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 764              		.loc 1 775 0
 765 0020 0029     		cmp	r1, #0
 766 0022 06DD     		ble	.L64
 767              		.loc 1 775 0 is_stmt 0 discriminator 1
 768 0024 A300     		lsls	r3, r4, #2
 769 0026 0C4A     		ldr	r2, .L66+8
 770 0028 9A58     		ldr	r2, [r3, r2]
 771 002a D30F     		lsrs	r3, r2, #31
 772 002c 9A18     		adds	r2, r3, r2
 773 002e 5310     		asrs	r3, r2, #1
 774 0030 06E0     		b	.L65
 775              	.L64:
 776              		.loc 1 775 0 discriminator 2
 777 0032 A300     		lsls	r3, r4, #2
 778 0034 084A     		ldr	r2, .L66+8
 779 0036 9A58     		ldr	r2, [r3, r2]
 780 0038 D30F     		lsrs	r3, r2, #31
 781 003a 9A18     		adds	r2, r3, r2
 782 003c 5210     		asrs	r2, r2, #1
 783 003e 5342     		rsbs	r3, r2, #0
 784              	.L65:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 785              		.loc 1 774 0 is_stmt 1
 786 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 787              		.loc 1 776 0
 788 0042 A400     		lsls	r4, r4, #2
 789              	.LVL51:
 790 0044 044B     		ldr	r3, .L66+8
 791 0046 E158     		ldr	r1, [r4, r3]
 792              	.LVL52:
 793 0048 FFF7FEFF 		bl	__aeabi_idiv
 794              	.LVL53:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 795              		.loc 1 774 0
 796 004c 00B2     		sxth	r0, r0
 797              	.LVL54:
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC.c ****     }
 798              		.loc 1 779 0
 799              		@ sp needed
 800 004e 70BD     		pop	{r4, r5, r6, pc}
 801              	.L67:
 802              		.align	2
 803              	.L66:
 804 0050 00000000 		.word	ADC_offset
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 29


 805 0054 10270000 		.word	10000
 806 0058 00000000 		.word	ADC_countsPer10Volt
 807              		.cfi_endproc
 808              	.LFE16:
 809              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 810              		.global	__aeabi_lmul
 811              		.global	__aeabi_ldivmod
 812              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 813              		.align	2
 814              		.global	ADC_CountsTo_uVolts
 815              		.code	16
 816              		.thumb_func
 817              		.type	ADC_CountsTo_uVolts, %function
 818              	ADC_CountsTo_uVolts:
 819              	.LFB17:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 820              		.loc 1 811 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              	.LVL55:
 825 0000 70B5     		push	{r4, r5, r6, lr}
 826              		.cfi_def_cfa_offset 16
 827              		.cfi_offset 4, -16
 828              		.cfi_offset 5, -12
 829              		.cfi_offset 6, -8
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 30


 830              		.cfi_offset 14, -4
 831 0002 0500     		movs	r5, r0
 832 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 833              		.loc 1 815 0
 834 0006 0028     		cmp	r0, #0
 835 0008 02D0     		beq	.L69
 836              		.loc 1 815 0 is_stmt 0 discriminator 1
 837 000a 0020     		movs	r0, #0
 838              	.LVL56:
 839 000c FFF7FEFF 		bl	CyHalt
 840              	.LVL57:
 841              	.L69:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 842              		.loc 1 826 0 is_stmt 1
 843 0010 6A00     		lsls	r2, r5, #1
 844 0012 084B     		ldr	r3, .L70
 845 0014 D05A     		ldrh	r0, [r2, r3]
 846 0016 00B2     		sxth	r0, r0
 847 0018 201A     		subs	r0, r4, r0
 848 001a 00B2     		sxth	r0, r0
 849              	.LVL58:
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 850              		.loc 1 828 0
 851 001c C117     		asrs	r1, r0, #31
 852 001e 064A     		ldr	r2, .L70+4
 853 0020 0023     		movs	r3, #0
 854 0022 FFF7FEFF 		bl	__aeabi_lmul
 855              	.LVL59:
 856 0026 AD00     		lsls	r5, r5, #2
 857              	.LVL60:
 858 0028 044B     		ldr	r3, .L70+8
 859 002a EA58     		ldr	r2, [r5, r3]
 860 002c D317     		asrs	r3, r2, #31
 861 002e FFF7FEFF 		bl	__aeabi_ldivmod
 862              	.LVL61:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC.c ****     }
 863              		.loc 1 831 0
 864              		@ sp needed
 865 0032 70BD     		pop	{r4, r5, r6, pc}
 866              	.L71:
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 31


 867              		.align	2
 868              	.L70:
 869 0034 00000000 		.word	ADC_offset
 870 0038 80969800 		.word	10000000
 871 003c 00000000 		.word	ADC_countsPer10Volt
 872              		.cfi_endproc
 873              	.LFE17:
 874              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 875              		.global	__aeabi_i2f
 876              		.global	__aeabi_fmul
 877              		.global	__aeabi_fdiv
 878              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 879              		.align	2
 880              		.global	ADC_CountsTo_Volts
 881              		.code	16
 882              		.thumb_func
 883              		.type	ADC_CountsTo_Volts, %function
 884              	ADC_CountsTo_Volts:
 885              	.LFB18:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 886              		.loc 1 856 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              	.LVL62:
 891 0000 70B5     		push	{r4, r5, r6, lr}
 892              		.cfi_def_cfa_offset 16
 893              		.cfi_offset 4, -16
 894              		.cfi_offset 5, -12
 895              		.cfi_offset 6, -8
 896              		.cfi_offset 14, -4
 897 0002 0400     		movs	r4, r0
 898 0004 0D00     		movs	r5, r1
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 32


 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 899              		.loc 1 860 0
 900 0006 0028     		cmp	r0, #0
 901 0008 02D0     		beq	.L73
 902              		.loc 1 860 0 is_stmt 0 discriminator 1
 903 000a 0020     		movs	r0, #0
 904              	.LVL63:
 905 000c FFF7FEFF 		bl	CyHalt
 906              	.LVL64:
 907              	.L73:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 908              		.loc 1 871 0 is_stmt 1
 909 0010 6200     		lsls	r2, r4, #1
 910 0012 0A4B     		ldr	r3, .L74
 911 0014 D05A     		ldrh	r0, [r2, r3]
 912 0016 00B2     		sxth	r0, r0
 913 0018 281A     		subs	r0, r5, r0
 914 001a 00B2     		sxth	r0, r0
 915              	.LVL65:
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 916              		.loc 1 873 0
 917 001c FFF7FEFF 		bl	__aeabi_i2f
 918              	.LVL66:
 919 0020 0749     		ldr	r1, .L74+4
 920 0022 FFF7FEFF 		bl	__aeabi_fmul
 921              	.LVL67:
 922 0026 051C     		adds	r5, r0, #0
 923 0028 A400     		lsls	r4, r4, #2
 924              	.LVL68:
 925 002a 064B     		ldr	r3, .L74+8
 926 002c E058     		ldr	r0, [r4, r3]
 927 002e FFF7FEFF 		bl	__aeabi_i2f
 928              	.LVL69:
 929 0032 011C     		adds	r1, r0, #0
 930 0034 281C     		adds	r0, r5, #0
 931 0036 FFF7FEFF 		bl	__aeabi_fdiv
 932              	.LVL70:
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC.c ****     }
 933              		.loc 1 876 0
 934              		@ sp needed
 935 003a 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 33


 936              	.L75:
 937              		.align	2
 938              	.L74:
 939 003c 00000000 		.word	ADC_offset
 940 0040 00002041 		.word	1092616192
 941 0044 00000000 		.word	ADC_countsPer10Volt
 942              		.cfi_endproc
 943              	.LFE18:
 944              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 945              		.comm	ADC_countsPer10Volt,4,4
 946              		.comm	ADC_offset,2,4
 947              		.global	ADC_initVar
 948              		.bss
 949              		.set	.LANCHOR0,. + 0
 950              		.type	ADC_initVar, %object
 951              		.size	ADC_initVar, 1
 952              	ADC_initVar:
 953 0000 00       		.space	1
 954              		.text
 955              	.Letext0:
 956              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 957              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 958              		.section	.debug_info,"",%progbits
 959              	.Ldebug_info0:
 960 0000 75050000 		.4byte	0x575
 961 0004 0400     		.2byte	0x4
 962 0006 00000000 		.4byte	.Ldebug_abbrev0
 963 000a 04       		.byte	0x4
 964 000b 01       		.uleb128 0x1
 965 000c 32000000 		.4byte	.LASF63
 966 0010 0C       		.byte	0xc
 967 0011 88020000 		.4byte	.LASF64
 968 0015 82030000 		.4byte	.LASF65
 969 0019 00000000 		.4byte	.Ldebug_ranges0+0
 970 001d 00000000 		.4byte	0
 971 0021 00000000 		.4byte	.Ldebug_line0
 972 0025 02       		.uleb128 0x2
 973 0026 01       		.byte	0x1
 974 0027 06       		.byte	0x6
 975 0028 F6000000 		.4byte	.LASF0
 976 002c 02       		.uleb128 0x2
 977 002d 01       		.byte	0x1
 978 002e 08       		.byte	0x8
 979 002f EC020000 		.4byte	.LASF1
 980 0033 02       		.uleb128 0x2
 981 0034 02       		.byte	0x2
 982 0035 05       		.byte	0x5
 983 0036 05030000 		.4byte	.LASF2
 984 003a 02       		.uleb128 0x2
 985 003b 02       		.byte	0x2
 986 003c 07       		.byte	0x7
 987 003d D7010000 		.4byte	.LASF3
 988 0041 02       		.uleb128 0x2
 989 0042 04       		.byte	0x4
 990 0043 05       		.byte	0x5
 991 0044 19010000 		.4byte	.LASF4
 992 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 34


 993 0049 04       		.byte	0x4
 994 004a 07       		.byte	0x7
 995 004b A6010000 		.4byte	.LASF5
 996 004f 02       		.uleb128 0x2
 997 0050 08       		.byte	0x8
 998 0051 05       		.byte	0x5
 999 0052 E8000000 		.4byte	.LASF6
 1000 0056 02       		.uleb128 0x2
 1001 0057 08       		.byte	0x8
 1002 0058 07       		.byte	0x7
 1003 0059 C0000000 		.4byte	.LASF7
 1004 005d 03       		.uleb128 0x3
 1005 005e 04       		.byte	0x4
 1006 005f 05       		.byte	0x5
 1007 0060 696E7400 		.ascii	"int\000"
 1008 0064 02       		.uleb128 0x2
 1009 0065 04       		.byte	0x4
 1010 0066 07       		.byte	0x7
 1011 0067 92010000 		.4byte	.LASF8
 1012 006b 04       		.uleb128 0x4
 1013 006c 4A010000 		.4byte	.LASF9
 1014 0070 02       		.byte	0x2
 1015 0071 E701     		.2byte	0x1e7
 1016 0073 2C000000 		.4byte	0x2c
 1017 0077 04       		.uleb128 0x4
 1018 0078 00000000 		.4byte	.LASF10
 1019 007c 02       		.byte	0x2
 1020 007d E801     		.2byte	0x1e8
 1021 007f 3A000000 		.4byte	0x3a
 1022 0083 04       		.uleb128 0x4
 1023 0084 61010000 		.4byte	.LASF11
 1024 0088 02       		.byte	0x2
 1025 0089 E901     		.2byte	0x1e9
 1026 008b 48000000 		.4byte	0x48
 1027 008f 04       		.uleb128 0x4
 1028 0090 57030000 		.4byte	.LASF12
 1029 0094 02       		.byte	0x2
 1030 0095 EB01     		.2byte	0x1eb
 1031 0097 33000000 		.4byte	0x33
 1032 009b 04       		.uleb128 0x4
 1033 009c 09010000 		.4byte	.LASF13
 1034 00a0 02       		.byte	0x2
 1035 00a1 EC01     		.2byte	0x1ec
 1036 00a3 41000000 		.4byte	0x41
 1037 00a7 04       		.uleb128 0x4
 1038 00a8 16020000 		.4byte	.LASF14
 1039 00ac 02       		.byte	0x2
 1040 00ad ED01     		.2byte	0x1ed
 1041 00af B3000000 		.4byte	0xb3
 1042 00b3 02       		.uleb128 0x2
 1043 00b4 04       		.byte	0x4
 1044 00b5 04       		.byte	0x4
 1045 00b6 B1020000 		.4byte	.LASF15
 1046 00ba 02       		.uleb128 0x2
 1047 00bb 08       		.byte	0x8
 1048 00bc 04       		.byte	0x4
 1049 00bd 5A010000 		.4byte	.LASF16
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 35


 1050 00c1 04       		.uleb128 0x4
 1051 00c2 61020000 		.4byte	.LASF17
 1052 00c6 02       		.byte	0x2
 1053 00c7 F201     		.2byte	0x1f2
 1054 00c9 4F000000 		.4byte	0x4f
 1055 00cd 02       		.uleb128 0x2
 1056 00ce 01       		.byte	0x1
 1057 00cf 08       		.byte	0x8
 1058 00d0 23030000 		.4byte	.LASF18
 1059 00d4 04       		.uleb128 0x4
 1060 00d5 10020000 		.4byte	.LASF19
 1061 00d9 02       		.byte	0x2
 1062 00da 9302     		.2byte	0x293
 1063 00dc E0000000 		.4byte	0xe0
 1064 00e0 05       		.uleb128 0x5
 1065 00e1 83000000 		.4byte	0x83
 1066 00e5 02       		.uleb128 0x2
 1067 00e6 08       		.byte	0x8
 1068 00e7 04       		.byte	0x4
 1069 00e8 30020000 		.4byte	.LASF20
 1070 00ec 02       		.uleb128 0x2
 1071 00ed 04       		.byte	0x4
 1072 00ee 07       		.byte	0x7
 1073 00ef 1E020000 		.4byte	.LASF21
 1074 00f3 06       		.uleb128 0x6
 1075 00f4 29000000 		.4byte	.LASF25
 1076 00f8 01       		.byte	0x1
 1077 00f9 5E       		.byte	0x5e
 1078 00fa 00000000 		.4byte	.LFB2
 1079 00fe E8000000 		.4byte	.LFE2-.LFB2
 1080 0102 01       		.uleb128 0x1
 1081 0103 9C       		.byte	0x9c
 1082 0104 5D010000 		.4byte	0x15d
 1083 0108 07       		.uleb128 0x7
 1084 0109 18030000 		.4byte	.LASF22
 1085 010d 01       		.byte	0x1
 1086 010e 60       		.byte	0x60
 1087 010f 83000000 		.4byte	0x83
 1088 0113 00000000 		.4byte	.LLST0
 1089 0117 07       		.uleb128 0x7
 1090 0118 CD010000 		.4byte	.LASF23
 1091 011c 01       		.byte	0x1
 1092 011d 61       		.byte	0x61
 1093 011e 83000000 		.4byte	0x83
 1094 0122 1F000000 		.4byte	.LLST1
 1095 0126 07       		.uleb128 0x7
 1096 0127 0F000000 		.4byte	.LASF24
 1097 012b 01       		.byte	0x1
 1098 012c 62       		.byte	0x62
 1099 012d 9B000000 		.4byte	0x9b
 1100 0131 5B000000 		.4byte	.LLST2
 1101 0135 08       		.uleb128 0x8
 1102 0136 0A000000 		.4byte	.LVL0
 1103 013a 4C050000 		.4byte	0x54c
 1104 013e 4D010000 		.4byte	0x14d
 1105 0142 09       		.uleb128 0x9
 1106 0143 01       		.uleb128 0x1
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 36


 1107 0144 50       		.byte	0x50
 1108 0145 01       		.uleb128 0x1
 1109 0146 40       		.byte	0x40
 1110 0147 09       		.uleb128 0x9
 1111 0148 01       		.uleb128 0x1
 1112 0149 51       		.byte	0x51
 1113 014a 01       		.uleb128 0x1
 1114 014b 33       		.byte	0x33
 1115 014c 00       		.byte	0
 1116 014d 0A       		.uleb128 0xa
 1117 014e 12000000 		.4byte	.LVL1
 1118 0152 57050000 		.4byte	0x557
 1119 0156 09       		.uleb128 0x9
 1120 0157 01       		.uleb128 0x1
 1121 0158 50       		.byte	0x50
 1122 0159 01       		.uleb128 0x1
 1123 015a 40       		.byte	0x40
 1124 015b 00       		.byte	0
 1125 015c 00       		.byte	0
 1126 015d 0B       		.uleb128 0xb
 1127 015e 4C030000 		.4byte	.LASF26
 1128 0162 01       		.byte	0x1
 1129 0163 4A01     		.2byte	0x14a
 1130 0165 00000000 		.4byte	.LFB3
 1131 0169 30000000 		.4byte	.LFE3-.LFB3
 1132 016d 01       		.uleb128 0x1
 1133 016e 9C       		.byte	0x9c
 1134 016f 83010000 		.4byte	0x183
 1135 0173 0A       		.uleb128 0xa
 1136 0174 24000000 		.4byte	.LVL10
 1137 0178 62050000 		.4byte	0x562
 1138 017c 09       		.uleb128 0x9
 1139 017d 01       		.uleb128 0x1
 1140 017e 50       		.byte	0x50
 1141 017f 01       		.uleb128 0x1
 1142 0180 3A       		.byte	0x3a
 1143 0181 00       		.byte	0
 1144 0182 00       		.byte	0
 1145 0183 06       		.uleb128 0x6
 1146 0184 0F010000 		.4byte	.LASF27
 1147 0188 01       		.byte	0x1
 1148 0189 3F       		.byte	0x3f
 1149 018a 00000000 		.4byte	.LFB1
 1150 018e 20000000 		.4byte	.LFE1-.LFB1
 1151 0192 01       		.uleb128 0x1
 1152 0193 9C       		.byte	0x9c
 1153 0194 AB010000 		.4byte	0x1ab
 1154 0198 0C       		.uleb128 0xc
 1155 0199 0E000000 		.4byte	.LVL11
 1156 019d F3000000 		.4byte	0xf3
 1157 01a1 0C       		.uleb128 0xc
 1158 01a2 18000000 		.4byte	.LVL12
 1159 01a6 5D010000 		.4byte	0x15d
 1160 01aa 00       		.byte	0
 1161 01ab 0D       		.uleb128 0xd
 1162 01ac 0F030000 		.4byte	.LASF28
 1163 01b0 01       		.byte	0x1
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 37


 1164 01b1 6D01     		.2byte	0x16d
 1165 01b3 00000000 		.4byte	.LFB4
 1166 01b7 10000000 		.4byte	.LFE4-.LFB4
 1167 01bb 01       		.uleb128 0x1
 1168 01bc 9C       		.byte	0x9c
 1169 01bd 0D       		.uleb128 0xd
 1170 01be D7000000 		.4byte	.LASF29
 1171 01c2 01       		.byte	0x1
 1172 01c3 8701     		.2byte	0x187
 1173 01c5 00000000 		.4byte	.LFB5
 1174 01c9 14000000 		.4byte	.LFE5-.LFB5
 1175 01cd 01       		.uleb128 0x1
 1176 01ce 9C       		.byte	0x9c
 1177 01cf 0D       		.uleb128 0xd
 1178 01d0 F9010000 		.4byte	.LASF30
 1179 01d4 01       		.byte	0x1
 1180 01d5 A001     		.2byte	0x1a0
 1181 01d7 00000000 		.4byte	.LFB6
 1182 01db 14000000 		.4byte	.LFE6-.LFB6
 1183 01df 01       		.uleb128 0x1
 1184 01e0 9C       		.byte	0x9c
 1185 01e1 0E       		.uleb128 0xe
 1186 01e2 4D020000 		.4byte	.LASF32
 1187 01e6 01       		.byte	0x1
 1188 01e7 C201     		.2byte	0x1c2
 1189 01e9 83000000 		.4byte	0x83
 1190 01ed 00000000 		.4byte	.LFB7
 1191 01f1 28000000 		.4byte	.LFE7-.LFB7
 1192 01f5 01       		.uleb128 0x1
 1193 01f6 9C       		.byte	0x9c
 1194 01f7 1C020000 		.4byte	0x21c
 1195 01fb 0F       		.uleb128 0xf
 1196 01fc 79010000 		.4byte	.LASF34
 1197 0200 01       		.byte	0x1
 1198 0201 C201     		.2byte	0x1c2
 1199 0203 83000000 		.4byte	0x83
 1200 0207 71000000 		.4byte	.LLST3
 1201 020b 10       		.uleb128 0x10
 1202 020c 02010000 		.4byte	.LASF31
 1203 0210 01       		.byte	0x1
 1204 0211 C401     		.2byte	0x1c4
 1205 0213 83000000 		.4byte	0x83
 1206 0217 B6000000 		.4byte	.LLST4
 1207 021b 00       		.byte	0
 1208 021c 0E       		.uleb128 0xe
 1209 021d 72030000 		.4byte	.LASF33
 1210 0221 01       		.byte	0x1
 1211 0222 F801     		.2byte	0x1f8
 1212 0224 8F000000 		.4byte	0x8f
 1213 0228 00000000 		.4byte	.LFB8
 1214 022c 2C000000 		.4byte	.LFE8-.LFB8
 1215 0230 01       		.uleb128 0x1
 1216 0231 9C       		.byte	0x9c
 1217 0232 66020000 		.4byte	0x266
 1218 0236 0F       		.uleb128 0xf
 1219 0237 1E030000 		.4byte	.LASF35
 1220 023b 01       		.byte	0x1
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 38


 1221 023c F801     		.2byte	0x1f8
 1222 023e 83000000 		.4byte	0x83
 1223 0242 EC000000 		.4byte	.LLST5
 1224 0246 10       		.uleb128 0x10
 1225 0247 6B030000 		.4byte	.LASF36
 1226 024b 01       		.byte	0x1
 1227 024c FA01     		.2byte	0x1fa
 1228 024e 83000000 		.4byte	0x83
 1229 0252 31010000 		.4byte	.LLST6
 1230 0256 0A       		.uleb128 0xa
 1231 0257 0C000000 		.4byte	.LVL22
 1232 025b 6D050000 		.4byte	0x56d
 1233 025f 09       		.uleb128 0x9
 1234 0260 01       		.uleb128 0x1
 1235 0261 50       		.byte	0x50
 1236 0262 01       		.uleb128 0x1
 1237 0263 30       		.byte	0x30
 1238 0264 00       		.byte	0
 1239 0265 00       		.byte	0
 1240 0266 0B       		.uleb128 0xb
 1241 0267 78020000 		.4byte	.LASF37
 1242 026b 01       		.byte	0x1
 1243 026c 2502     		.2byte	0x225
 1244 026e 00000000 		.4byte	.LFB9
 1245 0272 10000000 		.4byte	.LFE9-.LFB9
 1246 0276 01       		.uleb128 0x1
 1247 0277 9C       		.byte	0x9c
 1248 0278 8D020000 		.4byte	0x28d
 1249 027c 0F       		.uleb128 0xf
 1250 027d 68010000 		.4byte	.LASF38
 1251 0281 01       		.byte	0x1
 1252 0282 2502     		.2byte	0x225
 1253 0284 83000000 		.4byte	0x83
 1254 0288 4F010000 		.4byte	.LLST7
 1255 028c 00       		.byte	0
 1256 028d 0B       		.uleb128 0xb
 1257 028e D5020000 		.4byte	.LASF39
 1258 0292 01       		.byte	0x1
 1259 0293 5102     		.2byte	0x251
 1260 0295 00000000 		.4byte	.LFB10
 1261 0299 1C000000 		.4byte	.LFE10-.LFB10
 1262 029d 01       		.uleb128 0x1
 1263 029e 9C       		.byte	0x9c
 1264 029f B4020000 		.4byte	0x2b4
 1265 02a3 0F       		.uleb128 0xf
 1266 02a4 27020000 		.4byte	.LASF40
 1267 02a8 01       		.byte	0x1
 1268 02a9 5102     		.2byte	0x251
 1269 02ab 83000000 		.4byte	0x83
 1270 02af 70010000 		.4byte	.LLST8
 1271 02b3 00       		.byte	0
 1272 02b4 0B       		.uleb128 0xb
 1273 02b5 3C020000 		.4byte	.LASF41
 1274 02b9 01       		.byte	0x1
 1275 02ba 6602     		.2byte	0x266
 1276 02bc 00000000 		.4byte	.LFB11
 1277 02c0 18000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 39


 1278 02c4 01       		.uleb128 0x1
 1279 02c5 9C       		.byte	0x9c
 1280 02c6 DB020000 		.4byte	0x2db
 1281 02ca 0F       		.uleb128 0xf
 1282 02cb B7020000 		.4byte	.LASF42
 1283 02cf 01       		.byte	0x1
 1284 02d0 6602     		.2byte	0x266
 1285 02d2 83000000 		.4byte	0x83
 1286 02d6 91010000 		.4byte	.LLST9
 1287 02da 00       		.byte	0
 1288 02db 0B       		.uleb128 0xb
 1289 02dc 81010000 		.4byte	.LASF43
 1290 02e0 01       		.byte	0x1
 1291 02e1 7E02     		.2byte	0x27e
 1292 02e3 00000000 		.4byte	.LFB12
 1293 02e7 10000000 		.4byte	.LFE12-.LFB12
 1294 02eb 01       		.uleb128 0x1
 1295 02ec 9C       		.byte	0x9c
 1296 02ed 02030000 		.4byte	0x302
 1297 02f1 0F       		.uleb128 0xf
 1298 02f2 68010000 		.4byte	.LASF38
 1299 02f6 01       		.byte	0x1
 1300 02f7 7E02     		.2byte	0x27e
 1301 02f9 83000000 		.4byte	0x83
 1302 02fd B2010000 		.4byte	.LLST10
 1303 0301 00       		.byte	0
 1304 0302 0B       		.uleb128 0xb
 1305 0303 B8010000 		.4byte	.LASF44
 1306 0307 01       		.byte	0x1
 1307 0308 9502     		.2byte	0x295
 1308 030a 00000000 		.4byte	.LFB13
 1309 030e 10000000 		.4byte	.LFE13-.LFB13
 1310 0312 01       		.uleb128 0x1
 1311 0313 9C       		.byte	0x9c
 1312 0314 29030000 		.4byte	0x329
 1313 0318 0F       		.uleb128 0xf
 1314 0319 68010000 		.4byte	.LASF38
 1315 031d 01       		.byte	0x1
 1316 031e 9502     		.2byte	0x295
 1317 0320 83000000 		.4byte	0x83
 1318 0324 D3010000 		.4byte	.LLST11
 1319 0328 00       		.byte	0
 1320 0329 0B       		.uleb128 0xb
 1321 032a 5D030000 		.4byte	.LASF45
 1322 032e 01       		.byte	0x1
 1323 032f B102     		.2byte	0x2b1
 1324 0331 00000000 		.4byte	.LFB14
 1325 0335 1C000000 		.4byte	.LFE14-.LFB14
 1326 0339 01       		.uleb128 0x1
 1327 033a 9C       		.byte	0x9c
 1328 033b 6F030000 		.4byte	0x36f
 1329 033f 0F       		.uleb128 0xf
 1330 0340 1E030000 		.4byte	.LASF35
 1331 0344 01       		.byte	0x1
 1332 0345 B102     		.2byte	0x2b1
 1333 0347 83000000 		.4byte	0x83
 1334 034b F4010000 		.4byte	.LLST12
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 40


 1335 034f 0F       		.uleb128 0xf
 1336 0350 3B030000 		.4byte	.LASF46
 1337 0354 01       		.byte	0x1
 1338 0355 B102     		.2byte	0x2b1
 1339 0357 8F000000 		.4byte	0x8f
 1340 035b 20020000 		.4byte	.LLST13
 1341 035f 0A       		.uleb128 0xa
 1342 0360 10000000 		.4byte	.LVL40
 1343 0364 6D050000 		.4byte	0x56d
 1344 0368 09       		.uleb128 0x9
 1345 0369 01       		.uleb128 0x1
 1346 036a 50       		.byte	0x50
 1347 036b 01       		.uleb128 0x1
 1348 036c 30       		.byte	0x30
 1349 036d 00       		.byte	0
 1350 036e 00       		.byte	0
 1351 036f 0B       		.uleb128 0xb
 1352 0370 A5020000 		.4byte	.LASF47
 1353 0374 01       		.byte	0x1
 1354 0375 D302     		.2byte	0x2d3
 1355 0377 00000000 		.4byte	.LFB15
 1356 037b 1C000000 		.4byte	.LFE15-.LFB15
 1357 037f 01       		.uleb128 0x1
 1358 0380 9C       		.byte	0x9c
 1359 0381 B5030000 		.4byte	0x3b5
 1360 0385 0F       		.uleb128 0xf
 1361 0386 1E030000 		.4byte	.LASF35
 1362 038a 01       		.byte	0x1
 1363 038b D302     		.2byte	0x2d3
 1364 038d 83000000 		.4byte	0x83
 1365 0391 41020000 		.4byte	.LLST14
 1366 0395 0F       		.uleb128 0xf
 1367 0396 07000000 		.4byte	.LASF48
 1368 039a 01       		.byte	0x1
 1369 039b D302     		.2byte	0x2d3
 1370 039d 9B000000 		.4byte	0x9b
 1371 03a1 6D020000 		.4byte	.LLST15
 1372 03a5 0A       		.uleb128 0xa
 1373 03a6 10000000 		.4byte	.LVL44
 1374 03aa 6D050000 		.4byte	0x56d
 1375 03ae 09       		.uleb128 0x9
 1376 03af 01       		.uleb128 0x1
 1377 03b0 50       		.byte	0x50
 1378 03b1 01       		.uleb128 0x1
 1379 03b2 30       		.byte	0x30
 1380 03b3 00       		.byte	0
 1381 03b4 00       		.byte	0
 1382 03b5 11       		.uleb128 0x11
 1383 03b6 C1020000 		.4byte	.LASF49
 1384 03ba 01       		.byte	0x1
 1385 03bb F402     		.2byte	0x2f4
 1386 03bd 8F000000 		.4byte	0x8f
 1387 03c1 00000000 		.4byte	.LFB16
 1388 03c5 5C000000 		.4byte	.LFE16-.LFB16
 1389 03c9 01       		.uleb128 0x1
 1390 03ca 9C       		.byte	0x9c
 1391 03cb 0D040000 		.4byte	0x40d
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 41


 1392 03cf 0F       		.uleb128 0xf
 1393 03d0 1E030000 		.4byte	.LASF35
 1394 03d4 01       		.byte	0x1
 1395 03d5 F402     		.2byte	0x2f4
 1396 03d7 83000000 		.4byte	0x83
 1397 03db 9D020000 		.4byte	.LLST16
 1398 03df 0F       		.uleb128 0xf
 1399 03e0 42030000 		.4byte	.LASF50
 1400 03e4 01       		.byte	0x1
 1401 03e5 F402     		.2byte	0x2f4
 1402 03e7 8F000000 		.4byte	0x8f
 1403 03eb C9020000 		.4byte	.LLST17
 1404 03ef 12       		.uleb128 0x12
 1405 03f0 09020000 		.4byte	.LASF51
 1406 03f4 01       		.byte	0x1
 1407 03f5 F602     		.2byte	0x2f6
 1408 03f7 8F000000 		.4byte	0x8f
 1409 03fb 01       		.uleb128 0x1
 1410 03fc 50       		.byte	0x50
 1411 03fd 0A       		.uleb128 0xa
 1412 03fe 10000000 		.4byte	.LVL49
 1413 0402 6D050000 		.4byte	0x56d
 1414 0406 09       		.uleb128 0x9
 1415 0407 01       		.uleb128 0x1
 1416 0408 50       		.byte	0x50
 1417 0409 01       		.uleb128 0x1
 1418 040a 30       		.byte	0x30
 1419 040b 00       		.byte	0
 1420 040c 00       		.byte	0
 1421 040d 11       		.uleb128 0x11
 1422 040e 22010000 		.4byte	.LASF52
 1423 0412 01       		.byte	0x1
 1424 0413 2A03     		.2byte	0x32a
 1425 0415 9B000000 		.4byte	0x9b
 1426 0419 00000000 		.4byte	.LFB17
 1427 041d 40000000 		.4byte	.LFE17-.LFB17
 1428 0421 01       		.uleb128 0x1
 1429 0422 9C       		.byte	0x9c
 1430 0423 63040000 		.4byte	0x463
 1431 0427 0F       		.uleb128 0xf
 1432 0428 1E030000 		.4byte	.LASF35
 1433 042c 01       		.byte	0x1
 1434 042d 2A03     		.2byte	0x32a
 1435 042f 83000000 		.4byte	0x83
 1436 0433 F5020000 		.4byte	.LLST18
 1437 0437 0F       		.uleb128 0xf
 1438 0438 42030000 		.4byte	.LASF50
 1439 043c 01       		.byte	0x1
 1440 043d 2A03     		.2byte	0x32a
 1441 043f 8F000000 		.4byte	0x8f
 1442 0443 21030000 		.4byte	.LLST19
 1443 0447 13       		.uleb128 0x13
 1444 0448 9F010000 		.4byte	.LASF66
 1445 044c 01       		.byte	0x1
 1446 044d 2C03     		.2byte	0x32c
 1447 044f C1000000 		.4byte	0xc1
 1448 0453 0A       		.uleb128 0xa
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 42


 1449 0454 10000000 		.4byte	.LVL57
 1450 0458 6D050000 		.4byte	0x56d
 1451 045c 09       		.uleb128 0x9
 1452 045d 01       		.uleb128 0x1
 1453 045e 50       		.byte	0x50
 1454 045f 01       		.uleb128 0x1
 1455 0460 30       		.byte	0x30
 1456 0461 00       		.byte	0
 1457 0462 00       		.byte	0
 1458 0463 11       		.uleb128 0x11
 1459 0464 16000000 		.4byte	.LASF53
 1460 0468 01       		.byte	0x1
 1461 0469 5703     		.2byte	0x357
 1462 046b A7000000 		.4byte	0xa7
 1463 046f 00000000 		.4byte	.LFB18
 1464 0473 48000000 		.4byte	.LFE18-.LFB18
 1465 0477 01       		.uleb128 0x1
 1466 0478 9C       		.byte	0x9c
 1467 0479 BB040000 		.4byte	0x4bb
 1468 047d 0F       		.uleb128 0xf
 1469 047e 1E030000 		.4byte	.LASF35
 1470 0482 01       		.byte	0x1
 1471 0483 5703     		.2byte	0x357
 1472 0485 83000000 		.4byte	0x83
 1473 0489 4D030000 		.4byte	.LLST20
 1474 048d 0F       		.uleb128 0xf
 1475 048e 42030000 		.4byte	.LASF50
 1476 0492 01       		.byte	0x1
 1477 0493 5703     		.2byte	0x357
 1478 0495 8F000000 		.4byte	0x8f
 1479 0499 79030000 		.4byte	.LLST21
 1480 049d 12       		.uleb128 0x12
 1481 049e C7010000 		.4byte	.LASF54
 1482 04a2 01       		.byte	0x1
 1483 04a3 5903     		.2byte	0x359
 1484 04a5 A7000000 		.4byte	0xa7
 1485 04a9 01       		.uleb128 0x1
 1486 04aa 50       		.byte	0x50
 1487 04ab 0A       		.uleb128 0xa
 1488 04ac 10000000 		.4byte	.LVL64
 1489 04b0 6D050000 		.4byte	0x56d
 1490 04b4 09       		.uleb128 0x9
 1491 04b5 01       		.uleb128 0x1
 1492 04b6 50       		.byte	0x50
 1493 04b7 01       		.uleb128 0x1
 1494 04b8 30       		.byte	0x30
 1495 04b9 00       		.byte	0
 1496 04ba 00       		.byte	0
 1497 04bb 14       		.uleb128 0x14
 1498 04bc CB040000 		.4byte	0x4cb
 1499 04c0 CB040000 		.4byte	0x4cb
 1500 04c4 15       		.uleb128 0x15
 1501 04c5 EC000000 		.4byte	0xec
 1502 04c9 00       		.byte	0
 1503 04ca 00       		.byte	0
 1504 04cb 16       		.uleb128 0x16
 1505 04cc 83000000 		.4byte	0x83
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 43


 1506 04d0 17       		.uleb128 0x17
 1507 04d1 28030000 		.4byte	.LASF55
 1508 04d5 01       		.byte	0x1
 1509 04d6 21       		.byte	0x21
 1510 04d7 E0040000 		.4byte	0x4e0
 1511 04db 04       		.byte	0x4
 1512 04dc 00       		.byte	0
 1513 04dd 00       		.byte	0
 1514 04de 00       		.byte	0
 1515 04df 00       		.byte	0
 1516 04e0 16       		.uleb128 0x16
 1517 04e1 BB040000 		.4byte	0x4bb
 1518 04e5 18       		.uleb128 0x18
 1519 04e6 6D010000 		.4byte	.LASF56
 1520 04ea 01       		.byte	0x1
 1521 04eb 18       		.byte	0x18
 1522 04ec 6B000000 		.4byte	0x6b
 1523 04f0 05       		.uleb128 0x5
 1524 04f1 03       		.byte	0x3
 1525 04f2 00000000 		.4byte	ADC_initVar
 1526 04f6 14       		.uleb128 0x14
 1527 04f7 06050000 		.4byte	0x506
 1528 04fb 06050000 		.4byte	0x506
 1529 04ff 15       		.uleb128 0x15
 1530 0500 EC000000 		.4byte	0xec
 1531 0504 00       		.byte	0
 1532 0505 00       		.byte	0
 1533 0506 05       		.uleb128 0x5
 1534 0507 8F000000 		.4byte	0x8f
 1535 050b 18       		.uleb128 0x18
 1536 050c FA020000 		.4byte	.LASF57
 1537 0510 01       		.byte	0x1
 1538 0511 19       		.byte	0x19
 1539 0512 1C050000 		.4byte	0x51c
 1540 0516 05       		.uleb128 0x5
 1541 0517 03       		.byte	0x3
 1542 0518 00000000 		.4byte	ADC_offset
 1543 051c 05       		.uleb128 0x5
 1544 051d F6040000 		.4byte	0x4f6
 1545 0521 14       		.uleb128 0x14
 1546 0522 31050000 		.4byte	0x531
 1547 0526 31050000 		.4byte	0x531
 1548 052a 15       		.uleb128 0x15
 1549 052b EC000000 		.4byte	0xec
 1550 052f 00       		.byte	0
 1551 0530 00       		.byte	0
 1552 0531 05       		.uleb128 0x5
 1553 0532 9B000000 		.4byte	0x9b
 1554 0536 18       		.uleb128 0x18
 1555 0537 36010000 		.4byte	.LASF58
 1556 053b 01       		.byte	0x1
 1557 053c 1A       		.byte	0x1a
 1558 053d 47050000 		.4byte	0x547
 1559 0541 05       		.uleb128 0x5
 1560 0542 03       		.byte	0x3
 1561 0543 00000000 		.4byte	ADC_countsPer10Volt
 1562 0547 05       		.uleb128 0x5
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 44


 1563 0548 21050000 		.4byte	0x521
 1564 054c 19       		.uleb128 0x19
 1565 054d 67020000 		.4byte	.LASF59
 1566 0551 67020000 		.4byte	.LASF59
 1567 0555 03       		.byte	0x3
 1568 0556 C0       		.byte	0xc0
 1569 0557 19       		.uleb128 0x19
 1570 0558 EA010000 		.4byte	.LASF60
 1571 055c EA010000 		.4byte	.LASF60
 1572 0560 03       		.byte	0x3
 1573 0561 BD       		.byte	0xbd
 1574 0562 19       		.uleb128 0x19
 1575 0563 50010000 		.4byte	.LASF61
 1576 0567 50010000 		.4byte	.LASF61
 1577 056b 03       		.byte	0x3
 1578 056c DA       		.byte	0xda
 1579 056d 19       		.uleb128 0x19
 1580 056e E5020000 		.4byte	.LASF62
 1581 0572 E5020000 		.4byte	.LASF62
 1582 0576 03       		.byte	0x3
 1583 0577 E7       		.byte	0xe7
 1584 0578 00       		.byte	0
 1585              		.section	.debug_abbrev,"",%progbits
 1586              	.Ldebug_abbrev0:
 1587 0000 01       		.uleb128 0x1
 1588 0001 11       		.uleb128 0x11
 1589 0002 01       		.byte	0x1
 1590 0003 25       		.uleb128 0x25
 1591 0004 0E       		.uleb128 0xe
 1592 0005 13       		.uleb128 0x13
 1593 0006 0B       		.uleb128 0xb
 1594 0007 03       		.uleb128 0x3
 1595 0008 0E       		.uleb128 0xe
 1596 0009 1B       		.uleb128 0x1b
 1597 000a 0E       		.uleb128 0xe
 1598 000b 55       		.uleb128 0x55
 1599 000c 17       		.uleb128 0x17
 1600 000d 11       		.uleb128 0x11
 1601 000e 01       		.uleb128 0x1
 1602 000f 10       		.uleb128 0x10
 1603 0010 17       		.uleb128 0x17
 1604 0011 00       		.byte	0
 1605 0012 00       		.byte	0
 1606 0013 02       		.uleb128 0x2
 1607 0014 24       		.uleb128 0x24
 1608 0015 00       		.byte	0
 1609 0016 0B       		.uleb128 0xb
 1610 0017 0B       		.uleb128 0xb
 1611 0018 3E       		.uleb128 0x3e
 1612 0019 0B       		.uleb128 0xb
 1613 001a 03       		.uleb128 0x3
 1614 001b 0E       		.uleb128 0xe
 1615 001c 00       		.byte	0
 1616 001d 00       		.byte	0
 1617 001e 03       		.uleb128 0x3
 1618 001f 24       		.uleb128 0x24
 1619 0020 00       		.byte	0
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 45


 1620 0021 0B       		.uleb128 0xb
 1621 0022 0B       		.uleb128 0xb
 1622 0023 3E       		.uleb128 0x3e
 1623 0024 0B       		.uleb128 0xb
 1624 0025 03       		.uleb128 0x3
 1625 0026 08       		.uleb128 0x8
 1626 0027 00       		.byte	0
 1627 0028 00       		.byte	0
 1628 0029 04       		.uleb128 0x4
 1629 002a 16       		.uleb128 0x16
 1630 002b 00       		.byte	0
 1631 002c 03       		.uleb128 0x3
 1632 002d 0E       		.uleb128 0xe
 1633 002e 3A       		.uleb128 0x3a
 1634 002f 0B       		.uleb128 0xb
 1635 0030 3B       		.uleb128 0x3b
 1636 0031 05       		.uleb128 0x5
 1637 0032 49       		.uleb128 0x49
 1638 0033 13       		.uleb128 0x13
 1639 0034 00       		.byte	0
 1640 0035 00       		.byte	0
 1641 0036 05       		.uleb128 0x5
 1642 0037 35       		.uleb128 0x35
 1643 0038 00       		.byte	0
 1644 0039 49       		.uleb128 0x49
 1645 003a 13       		.uleb128 0x13
 1646 003b 00       		.byte	0
 1647 003c 00       		.byte	0
 1648 003d 06       		.uleb128 0x6
 1649 003e 2E       		.uleb128 0x2e
 1650 003f 01       		.byte	0x1
 1651 0040 3F       		.uleb128 0x3f
 1652 0041 19       		.uleb128 0x19
 1653 0042 03       		.uleb128 0x3
 1654 0043 0E       		.uleb128 0xe
 1655 0044 3A       		.uleb128 0x3a
 1656 0045 0B       		.uleb128 0xb
 1657 0046 3B       		.uleb128 0x3b
 1658 0047 0B       		.uleb128 0xb
 1659 0048 27       		.uleb128 0x27
 1660 0049 19       		.uleb128 0x19
 1661 004a 11       		.uleb128 0x11
 1662 004b 01       		.uleb128 0x1
 1663 004c 12       		.uleb128 0x12
 1664 004d 06       		.uleb128 0x6
 1665 004e 40       		.uleb128 0x40
 1666 004f 18       		.uleb128 0x18
 1667 0050 9742     		.uleb128 0x2117
 1668 0052 19       		.uleb128 0x19
 1669 0053 01       		.uleb128 0x1
 1670 0054 13       		.uleb128 0x13
 1671 0055 00       		.byte	0
 1672 0056 00       		.byte	0
 1673 0057 07       		.uleb128 0x7
 1674 0058 34       		.uleb128 0x34
 1675 0059 00       		.byte	0
 1676 005a 03       		.uleb128 0x3
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 46


 1677 005b 0E       		.uleb128 0xe
 1678 005c 3A       		.uleb128 0x3a
 1679 005d 0B       		.uleb128 0xb
 1680 005e 3B       		.uleb128 0x3b
 1681 005f 0B       		.uleb128 0xb
 1682 0060 49       		.uleb128 0x49
 1683 0061 13       		.uleb128 0x13
 1684 0062 02       		.uleb128 0x2
 1685 0063 17       		.uleb128 0x17
 1686 0064 00       		.byte	0
 1687 0065 00       		.byte	0
 1688 0066 08       		.uleb128 0x8
 1689 0067 898201   		.uleb128 0x4109
 1690 006a 01       		.byte	0x1
 1691 006b 11       		.uleb128 0x11
 1692 006c 01       		.uleb128 0x1
 1693 006d 31       		.uleb128 0x31
 1694 006e 13       		.uleb128 0x13
 1695 006f 01       		.uleb128 0x1
 1696 0070 13       		.uleb128 0x13
 1697 0071 00       		.byte	0
 1698 0072 00       		.byte	0
 1699 0073 09       		.uleb128 0x9
 1700 0074 8A8201   		.uleb128 0x410a
 1701 0077 00       		.byte	0
 1702 0078 02       		.uleb128 0x2
 1703 0079 18       		.uleb128 0x18
 1704 007a 9142     		.uleb128 0x2111
 1705 007c 18       		.uleb128 0x18
 1706 007d 00       		.byte	0
 1707 007e 00       		.byte	0
 1708 007f 0A       		.uleb128 0xa
 1709 0080 898201   		.uleb128 0x4109
 1710 0083 01       		.byte	0x1
 1711 0084 11       		.uleb128 0x11
 1712 0085 01       		.uleb128 0x1
 1713 0086 31       		.uleb128 0x31
 1714 0087 13       		.uleb128 0x13
 1715 0088 00       		.byte	0
 1716 0089 00       		.byte	0
 1717 008a 0B       		.uleb128 0xb
 1718 008b 2E       		.uleb128 0x2e
 1719 008c 01       		.byte	0x1
 1720 008d 3F       		.uleb128 0x3f
 1721 008e 19       		.uleb128 0x19
 1722 008f 03       		.uleb128 0x3
 1723 0090 0E       		.uleb128 0xe
 1724 0091 3A       		.uleb128 0x3a
 1725 0092 0B       		.uleb128 0xb
 1726 0093 3B       		.uleb128 0x3b
 1727 0094 05       		.uleb128 0x5
 1728 0095 27       		.uleb128 0x27
 1729 0096 19       		.uleb128 0x19
 1730 0097 11       		.uleb128 0x11
 1731 0098 01       		.uleb128 0x1
 1732 0099 12       		.uleb128 0x12
 1733 009a 06       		.uleb128 0x6
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 47


 1734 009b 40       		.uleb128 0x40
 1735 009c 18       		.uleb128 0x18
 1736 009d 9742     		.uleb128 0x2117
 1737 009f 19       		.uleb128 0x19
 1738 00a0 01       		.uleb128 0x1
 1739 00a1 13       		.uleb128 0x13
 1740 00a2 00       		.byte	0
 1741 00a3 00       		.byte	0
 1742 00a4 0C       		.uleb128 0xc
 1743 00a5 898201   		.uleb128 0x4109
 1744 00a8 00       		.byte	0
 1745 00a9 11       		.uleb128 0x11
 1746 00aa 01       		.uleb128 0x1
 1747 00ab 31       		.uleb128 0x31
 1748 00ac 13       		.uleb128 0x13
 1749 00ad 00       		.byte	0
 1750 00ae 00       		.byte	0
 1751 00af 0D       		.uleb128 0xd
 1752 00b0 2E       		.uleb128 0x2e
 1753 00b1 00       		.byte	0
 1754 00b2 3F       		.uleb128 0x3f
 1755 00b3 19       		.uleb128 0x19
 1756 00b4 03       		.uleb128 0x3
 1757 00b5 0E       		.uleb128 0xe
 1758 00b6 3A       		.uleb128 0x3a
 1759 00b7 0B       		.uleb128 0xb
 1760 00b8 3B       		.uleb128 0x3b
 1761 00b9 05       		.uleb128 0x5
 1762 00ba 27       		.uleb128 0x27
 1763 00bb 19       		.uleb128 0x19
 1764 00bc 11       		.uleb128 0x11
 1765 00bd 01       		.uleb128 0x1
 1766 00be 12       		.uleb128 0x12
 1767 00bf 06       		.uleb128 0x6
 1768 00c0 40       		.uleb128 0x40
 1769 00c1 18       		.uleb128 0x18
 1770 00c2 9742     		.uleb128 0x2117
 1771 00c4 19       		.uleb128 0x19
 1772 00c5 00       		.byte	0
 1773 00c6 00       		.byte	0
 1774 00c7 0E       		.uleb128 0xe
 1775 00c8 2E       		.uleb128 0x2e
 1776 00c9 01       		.byte	0x1
 1777 00ca 3F       		.uleb128 0x3f
 1778 00cb 19       		.uleb128 0x19
 1779 00cc 03       		.uleb128 0x3
 1780 00cd 0E       		.uleb128 0xe
 1781 00ce 3A       		.uleb128 0x3a
 1782 00cf 0B       		.uleb128 0xb
 1783 00d0 3B       		.uleb128 0x3b
 1784 00d1 05       		.uleb128 0x5
 1785 00d2 27       		.uleb128 0x27
 1786 00d3 19       		.uleb128 0x19
 1787 00d4 49       		.uleb128 0x49
 1788 00d5 13       		.uleb128 0x13
 1789 00d6 11       		.uleb128 0x11
 1790 00d7 01       		.uleb128 0x1
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 48


 1791 00d8 12       		.uleb128 0x12
 1792 00d9 06       		.uleb128 0x6
 1793 00da 40       		.uleb128 0x40
 1794 00db 18       		.uleb128 0x18
 1795 00dc 9742     		.uleb128 0x2117
 1796 00de 19       		.uleb128 0x19
 1797 00df 01       		.uleb128 0x1
 1798 00e0 13       		.uleb128 0x13
 1799 00e1 00       		.byte	0
 1800 00e2 00       		.byte	0
 1801 00e3 0F       		.uleb128 0xf
 1802 00e4 05       		.uleb128 0x5
 1803 00e5 00       		.byte	0
 1804 00e6 03       		.uleb128 0x3
 1805 00e7 0E       		.uleb128 0xe
 1806 00e8 3A       		.uleb128 0x3a
 1807 00e9 0B       		.uleb128 0xb
 1808 00ea 3B       		.uleb128 0x3b
 1809 00eb 05       		.uleb128 0x5
 1810 00ec 49       		.uleb128 0x49
 1811 00ed 13       		.uleb128 0x13
 1812 00ee 02       		.uleb128 0x2
 1813 00ef 17       		.uleb128 0x17
 1814 00f0 00       		.byte	0
 1815 00f1 00       		.byte	0
 1816 00f2 10       		.uleb128 0x10
 1817 00f3 34       		.uleb128 0x34
 1818 00f4 00       		.byte	0
 1819 00f5 03       		.uleb128 0x3
 1820 00f6 0E       		.uleb128 0xe
 1821 00f7 3A       		.uleb128 0x3a
 1822 00f8 0B       		.uleb128 0xb
 1823 00f9 3B       		.uleb128 0x3b
 1824 00fa 05       		.uleb128 0x5
 1825 00fb 49       		.uleb128 0x49
 1826 00fc 13       		.uleb128 0x13
 1827 00fd 02       		.uleb128 0x2
 1828 00fe 17       		.uleb128 0x17
 1829 00ff 00       		.byte	0
 1830 0100 00       		.byte	0
 1831 0101 11       		.uleb128 0x11
 1832 0102 2E       		.uleb128 0x2e
 1833 0103 01       		.byte	0x1
 1834 0104 3F       		.uleb128 0x3f
 1835 0105 19       		.uleb128 0x19
 1836 0106 03       		.uleb128 0x3
 1837 0107 0E       		.uleb128 0xe
 1838 0108 3A       		.uleb128 0x3a
 1839 0109 0B       		.uleb128 0xb
 1840 010a 3B       		.uleb128 0x3b
 1841 010b 05       		.uleb128 0x5
 1842 010c 27       		.uleb128 0x27
 1843 010d 19       		.uleb128 0x19
 1844 010e 49       		.uleb128 0x49
 1845 010f 13       		.uleb128 0x13
 1846 0110 11       		.uleb128 0x11
 1847 0111 01       		.uleb128 0x1
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 49


 1848 0112 12       		.uleb128 0x12
 1849 0113 06       		.uleb128 0x6
 1850 0114 40       		.uleb128 0x40
 1851 0115 18       		.uleb128 0x18
 1852 0116 9642     		.uleb128 0x2116
 1853 0118 19       		.uleb128 0x19
 1854 0119 01       		.uleb128 0x1
 1855 011a 13       		.uleb128 0x13
 1856 011b 00       		.byte	0
 1857 011c 00       		.byte	0
 1858 011d 12       		.uleb128 0x12
 1859 011e 34       		.uleb128 0x34
 1860 011f 00       		.byte	0
 1861 0120 03       		.uleb128 0x3
 1862 0121 0E       		.uleb128 0xe
 1863 0122 3A       		.uleb128 0x3a
 1864 0123 0B       		.uleb128 0xb
 1865 0124 3B       		.uleb128 0x3b
 1866 0125 05       		.uleb128 0x5
 1867 0126 49       		.uleb128 0x49
 1868 0127 13       		.uleb128 0x13
 1869 0128 02       		.uleb128 0x2
 1870 0129 18       		.uleb128 0x18
 1871 012a 00       		.byte	0
 1872 012b 00       		.byte	0
 1873 012c 13       		.uleb128 0x13
 1874 012d 34       		.uleb128 0x34
 1875 012e 00       		.byte	0
 1876 012f 03       		.uleb128 0x3
 1877 0130 0E       		.uleb128 0xe
 1878 0131 3A       		.uleb128 0x3a
 1879 0132 0B       		.uleb128 0xb
 1880 0133 3B       		.uleb128 0x3b
 1881 0134 05       		.uleb128 0x5
 1882 0135 49       		.uleb128 0x49
 1883 0136 13       		.uleb128 0x13
 1884 0137 00       		.byte	0
 1885 0138 00       		.byte	0
 1886 0139 14       		.uleb128 0x14
 1887 013a 01       		.uleb128 0x1
 1888 013b 01       		.byte	0x1
 1889 013c 49       		.uleb128 0x49
 1890 013d 13       		.uleb128 0x13
 1891 013e 01       		.uleb128 0x1
 1892 013f 13       		.uleb128 0x13
 1893 0140 00       		.byte	0
 1894 0141 00       		.byte	0
 1895 0142 15       		.uleb128 0x15
 1896 0143 21       		.uleb128 0x21
 1897 0144 00       		.byte	0
 1898 0145 49       		.uleb128 0x49
 1899 0146 13       		.uleb128 0x13
 1900 0147 2F       		.uleb128 0x2f
 1901 0148 0B       		.uleb128 0xb
 1902 0149 00       		.byte	0
 1903 014a 00       		.byte	0
 1904 014b 16       		.uleb128 0x16
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 50


 1905 014c 26       		.uleb128 0x26
 1906 014d 00       		.byte	0
 1907 014e 49       		.uleb128 0x49
 1908 014f 13       		.uleb128 0x13
 1909 0150 00       		.byte	0
 1910 0151 00       		.byte	0
 1911 0152 17       		.uleb128 0x17
 1912 0153 34       		.uleb128 0x34
 1913 0154 00       		.byte	0
 1914 0155 03       		.uleb128 0x3
 1915 0156 0E       		.uleb128 0xe
 1916 0157 3A       		.uleb128 0x3a
 1917 0158 0B       		.uleb128 0xb
 1918 0159 3B       		.uleb128 0x3b
 1919 015a 0B       		.uleb128 0xb
 1920 015b 49       		.uleb128 0x49
 1921 015c 13       		.uleb128 0x13
 1922 015d 1C       		.uleb128 0x1c
 1923 015e 0A       		.uleb128 0xa
 1924 015f 00       		.byte	0
 1925 0160 00       		.byte	0
 1926 0161 18       		.uleb128 0x18
 1927 0162 34       		.uleb128 0x34
 1928 0163 00       		.byte	0
 1929 0164 03       		.uleb128 0x3
 1930 0165 0E       		.uleb128 0xe
 1931 0166 3A       		.uleb128 0x3a
 1932 0167 0B       		.uleb128 0xb
 1933 0168 3B       		.uleb128 0x3b
 1934 0169 0B       		.uleb128 0xb
 1935 016a 49       		.uleb128 0x49
 1936 016b 13       		.uleb128 0x13
 1937 016c 3F       		.uleb128 0x3f
 1938 016d 19       		.uleb128 0x19
 1939 016e 02       		.uleb128 0x2
 1940 016f 18       		.uleb128 0x18
 1941 0170 00       		.byte	0
 1942 0171 00       		.byte	0
 1943 0172 19       		.uleb128 0x19
 1944 0173 2E       		.uleb128 0x2e
 1945 0174 00       		.byte	0
 1946 0175 3F       		.uleb128 0x3f
 1947 0176 19       		.uleb128 0x19
 1948 0177 3C       		.uleb128 0x3c
 1949 0178 19       		.uleb128 0x19
 1950 0179 6E       		.uleb128 0x6e
 1951 017a 0E       		.uleb128 0xe
 1952 017b 03       		.uleb128 0x3
 1953 017c 0E       		.uleb128 0xe
 1954 017d 3A       		.uleb128 0x3a
 1955 017e 0B       		.uleb128 0xb
 1956 017f 3B       		.uleb128 0x3b
 1957 0180 0B       		.uleb128 0xb
 1958 0181 00       		.byte	0
 1959 0182 00       		.byte	0
 1960 0183 00       		.byte	0
 1961              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 51


 1962              	.Ldebug_loc0:
 1963              	.LLST0:
 1964 0000 68000000 		.4byte	.LVL5
 1965 0004 6C000000 		.4byte	.LVL7
 1966 0008 0200     		.2byte	0x2
 1967 000a 30       		.byte	0x30
 1968 000b 9F       		.byte	0x9f
 1969 000c 6C000000 		.4byte	.LVL7
 1970 0010 E8000000 		.4byte	.LFE2
 1971 0014 0100     		.2byte	0x1
 1972 0016 53       		.byte	0x53
 1973 0017 00000000 		.4byte	0
 1974 001b 00000000 		.4byte	0
 1975              	.LLST1:
 1976 001f 5C000000 		.4byte	.LVL2
 1977 0023 62000000 		.4byte	.LVL3
 1978 0027 0700     		.2byte	0x7
 1979 0029 71       		.byte	0x71
 1980 002a 00       		.sleb128 0
 1981 002b 40       		.byte	0x40
 1982 002c 49       		.byte	0x49
 1983 002d 24       		.byte	0x24
 1984 002e 21       		.byte	0x21
 1985 002f 9F       		.byte	0x9f
 1986 0030 66000000 		.4byte	.LVL4
 1987 0034 6A000000 		.4byte	.LVL6
 1988 0038 0100     		.2byte	0x1
 1989 003a 53       		.byte	0x53
 1990 003b 6A000000 		.4byte	.LVL6
 1991 003f 6C000000 		.4byte	.LVL7
 1992 0043 0200     		.2byte	0x2
 1993 0045 72       		.byte	0x72
 1994 0046 00       		.sleb128 0
 1995 0047 6C000000 		.4byte	.LVL7
 1996 004b 84000000 		.4byte	.LVL9
 1997 004f 0200     		.2byte	0x2
 1998 0051 30       		.byte	0x30
 1999 0052 9F       		.byte	0x9f
 2000 0053 00000000 		.4byte	0
 2001 0057 00000000 		.4byte	0
 2002              	.LLST2:
 2003 005b 76000000 		.4byte	.LVL8
 2004 005f 84000000 		.4byte	.LVL9
 2005 0063 0400     		.2byte	0x4
 2006 0065 0A       		.byte	0xa
 2007 0066 0010     		.2byte	0x1000
 2008 0068 9F       		.byte	0x9f
 2009 0069 00000000 		.4byte	0
 2010 006d 00000000 		.4byte	0
 2011              	.LLST3:
 2012 0071 00000000 		.4byte	.LVL13
 2013 0075 06000000 		.4byte	.LVL15
 2014 0079 0100     		.2byte	0x1
 2015 007b 50       		.byte	0x50
 2016 007c 06000000 		.4byte	.LVL15
 2017 0080 1A000000 		.4byte	.LVL17
 2018 0084 0100     		.2byte	0x1
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 52


 2019 0086 52       		.byte	0x52
 2020 0087 1A000000 		.4byte	.LVL17
 2021 008b 20000000 		.4byte	.LVL18
 2022 008f 0400     		.2byte	0x4
 2023 0091 F3       		.byte	0xf3
 2024 0092 01       		.uleb128 0x1
 2025 0093 50       		.byte	0x50
 2026 0094 9F       		.byte	0x9f
 2027 0095 20000000 		.4byte	.LVL18
 2028 0099 22000000 		.4byte	.LVL19
 2029 009d 0100     		.2byte	0x1
 2030 009f 50       		.byte	0x50
 2031 00a0 22000000 		.4byte	.LVL19
 2032 00a4 28000000 		.4byte	.LFE7
 2033 00a8 0400     		.2byte	0x4
 2034 00aa F3       		.byte	0xf3
 2035 00ab 01       		.uleb128 0x1
 2036 00ac 50       		.byte	0x50
 2037 00ad 9F       		.byte	0x9f
 2038 00ae 00000000 		.4byte	0
 2039 00b2 00000000 		.4byte	0
 2040              	.LLST4:
 2041 00b6 02000000 		.4byte	.LVL14
 2042 00ba 06000000 		.4byte	.LVL15
 2043 00be 0200     		.2byte	0x2
 2044 00c0 30       		.byte	0x30
 2045 00c1 9F       		.byte	0x9f
 2046 00c2 0E000000 		.4byte	.LVL16
 2047 00c6 20000000 		.4byte	.LVL18
 2048 00ca 0100     		.2byte	0x1
 2049 00cc 50       		.byte	0x50
 2050 00cd 20000000 		.4byte	.LVL18
 2051 00d1 22000000 		.4byte	.LVL19
 2052 00d5 0200     		.2byte	0x2
 2053 00d7 30       		.byte	0x30
 2054 00d8 9F       		.byte	0x9f
 2055 00d9 22000000 		.4byte	.LVL19
 2056 00dd 28000000 		.4byte	.LFE7
 2057 00e1 0100     		.2byte	0x1
 2058 00e3 50       		.byte	0x50
 2059 00e4 00000000 		.4byte	0
 2060 00e8 00000000 		.4byte	0
 2061              	.LLST5:
 2062 00ec 00000000 		.4byte	.LVL20
 2063 00f0 08000000 		.4byte	.LVL21
 2064 00f4 0100     		.2byte	0x1
 2065 00f6 50       		.byte	0x50
 2066 00f7 08000000 		.4byte	.LVL21
 2067 00fb 12000000 		.4byte	.LVL23
 2068 00ff 0100     		.2byte	0x1
 2069 0101 54       		.byte	0x54
 2070 0102 12000000 		.4byte	.LVL23
 2071 0106 20000000 		.4byte	.LVL25
 2072 010a 0400     		.2byte	0x4
 2073 010c F3       		.byte	0xf3
 2074 010d 01       		.uleb128 0x1
 2075 010e 50       		.byte	0x50
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 53


 2076 010f 9F       		.byte	0x9f
 2077 0110 20000000 		.4byte	.LVL25
 2078 0114 22000000 		.4byte	.LVL26
 2079 0118 0100     		.2byte	0x1
 2080 011a 54       		.byte	0x54
 2081 011b 22000000 		.4byte	.LVL26
 2082 011f 2C000000 		.4byte	.LFE8
 2083 0123 0400     		.2byte	0x4
 2084 0125 F3       		.byte	0xf3
 2085 0126 01       		.uleb128 0x1
 2086 0127 50       		.byte	0x50
 2087 0128 9F       		.byte	0x9f
 2088 0129 00000000 		.4byte	0
 2089 012d 00000000 		.4byte	0
 2090              	.LLST6:
 2091 0131 1E000000 		.4byte	.LVL24
 2092 0135 20000000 		.4byte	.LVL25
 2093 0139 0100     		.2byte	0x1
 2094 013b 50       		.byte	0x50
 2095 013c 22000000 		.4byte	.LVL26
 2096 0140 24000000 		.4byte	.LVL27
 2097 0144 0100     		.2byte	0x1
 2098 0146 50       		.byte	0x50
 2099 0147 00000000 		.4byte	0
 2100 014b 00000000 		.4byte	0
 2101              	.LLST7:
 2102 014f 00000000 		.4byte	.LVL28
 2103 0153 04000000 		.4byte	.LVL29
 2104 0157 0100     		.2byte	0x1
 2105 0159 50       		.byte	0x50
 2106 015a 04000000 		.4byte	.LVL29
 2107 015e 10000000 		.4byte	.LFE9
 2108 0162 0400     		.2byte	0x4
 2109 0164 F3       		.byte	0xf3
 2110 0165 01       		.uleb128 0x1
 2111 0166 50       		.byte	0x50
 2112 0167 9F       		.byte	0x9f
 2113 0168 00000000 		.4byte	0
 2114 016c 00000000 		.4byte	0
 2115              	.LLST8:
 2116 0170 00000000 		.4byte	.LVL30
 2117 0174 0E000000 		.4byte	.LVL31
 2118 0178 0100     		.2byte	0x1
 2119 017a 50       		.byte	0x50
 2120 017b 0E000000 		.4byte	.LVL31
 2121 017f 1C000000 		.4byte	.LFE10
 2122 0183 0400     		.2byte	0x4
 2123 0185 F3       		.byte	0xf3
 2124 0186 01       		.uleb128 0x1
 2125 0187 50       		.byte	0x50
 2126 0188 9F       		.byte	0x9f
 2127 0189 00000000 		.4byte	0
 2128 018d 00000000 		.4byte	0
 2129              	.LLST9:
 2130 0191 00000000 		.4byte	.LVL32
 2131 0195 0E000000 		.4byte	.LVL33
 2132 0199 0100     		.2byte	0x1
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 54


 2133 019b 50       		.byte	0x50
 2134 019c 0E000000 		.4byte	.LVL33
 2135 01a0 18000000 		.4byte	.LFE11
 2136 01a4 0400     		.2byte	0x4
 2137 01a6 F3       		.byte	0xf3
 2138 01a7 01       		.uleb128 0x1
 2139 01a8 50       		.byte	0x50
 2140 01a9 9F       		.byte	0x9f
 2141 01aa 00000000 		.4byte	0
 2142 01ae 00000000 		.4byte	0
 2143              	.LLST10:
 2144 01b2 00000000 		.4byte	.LVL34
 2145 01b6 04000000 		.4byte	.LVL35
 2146 01ba 0100     		.2byte	0x1
 2147 01bc 50       		.byte	0x50
 2148 01bd 04000000 		.4byte	.LVL35
 2149 01c1 10000000 		.4byte	.LFE12
 2150 01c5 0400     		.2byte	0x4
 2151 01c7 F3       		.byte	0xf3
 2152 01c8 01       		.uleb128 0x1
 2153 01c9 50       		.byte	0x50
 2154 01ca 9F       		.byte	0x9f
 2155 01cb 00000000 		.4byte	0
 2156 01cf 00000000 		.4byte	0
 2157              	.LLST11:
 2158 01d3 00000000 		.4byte	.LVL36
 2159 01d7 04000000 		.4byte	.LVL37
 2160 01db 0100     		.2byte	0x1
 2161 01dd 50       		.byte	0x50
 2162 01de 04000000 		.4byte	.LVL37
 2163 01e2 10000000 		.4byte	.LFE13
 2164 01e6 0400     		.2byte	0x4
 2165 01e8 F3       		.byte	0xf3
 2166 01e9 01       		.uleb128 0x1
 2167 01ea 50       		.byte	0x50
 2168 01eb 9F       		.byte	0x9f
 2169 01ec 00000000 		.4byte	0
 2170 01f0 00000000 		.4byte	0
 2171              	.LLST12:
 2172 01f4 00000000 		.4byte	.LVL38
 2173 01f8 0C000000 		.4byte	.LVL39
 2174 01fc 0100     		.2byte	0x1
 2175 01fe 50       		.byte	0x50
 2176 01ff 0C000000 		.4byte	.LVL39
 2177 0203 12000000 		.4byte	.LVL41
 2178 0207 0100     		.2byte	0x1
 2179 0209 54       		.byte	0x54
 2180 020a 12000000 		.4byte	.LVL41
 2181 020e 1C000000 		.4byte	.LFE14
 2182 0212 0400     		.2byte	0x4
 2183 0214 F3       		.byte	0xf3
 2184 0215 01       		.uleb128 0x1
 2185 0216 50       		.byte	0x50
 2186 0217 9F       		.byte	0x9f
 2187 0218 00000000 		.4byte	0
 2188 021c 00000000 		.4byte	0
 2189              	.LLST13:
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 55


 2190 0220 00000000 		.4byte	.LVL38
 2191 0224 0F000000 		.4byte	.LVL40-1
 2192 0228 0100     		.2byte	0x1
 2193 022a 51       		.byte	0x51
 2194 022b 0F000000 		.4byte	.LVL40-1
 2195 022f 1C000000 		.4byte	.LFE14
 2196 0233 0400     		.2byte	0x4
 2197 0235 F3       		.byte	0xf3
 2198 0236 01       		.uleb128 0x1
 2199 0237 51       		.byte	0x51
 2200 0238 9F       		.byte	0x9f
 2201 0239 00000000 		.4byte	0
 2202 023d 00000000 		.4byte	0
 2203              	.LLST14:
 2204 0241 00000000 		.4byte	.LVL42
 2205 0245 0C000000 		.4byte	.LVL43
 2206 0249 0100     		.2byte	0x1
 2207 024b 50       		.byte	0x50
 2208 024c 0C000000 		.4byte	.LVL43
 2209 0250 12000000 		.4byte	.LVL45
 2210 0254 0100     		.2byte	0x1
 2211 0256 54       		.byte	0x54
 2212 0257 12000000 		.4byte	.LVL45
 2213 025b 1C000000 		.4byte	.LFE15
 2214 025f 0400     		.2byte	0x4
 2215 0261 F3       		.byte	0xf3
 2216 0262 01       		.uleb128 0x1
 2217 0263 50       		.byte	0x50
 2218 0264 9F       		.byte	0x9f
 2219 0265 00000000 		.4byte	0
 2220 0269 00000000 		.4byte	0
 2221              	.LLST15:
 2222 026d 00000000 		.4byte	.LVL42
 2223 0271 0F000000 		.4byte	.LVL44-1
 2224 0275 0100     		.2byte	0x1
 2225 0277 51       		.byte	0x51
 2226 0278 0F000000 		.4byte	.LVL44-1
 2227 027c 16000000 		.4byte	.LVL46
 2228 0280 0100     		.2byte	0x1
 2229 0282 55       		.byte	0x55
 2230 0283 16000000 		.4byte	.LVL46
 2231 0287 1C000000 		.4byte	.LFE15
 2232 028b 0800     		.2byte	0x8
 2233 028d F3       		.byte	0xf3
 2234 028e 01       		.uleb128 0x1
 2235 028f 50       		.byte	0x50
 2236 0290 32       		.byte	0x32
 2237 0291 24       		.byte	0x24
 2238 0292 73       		.byte	0x73
 2239 0293 00       		.sleb128 0
 2240 0294 22       		.byte	0x22
 2241 0295 00000000 		.4byte	0
 2242 0299 00000000 		.4byte	0
 2243              	.LLST16:
 2244 029d 00000000 		.4byte	.LVL47
 2245 02a1 0C000000 		.4byte	.LVL48
 2246 02a5 0100     		.2byte	0x1
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 56


 2247 02a7 50       		.byte	0x50
 2248 02a8 0C000000 		.4byte	.LVL48
 2249 02ac 44000000 		.4byte	.LVL51
 2250 02b0 0100     		.2byte	0x1
 2251 02b2 54       		.byte	0x54
 2252 02b3 44000000 		.4byte	.LVL51
 2253 02b7 5C000000 		.4byte	.LFE16
 2254 02bb 0400     		.2byte	0x4
 2255 02bd F3       		.byte	0xf3
 2256 02be 01       		.uleb128 0x1
 2257 02bf 50       		.byte	0x50
 2258 02c0 9F       		.byte	0x9f
 2259 02c1 00000000 		.4byte	0
 2260 02c5 00000000 		.4byte	0
 2261              	.LLST17:
 2262 02c9 00000000 		.4byte	.LVL47
 2263 02cd 0F000000 		.4byte	.LVL49-1
 2264 02d1 0100     		.2byte	0x1
 2265 02d3 51       		.byte	0x51
 2266 02d4 0F000000 		.4byte	.LVL49-1
 2267 02d8 1C000000 		.4byte	.LVL50
 2268 02dc 0400     		.2byte	0x4
 2269 02de F3       		.byte	0xf3
 2270 02df 01       		.uleb128 0x1
 2271 02e0 51       		.byte	0x51
 2272 02e1 9F       		.byte	0x9f
 2273 02e2 1C000000 		.4byte	.LVL50
 2274 02e6 48000000 		.4byte	.LVL52
 2275 02ea 0100     		.2byte	0x1
 2276 02ec 51       		.byte	0x51
 2277 02ed 00000000 		.4byte	0
 2278 02f1 00000000 		.4byte	0
 2279              	.LLST18:
 2280 02f5 00000000 		.4byte	.LVL55
 2281 02f9 0C000000 		.4byte	.LVL56
 2282 02fd 0100     		.2byte	0x1
 2283 02ff 50       		.byte	0x50
 2284 0300 0C000000 		.4byte	.LVL56
 2285 0304 28000000 		.4byte	.LVL60
 2286 0308 0100     		.2byte	0x1
 2287 030a 55       		.byte	0x55
 2288 030b 28000000 		.4byte	.LVL60
 2289 030f 40000000 		.4byte	.LFE17
 2290 0313 0400     		.2byte	0x4
 2291 0315 F3       		.byte	0xf3
 2292 0316 01       		.uleb128 0x1
 2293 0317 50       		.byte	0x50
 2294 0318 9F       		.byte	0x9f
 2295 0319 00000000 		.4byte	0
 2296 031d 00000000 		.4byte	0
 2297              	.LLST19:
 2298 0321 00000000 		.4byte	.LVL55
 2299 0325 0F000000 		.4byte	.LVL57-1
 2300 0329 0100     		.2byte	0x1
 2301 032b 51       		.byte	0x51
 2302 032c 0F000000 		.4byte	.LVL57-1
 2303 0330 1C000000 		.4byte	.LVL58
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 57


 2304 0334 0400     		.2byte	0x4
 2305 0336 F3       		.byte	0xf3
 2306 0337 01       		.uleb128 0x1
 2307 0338 51       		.byte	0x51
 2308 0339 9F       		.byte	0x9f
 2309 033a 1C000000 		.4byte	.LVL58
 2310 033e 25000000 		.4byte	.LVL59-1
 2311 0342 0100     		.2byte	0x1
 2312 0344 50       		.byte	0x50
 2313 0345 00000000 		.4byte	0
 2314 0349 00000000 		.4byte	0
 2315              	.LLST20:
 2316 034d 00000000 		.4byte	.LVL62
 2317 0351 0C000000 		.4byte	.LVL63
 2318 0355 0100     		.2byte	0x1
 2319 0357 50       		.byte	0x50
 2320 0358 0C000000 		.4byte	.LVL63
 2321 035c 2A000000 		.4byte	.LVL68
 2322 0360 0100     		.2byte	0x1
 2323 0362 54       		.byte	0x54
 2324 0363 2A000000 		.4byte	.LVL68
 2325 0367 48000000 		.4byte	.LFE18
 2326 036b 0400     		.2byte	0x4
 2327 036d F3       		.byte	0xf3
 2328 036e 01       		.uleb128 0x1
 2329 036f 50       		.byte	0x50
 2330 0370 9F       		.byte	0x9f
 2331 0371 00000000 		.4byte	0
 2332 0375 00000000 		.4byte	0
 2333              	.LLST21:
 2334 0379 00000000 		.4byte	.LVL62
 2335 037d 0F000000 		.4byte	.LVL64-1
 2336 0381 0100     		.2byte	0x1
 2337 0383 51       		.byte	0x51
 2338 0384 0F000000 		.4byte	.LVL64-1
 2339 0388 1C000000 		.4byte	.LVL65
 2340 038c 0400     		.2byte	0x4
 2341 038e F3       		.byte	0xf3
 2342 038f 01       		.uleb128 0x1
 2343 0390 51       		.byte	0x51
 2344 0391 9F       		.byte	0x9f
 2345 0392 1C000000 		.4byte	.LVL65
 2346 0396 1F000000 		.4byte	.LVL66-1
 2347 039a 0100     		.2byte	0x1
 2348 039c 50       		.byte	0x50
 2349 039d 00000000 		.4byte	0
 2350 03a1 00000000 		.4byte	0
 2351              		.section	.debug_aranges,"",%progbits
 2352 0000 A4000000 		.4byte	0xa4
 2353 0004 0200     		.2byte	0x2
 2354 0006 00000000 		.4byte	.Ldebug_info0
 2355 000a 04       		.byte	0x4
 2356 000b 00       		.byte	0
 2357 000c 0000     		.2byte	0
 2358 000e 0000     		.2byte	0
 2359 0010 00000000 		.4byte	.LFB2
 2360 0014 E8000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 58


 2361 0018 00000000 		.4byte	.LFB3
 2362 001c 30000000 		.4byte	.LFE3-.LFB3
 2363 0020 00000000 		.4byte	.LFB1
 2364 0024 20000000 		.4byte	.LFE1-.LFB1
 2365 0028 00000000 		.4byte	.LFB4
 2366 002c 10000000 		.4byte	.LFE4-.LFB4
 2367 0030 00000000 		.4byte	.LFB5
 2368 0034 14000000 		.4byte	.LFE5-.LFB5
 2369 0038 00000000 		.4byte	.LFB6
 2370 003c 14000000 		.4byte	.LFE6-.LFB6
 2371 0040 00000000 		.4byte	.LFB7
 2372 0044 28000000 		.4byte	.LFE7-.LFB7
 2373 0048 00000000 		.4byte	.LFB8
 2374 004c 2C000000 		.4byte	.LFE8-.LFB8
 2375 0050 00000000 		.4byte	.LFB9
 2376 0054 10000000 		.4byte	.LFE9-.LFB9
 2377 0058 00000000 		.4byte	.LFB10
 2378 005c 1C000000 		.4byte	.LFE10-.LFB10
 2379 0060 00000000 		.4byte	.LFB11
 2380 0064 18000000 		.4byte	.LFE11-.LFB11
 2381 0068 00000000 		.4byte	.LFB12
 2382 006c 10000000 		.4byte	.LFE12-.LFB12
 2383 0070 00000000 		.4byte	.LFB13
 2384 0074 10000000 		.4byte	.LFE13-.LFB13
 2385 0078 00000000 		.4byte	.LFB14
 2386 007c 1C000000 		.4byte	.LFE14-.LFB14
 2387 0080 00000000 		.4byte	.LFB15
 2388 0084 1C000000 		.4byte	.LFE15-.LFB15
 2389 0088 00000000 		.4byte	.LFB16
 2390 008c 5C000000 		.4byte	.LFE16-.LFB16
 2391 0090 00000000 		.4byte	.LFB17
 2392 0094 40000000 		.4byte	.LFE17-.LFB17
 2393 0098 00000000 		.4byte	.LFB18
 2394 009c 48000000 		.4byte	.LFE18-.LFB18
 2395 00a0 00000000 		.4byte	0
 2396 00a4 00000000 		.4byte	0
 2397              		.section	.debug_ranges,"",%progbits
 2398              	.Ldebug_ranges0:
 2399 0000 00000000 		.4byte	.LFB2
 2400 0004 E8000000 		.4byte	.LFE2
 2401 0008 00000000 		.4byte	.LFB3
 2402 000c 30000000 		.4byte	.LFE3
 2403 0010 00000000 		.4byte	.LFB1
 2404 0014 20000000 		.4byte	.LFE1
 2405 0018 00000000 		.4byte	.LFB4
 2406 001c 10000000 		.4byte	.LFE4
 2407 0020 00000000 		.4byte	.LFB5
 2408 0024 14000000 		.4byte	.LFE5
 2409 0028 00000000 		.4byte	.LFB6
 2410 002c 14000000 		.4byte	.LFE6
 2411 0030 00000000 		.4byte	.LFB7
 2412 0034 28000000 		.4byte	.LFE7
 2413 0038 00000000 		.4byte	.LFB8
 2414 003c 2C000000 		.4byte	.LFE8
 2415 0040 00000000 		.4byte	.LFB9
 2416 0044 10000000 		.4byte	.LFE9
 2417 0048 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 59


 2418 004c 1C000000 		.4byte	.LFE10
 2419 0050 00000000 		.4byte	.LFB11
 2420 0054 18000000 		.4byte	.LFE11
 2421 0058 00000000 		.4byte	.LFB12
 2422 005c 10000000 		.4byte	.LFE12
 2423 0060 00000000 		.4byte	.LFB13
 2424 0064 10000000 		.4byte	.LFE13
 2425 0068 00000000 		.4byte	.LFB14
 2426 006c 1C000000 		.4byte	.LFE14
 2427 0070 00000000 		.4byte	.LFB15
 2428 0074 1C000000 		.4byte	.LFE15
 2429 0078 00000000 		.4byte	.LFB16
 2430 007c 5C000000 		.4byte	.LFE16
 2431 0080 00000000 		.4byte	.LFB17
 2432 0084 40000000 		.4byte	.LFE17
 2433 0088 00000000 		.4byte	.LFB18
 2434 008c 48000000 		.4byte	.LFE18
 2435 0090 00000000 		.4byte	0
 2436 0094 00000000 		.4byte	0
 2437              		.section	.debug_line,"",%progbits
 2438              	.Ldebug_line0:
 2439 0000 69020000 		.section	.debug_str,"MS",%progbits,1
 2439      02004B00 
 2439      00000201 
 2439      FB0E0D00 
 2439      01010101 
 2440              	.LASF10:
 2441 0000 75696E74 		.ascii	"uint16\000"
 2441      313600
 2442              	.LASF48:
 2443 0007 61646347 		.ascii	"adcGain\000"
 2443      61696E00 
 2444              	.LASF24:
 2445 000f 636F756E 		.ascii	"counts\000"
 2445      747300
 2446              	.LASF53:
 2447 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2447      436F756E 
 2447      7473546F 
 2447      5F566F6C 
 2447      747300
 2448              	.LASF25:
 2449 0029 4144435F 		.ascii	"ADC_Init\000"
 2449      496E6974 
 2449      00
 2450              	.LASF63:
 2451 0032 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2451      43313120 
 2451      352E342E 
 2451      31203230 
 2451      31363036 
 2452 0065 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2452      20726576 
 2452      6973696F 
 2452      6E203233 
 2452      37373135 
 2453 0098 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 60


 2453      66756E63 
 2453      74696F6E 
 2453      2D736563 
 2453      74696F6E 
 2454              	.LASF7:
 2455 00c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2455      206C6F6E 
 2455      6720756E 
 2455      7369676E 
 2455      65642069 
 2456              	.LASF29:
 2457 00d7 4144435F 		.ascii	"ADC_StartConvert\000"
 2457      53746172 
 2457      74436F6E 
 2457      76657274 
 2457      00
 2458              	.LASF6:
 2459 00e8 6C6F6E67 		.ascii	"long long int\000"
 2459      206C6F6E 
 2459      6720696E 
 2459      7400
 2460              	.LASF0:
 2461 00f6 7369676E 		.ascii	"signed char\000"
 2461      65642063 
 2461      68617200 
 2462              	.LASF31:
 2463 0102 73746174 		.ascii	"status\000"
 2463      757300
 2464              	.LASF13:
 2465 0109 696E7433 		.ascii	"int32\000"
 2465      3200
 2466              	.LASF27:
 2467 010f 4144435F 		.ascii	"ADC_Start\000"
 2467      53746172 
 2467      7400
 2468              	.LASF4:
 2469 0119 6C6F6E67 		.ascii	"long int\000"
 2469      20696E74 
 2469      00
 2470              	.LASF52:
 2471 0122 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2471      436F756E 
 2471      7473546F 
 2471      5F75566F 
 2471      6C747300 
 2472              	.LASF58:
 2473 0136 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2473      636F756E 
 2473      74735065 
 2473      72313056 
 2473      6F6C7400 
 2474              	.LASF9:
 2475 014a 75696E74 		.ascii	"uint8\000"
 2475      3800
 2476              	.LASF61:
 2477 0150 43794465 		.ascii	"CyDelayUs\000"
 2477      6C617955 
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 61


 2477      7300
 2478              	.LASF16:
 2479 015a 646F7562 		.ascii	"double\000"
 2479      6C6500
 2480              	.LASF11:
 2481 0161 75696E74 		.ascii	"uint32\000"
 2481      333200
 2482              	.LASF38:
 2483 0168 6D61736B 		.ascii	"mask\000"
 2483      00
 2484              	.LASF56:
 2485 016d 4144435F 		.ascii	"ADC_initVar\000"
 2485      696E6974 
 2485      56617200 
 2486              	.LASF34:
 2487 0179 7265744D 		.ascii	"retMode\000"
 2487      6F646500 
 2488              	.LASF43:
 2489 0181 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2489      5365744C 
 2489      696D6974 
 2489      4D61736B 
 2489      00
 2490              	.LASF8:
 2491 0192 756E7369 		.ascii	"unsigned int\000"
 2491      676E6564 
 2491      20696E74 
 2491      00
 2492              	.LASF66:
 2493 019f 75566F6C 		.ascii	"uVolts\000"
 2493      747300
 2494              	.LASF5:
 2495 01a6 6C6F6E67 		.ascii	"long unsigned int\000"
 2495      20756E73 
 2495      69676E65 
 2495      6420696E 
 2495      7400
 2496              	.LASF44:
 2497 01b8 4144435F 		.ascii	"ADC_SetSatMask\000"
 2497      53657453 
 2497      61744D61 
 2497      736B00
 2498              	.LASF54:
 2499 01c7 766F6C74 		.ascii	"volts\000"
 2499      7300
 2500              	.LASF23:
 2501 01cd 746D7052 		.ascii	"tmpRegVal\000"
 2501      65675661 
 2501      6C00
 2502              	.LASF3:
 2503 01d7 73686F72 		.ascii	"short unsigned int\000"
 2503      7420756E 
 2503      7369676E 
 2503      65642069 
 2503      6E7400
 2504              	.LASF60:
 2505 01ea 4379496E 		.ascii	"CyIntSetVector\000"
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 62


 2505      74536574 
 2505      56656374 
 2505      6F7200
 2506              	.LASF30:
 2507 01f9 4144435F 		.ascii	"ADC_StopConvert\000"
 2507      53746F70 
 2507      436F6E76 
 2507      65727400 
 2508              	.LASF51:
 2509 0209 6D566F6C 		.ascii	"mVolts\000"
 2509      747300
 2510              	.LASF19:
 2511 0210 72656733 		.ascii	"reg32\000"
 2511      3200
 2512              	.LASF14:
 2513 0216 666C6F61 		.ascii	"float32\000"
 2513      74333200 
 2514              	.LASF21:
 2515 021e 73697A65 		.ascii	"sizetype\000"
 2515      74797065 
 2515      00
 2516              	.LASF40:
 2517 0227 6C6F774C 		.ascii	"lowLimit\000"
 2517      696D6974 
 2517      00
 2518              	.LASF20:
 2519 0230 6C6F6E67 		.ascii	"long double\000"
 2519      20646F75 
 2519      626C6500 
 2520              	.LASF41:
 2521 023c 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2521      53657448 
 2521      6967684C 
 2521      696D6974 
 2521      00
 2522              	.LASF32:
 2523 024d 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2523      4973456E 
 2523      64436F6E 
 2523      76657273 
 2523      696F6E00 
 2524              	.LASF17:
 2525 0261 696E7436 		.ascii	"int64\000"
 2525      3400
 2526              	.LASF59:
 2527 0267 4379496E 		.ascii	"CyIntSetPriority\000"
 2527      74536574 
 2527      5072696F 
 2527      72697479 
 2527      00
 2528              	.LASF37:
 2529 0278 4144435F 		.ascii	"ADC_SetChanMask\000"
 2529      53657443 
 2529      68616E4D 
 2529      61736B00 
 2530              	.LASF64:
 2531 0288 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 63


 2531      72617465 
 2531      645F536F 
 2531      75726365 
 2531      5C50536F 
 2532              	.LASF47:
 2533 02a5 4144435F 		.ascii	"ADC_SetGain\000"
 2533      53657447 
 2533      61696E00 
 2534              	.LASF15:
 2535 02b1 666C6F61 		.ascii	"float\000"
 2535      7400
 2536              	.LASF42:
 2537 02b7 68696768 		.ascii	"highLimit\000"
 2537      4C696D69 
 2537      7400
 2538              	.LASF49:
 2539 02c1 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2539      436F756E 
 2539      7473546F 
 2539      5F6D566F 
 2539      6C747300 
 2540              	.LASF39:
 2541 02d5 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2541      5365744C 
 2541      6F774C69 
 2541      6D697400 
 2542              	.LASF62:
 2543 02e5 43794861 		.ascii	"CyHalt\000"
 2543      6C7400
 2544              	.LASF1:
 2545 02ec 756E7369 		.ascii	"unsigned char\000"
 2545      676E6564 
 2545      20636861 
 2545      7200
 2546              	.LASF57:
 2547 02fa 4144435F 		.ascii	"ADC_offset\000"
 2547      6F666673 
 2547      657400
 2548              	.LASF2:
 2549 0305 73686F72 		.ascii	"short int\000"
 2549      7420696E 
 2549      7400
 2550              	.LASF28:
 2551 030f 4144435F 		.ascii	"ADC_Stop\000"
 2551      53746F70 
 2551      00
 2552              	.LASF22:
 2553 0318 63684E75 		.ascii	"chNum\000"
 2553      6D00
 2554              	.LASF35:
 2555 031e 6368616E 		.ascii	"chan\000"
 2555      00
 2556              	.LASF18:
 2557 0323 63686172 		.ascii	"char\000"
 2557      00
 2558              	.LASF55:
 2559 0328 4144435F 		.ascii	"ADC_channelsConfig\000"
ARM GAS  C:\Users\HELLOK~1\AppData\Local\Temp\cc3Slll6.s 			page 64


 2559      6368616E 
 2559      6E656C73 
 2559      436F6E66 
 2559      696700
 2560              	.LASF46:
 2561 033b 6F666673 		.ascii	"offset\000"
 2561      657400
 2562              	.LASF50:
 2563 0342 61646343 		.ascii	"adcCounts\000"
 2563      6F756E74 
 2563      7300
 2564              	.LASF26:
 2565 034c 4144435F 		.ascii	"ADC_Enable\000"
 2565      456E6162 
 2565      6C6500
 2566              	.LASF12:
 2567 0357 696E7431 		.ascii	"int16\000"
 2567      3600
 2568              	.LASF45:
 2569 035d 4144435F 		.ascii	"ADC_SetOffset\000"
 2569      5365744F 
 2569      66667365 
 2569      7400
 2570              	.LASF36:
 2571 036b 72657375 		.ascii	"result\000"
 2571      6C7400
 2572              	.LASF33:
 2573 0372 4144435F 		.ascii	"ADC_GetResult16\000"
 2573      47657452 
 2573      6573756C 
 2573      74313600 
 2574              	.LASF65:
 2575 0382 433A5C55 		.ascii	"C:\\Users\\Hello Kitty\\Desktop\\MicrocontrollersLa"
 2575      73657273 
 2575      5C48656C 
 2575      6C6F204B 
 2575      69747479 
 2576 03b1 625C4C61 		.ascii	"b\\Lab 7 - Analog\\Project\\Lab 7 - Analog\\Calibra"
 2576      62203720 
 2576      2D20416E 
 2576      616C6F67 
 2576      5C50726F 
 2577 03e0 74696F6E 		.ascii	"tion.cydsn\000"
 2577      2E637964 
 2577      736E00
 2578              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
