ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_Init, %function
  25              	ADC_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.60
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 2


  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:Generated_Source\PSoC4/ADC.c **** }
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 3


  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 4


 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 1020     		movs	r0, #16
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  41              		.loc 1 173 0
  42 000a 2149     		ldr	r1, .L6
  43 000c 1020     		movs	r0, #16
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0122     		movs	r2, #1
  48 0014 1F4B     		ldr	r3, .L6+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 5


 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 1F4B     		ldr	r3, .L6+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L5
  56 0020 1E49     		ldr	r1, .L6+12
  57 0022 00E0     		b	.L2
  58              	.L5:
  59 0024 1E49     		ldr	r1, .L6+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 1F4A     		ldr	r2, .L6+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 1E4A     		ldr	r2, .L6+24
  68 0030 1E4B     		ldr	r3, .L6+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 1E4A     		ldr	r2, .L6+32
  72 0036 1F4B     		ldr	r3, .L6+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 1E4A     		ldr	r2, .L6+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 1E4A     		ldr	r2, .L6+44
  80 0042 1F49     		ldr	r1, .L6+48
  81 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 1F49     		ldr	r1, .L6+52
  84 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  85              		.loc 1 197 0 discriminator 4
  86 004a 1F4A     		ldr	r2, .L6+56
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 6


  87 004c 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  88              		.loc 1 198 0 discriminator 4
  89 004e 1F4A     		ldr	r2, .L6+60
  90 0050 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  91              		.loc 1 199 0 discriminator 4
  92 0052 0122     		movs	r2, #1
  93 0054 1E4B     		ldr	r3, .L6+64
  94 0056 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
  95              		.loc 1 206 0 discriminator 4
  96 0058 1E4A     		ldr	r2, .L6+68
  97 005a 1168     		ldr	r1, [r2]
  98              	.LVL2:
  99 005c 1E4B     		ldr	r3, .L6+72
 100 005e 0B40     		ands	r3, r1
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 101              		.loc 1 221 0 discriminator 4
 102 0060 8021     		movs	r1, #128
 103              	.LVL3:
 104 0062 8905     		lsls	r1, r1, #22
 105 0064 0B43     		orrs	r3, r1
 106              	.LVL4:
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 107              		.loc 1 226 0 discriminator 4
 108 0066 1360     		str	r3, [r2]
 109              	.LVL5:
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 7


 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 110              		.loc 1 232 0 discriminator 4
 111 0068 0023     		movs	r3, #0
 112              	.LVL6:
 113 006a 0DE0     		b	.L3
 114              	.LVL7:
 115              	.L4:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 116              		.loc 1 253 0
 117 006c 9A00     		lsls	r2, r3, #2
 118 006e 1B49     		ldr	r1, .L6+76
 119 0070 5118     		adds	r1, r2, r1
 120 0072 8020     		movs	r0, #128
 121 0074 C000     		lsls	r0, r0, #3
 122 0076 0860     		str	r0, [r1]
 123              	.LVL8:
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 8


 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 124              		.loc 1 298 0
 125 0078 5800     		lsls	r0, r3, #1
 126 007a 0024     		movs	r4, #0
 127 007c 1849     		ldr	r1, .L6+80
 128 007e 4452     		strh	r4, [r0, r1]
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 129              		.loc 1 311 0
 130 0080 1848     		ldr	r0, .L6+84
 131 0082 1949     		ldr	r1, .L6+88
 132 0084 5050     		str	r0, [r2, r1]
 232:Generated_Source\PSoC4/ADC.c ****     {
 133              		.loc 1 232 0
 134 0086 0133     		adds	r3, r3, #1
 135              	.LVL9:
 136              	.L3:
 232:Generated_Source\PSoC4/ADC.c ****     {
 137              		.loc 1 232 0 is_stmt 0 discriminator 1
 138 0088 002B     		cmp	r3, #0
 139 008a EFD0     		beq	.L4
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 313:Generated_Source\PSoC4/ADC.c ****     }
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 9


 314:Generated_Source\PSoC4/ADC.c **** }
 140              		.loc 1 314 0 is_stmt 1
 141              		@ sp needed
 142 008c 10BD     		pop	{r4, pc}
 143              	.L7:
 144 008e C046     		.align	2
 145              	.L6:
 146 0090 00000000 		.word	ADC_ISR
 147 0094 20003A40 		.word	1077542944
 148 0098 80033A40 		.word	1077543808
 149 009c C00E1053 		.word	1393561280
 150 00a0 C00E0053 		.word	1392512704
 151 00a4 00003A40 		.word	1077542912
 152 00a8 F8000080 		.word	-2147483400
 153 00ac 04003A40 		.word	1077542916
 154 00b0 0000FF07 		.word	134152192
 155 00b4 18003A40 		.word	1077542936
 156 00b8 1C003A40 		.word	1077542940
 157 00bc 04000400 		.word	262148
 158 00c0 10003A40 		.word	1077542928
 159 00c4 14003A40 		.word	1077542932
 160 00c8 28023A40 		.word	1077543464
 161 00cc 38023A40 		.word	1077543480
 162 00d0 18023A40 		.word	1077543448
 163 00d4 30003A40 		.word	1077542960
 164 00d8 FEFFFFDF 		.word	-536870914
 165 00dc 80003A40 		.word	1077543040
 166 00e0 00000000 		.word	ADC_offset
 167 00e4 204E0000 		.word	20000
 168 00e8 00000000 		.word	ADC_countsPer10Volt
 169              		.cfi_endproc
 170              	.LFE2:
 171              		.size	ADC_Init, .-ADC_Init
 172              		.section	.text.ADC_Enable,"ax",%progbits
 173              		.align	2
 174              		.global	ADC_Enable
 175              		.code	16
 176              		.thumb_func
 177              		.type	ADC_Enable, %function
 178              	ADC_Enable:
 179              	.LFB3:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 10


 331:Generated_Source\PSoC4/ADC.c **** {
 180              		.loc 1 331 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0000 10B5     		push	{r4, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 188              		.loc 1 332 0
 189 0002 094B     		ldr	r3, .L11
 190 0004 1B68     		ldr	r3, [r3]
 191 0006 002B     		cmp	r3, #0
 192 0008 0CDB     		blt	.L8
 193              	.L10:
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 194              		.loc 1 336 0 discriminator 1
 195 000a 084B     		ldr	r3, .L11+4
 196 000c 1B68     		ldr	r3, [r3]
 197 000e 002B     		cmp	r3, #0
 198 0010 FBDB     		blt	.L10
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 199              		.loc 1 342 0
 200 0012 054A     		ldr	r2, .L11
 201 0014 1368     		ldr	r3, [r2]
 202 0016 8021     		movs	r1, #128
 203 0018 0906     		lsls	r1, r1, #24
 204 001a 0B43     		orrs	r3, r1
 205 001c 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 206              		.loc 1 345 0
 207 001e 0A20     		movs	r0, #10
 208 0020 FFF7FEFF 		bl	CyDelayUs
 209              	.LVL10:
 210              	.L8:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 211              		.loc 1 347 0
 212              		@ sp needed
 213 0024 10BD     		pop	{r4, pc}
 214              	.L12:
 215 0026 C046     		.align	2
 216              	.L11:
 217 0028 00003A40 		.word	1077542912
 218 002c 08023A40 		.word	1077543432
 219              		.cfi_endproc
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 11


 220              	.LFE3:
 221              		.size	ADC_Enable, .-ADC_Enable
 222              		.section	.text.ADC_Start,"ax",%progbits
 223              		.align	2
 224              		.global	ADC_Start
 225              		.code	16
 226              		.thumb_func
 227              		.type	ADC_Start, %function
 228              	ADC_Start:
 229              	.LFB1:
  64:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 230              		.loc 1 64 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 10B5     		push	{r4, lr}
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 4, -8
 237              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC.c ****     {
 238              		.loc 1 66 0
 239 0002 064B     		ldr	r3, .L15
 240 0004 1B78     		ldrb	r3, [r3]
 241 0006 002B     		cmp	r3, #0
 242 0008 04D1     		bne	.L14
  68:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 243              		.loc 1 68 0
 244 000a FFF7FEFF 		bl	ADC_Init
 245              	.LVL11:
  69:Generated_Source\PSoC4/ADC.c ****     }
 246              		.loc 1 69 0
 247 000e 0122     		movs	r2, #1
 248 0010 024B     		ldr	r3, .L15
 249 0012 1A70     		strb	r2, [r3]
 250              	.L14:
  71:Generated_Source\PSoC4/ADC.c **** }
 251              		.loc 1 71 0
 252 0014 FFF7FEFF 		bl	ADC_Enable
 253              	.LVL12:
  72:Generated_Source\PSoC4/ADC.c **** 
 254              		.loc 1 72 0
 255              		@ sp needed
 256 0018 10BD     		pop	{r4, pc}
 257              	.L16:
 258 001a C046     		.align	2
 259              	.L15:
 260 001c 00000000 		.word	.LANCHOR0
 261              		.cfi_endproc
 262              	.LFE1:
 263              		.size	ADC_Start, .-ADC_Start
 264              		.section	.text.ADC_Stop,"ax",%progbits
 265              		.align	2
 266              		.global	ADC_Stop
 267              		.code	16
 268              		.thumb_func
 269              		.type	ADC_Stop, %function
 270              	ADC_Stop:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 12


 271              	.LFB4:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 272              		.loc 1 366 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 277              		.loc 1 367 0
 278 0000 024A     		ldr	r2, .L18
 279 0002 1368     		ldr	r3, [r2]
 280 0004 5B00     		lsls	r3, r3, #1
 281 0006 5B08     		lsrs	r3, r3, #1
 282 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC.c **** }
 283              		.loc 1 368 0
 284              		@ sp needed
 285 000a 7047     		bx	lr
 286              	.L19:
 287              		.align	2
 288              	.L18:
 289 000c 00003A40 		.word	1077542912
 290              		.cfi_endproc
 291              	.LFE4:
 292              		.size	ADC_Stop, .-ADC_Stop
 293              		.section	.text.ADC_StartConvert,"ax",%progbits
 294              		.align	2
 295              		.global	ADC_StartConvert
 296              		.code	16
 297              		.thumb_func
 298              		.type	ADC_StartConvert, %function
 299              	ADC_StartConvert:
 300              	.LFB5:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 13


 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 301              		.loc 1 392 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 306              		.loc 1 394 0
 307 0000 034A     		ldr	r2, .L21
 308 0002 1368     		ldr	r3, [r2]
 309 0004 8021     		movs	r1, #128
 310 0006 4902     		lsls	r1, r1, #9
 311 0008 0B43     		orrs	r3, r1
 312 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 313              		.loc 1 399 0
 314              		@ sp needed
 315 000c 7047     		bx	lr
 316              	.L22:
 317 000e C046     		.align	2
 318              	.L21:
 319 0010 04003A40 		.word	1077542916
 320              		.cfi_endproc
 321              	.LFE5:
 322              		.size	ADC_StartConvert, .-ADC_StartConvert
 323              		.section	.text.ADC_StopConvert,"ax",%progbits
 324              		.align	2
 325              		.global	ADC_StopConvert
 326              		.code	16
 327              		.thumb_func
 328              		.type	ADC_StopConvert, %function
 329              	ADC_StopConvert:
 330              	.LFB6:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 14


 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 331              		.loc 1 417 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 336              		.loc 1 419 0
 337 0000 024A     		ldr	r2, .L24
 338 0002 1168     		ldr	r1, [r2]
 339 0004 024B     		ldr	r3, .L24+4
 340 0006 0B40     		ands	r3, r1
 341 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 342              		.loc 1 421 0
 343              		@ sp needed
 344 000a 7047     		bx	lr
 345              	.L25:
 346              		.align	2
 347              	.L24:
 348 000c 04003A40 		.word	1077542916
 349 0010 FFFFFEFF 		.word	-65537
 350              		.cfi_endproc
 351              	.LFE6:
 352              		.size	ADC_StopConvert, .-ADC_StopConvert
 353              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 354              		.align	2
 355              		.global	ADC_IsEndConversion
 356              		.code	16
 357              		.thumb_func
 358              		.type	ADC_IsEndConversion, %function
 359              	ADC_IsEndConversion:
 360              	.LFB7:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 15


 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 361              		.loc 1 451 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 366              	.LVL13:
 367 0000 0200     		movs	r2, r0
 368              	.LVL14:
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 369              		.loc 1 454 0
 370 0002 8307     		lsls	r3, r0, #30
 371 0004 0CD0     		beq	.L30
 372              	.LVL15:
 373              	.L29:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 374              		.loc 1 458 0 discriminator 2
 375 0006 074B     		ldr	r3, .L31
 376 0008 1B68     		ldr	r3, [r3]
 377 000a 0120     		movs	r0, #1
 378 000c 1840     		ands	r0, r3
 379              	.LVL16:
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 380              		.loc 1 459 0 discriminator 2
 381 000e 01D1     		bne	.L28
 382              		.loc 1 459 0 is_stmt 0 discriminator 1
 383 0010 9307     		lsls	r3, r2, #30
 384 0012 F8D4     		bmi	.L29
 385              	.L28:
 460:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 16


 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 386              		.loc 1 461 0 is_stmt 1
 387 0014 0028     		cmp	r0, #0
 388 0016 04D0     		beq	.L27
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 389              		.loc 1 464 0
 390 0018 0122     		movs	r2, #1
 391              	.LVL17:
 392 001a 024B     		ldr	r3, .L31
 393 001c 1A60     		str	r2, [r3]
 394 001e 00E0     		b	.L27
 395              	.LVL18:
 396              	.L30:
 452:Generated_Source\PSoC4/ADC.c **** 
 397              		.loc 1 452 0
 398 0020 0020     		movs	r0, #0
 399              	.LVL19:
 400              	.L27:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 486:Generated_Source\PSoC4/ADC.c **** }
 401              		.loc 1 486 0
 402              		@ sp needed
 403 0022 7047     		bx	lr
 404              	.L32:
 405              		.align	2
 406              	.L31:
 407 0024 10023A40 		.word	1077543440
 408              		.cfi_endproc
 409              	.LFE7:
 410              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 411              		.section	.text.ADC_GetResult16,"ax",%progbits
 412              		.align	2
 413              		.global	ADC_GetResult16
 414              		.code	16
 415              		.thumb_func
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 17


 416              		.type	ADC_GetResult16, %function
 417              	ADC_GetResult16:
 418              	.LFB8:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 419              		.loc 1 505 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              	.LVL20:
 424 0000 10B5     		push	{r4, lr}
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 4, -8
 427              		.cfi_offset 14, -4
 428 0002 041E     		subs	r4, r0, #0
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 429              		.loc 1 509 0
 430 0004 02D0     		beq	.L34
 431              		.loc 1 509 0 is_stmt 0 discriminator 1
 432 0006 0020     		movs	r0, #0
 433              	.LVL21:
 434 0008 FFF7FEFF 		bl	CyHalt
 435              	.LVL22:
 436              	.L34:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 437              		.loc 1 511 0 is_stmt 1
 438 000c 002C     		cmp	r4, #0
 439 000e 07D1     		bne	.L36
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 440              		.loc 1 513 0
 441 0010 A400     		lsls	r4, r4, #2
 442              	.LVL23:
 443 0012 054B     		ldr	r3, .L37
 444 0014 9C46     		mov	ip, r3
 445 0016 6444     		add	r4, r4, ip
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 18


 446 0018 2068     		ldr	r0, [r4]
 447 001a 0004     		lsls	r0, r0, #16
 448 001c 000C     		lsrs	r0, r0, #16
 449              	.LVL24:
 450 001e 00E0     		b	.L35
 451              	.LVL25:
 452              	.L36:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 453              		.loc 1 521 0
 454 0020 0020     		movs	r0, #0
 455              	.LVL26:
 456              	.L35:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 457              		.loc 1 525 0
 458 0022 00B2     		sxth	r0, r0
 459              	.LVL27:
 526:Generated_Source\PSoC4/ADC.c **** }
 460              		.loc 1 526 0
 461              		@ sp needed
 462 0024 10BD     		pop	{r4, pc}
 463              	.L38:
 464 0026 C046     		.align	2
 465              	.L37:
 466 0028 80013A40 		.word	1077543296
 467              		.cfi_endproc
 468              	.LFE8:
 469              		.size	ADC_GetResult16, .-ADC_GetResult16
 470              		.section	.text.ADC_SetChanMask,"ax",%progbits
 471              		.align	2
 472              		.global	ADC_SetChanMask
 473              		.code	16
 474              		.thumb_func
 475              		.type	ADC_SetChanMask, %function
 476              	ADC_SetChanMask:
 477              	.LFB9:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 19


 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 478              		.loc 1 550 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 483              	.LVL28:
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 484              		.loc 1 551 0
 485 0000 0123     		movs	r3, #1
 486 0002 1840     		ands	r0, r3
 487              	.LVL29:
 488 0004 014B     		ldr	r3, .L40
 489 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 490              		.loc 1 552 0
 491              		@ sp needed
 492 0008 7047     		bx	lr
 493              	.L41:
 494 000a C046     		.align	2
 495              	.L40:
 496 000c 20003A40 		.word	1077542944
 497              		.cfi_endproc
 498              	.LFE9:
 499              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 500              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 501              		.align	2
 502              		.global	ADC_SetLowLimit
 503              		.code	16
 504              		.thumb_func
 505              		.type	ADC_SetLowLimit, %function
 506              	ADC_SetLowLimit:
 507              	.LFB10:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 20


 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 508              		.loc 1 594 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513              	.LVL30:
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 514              		.loc 1 595 0
 515 0000 054A     		ldr	r2, .L43
 516 0002 1368     		ldr	r3, [r2]
 517 0004 1B0C     		lsrs	r3, r3, #16
 518 0006 1B04     		lsls	r3, r3, #16
 519 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 520              		.loc 1 596 0
 521 000a 1368     		ldr	r3, [r2]
 522 000c 0004     		lsls	r0, r0, #16
 523              	.LVL31:
 524 000e 000C     		lsrs	r0, r0, #16
 525 0010 1843     		orrs	r0, r3
 526 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC.c **** }
 527              		.loc 1 597 0
 528              		@ sp needed
 529 0014 7047     		bx	lr
 530              	.L44:
 531 0016 C046     		.align	2
 532              	.L43:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 21


 533 0018 18003A40 		.word	1077542936
 534              		.cfi_endproc
 535              	.LFE10:
 536              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 537              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 538              		.align	2
 539              		.global	ADC_SetHighLimit
 540              		.code	16
 541              		.thumb_func
 542              		.type	ADC_SetHighLimit, %function
 543              	ADC_SetHighLimit:
 544              	.LFB11:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 545              		.loc 1 615 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 550              	.LVL32:
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 551              		.loc 1 616 0
 552 0000 044A     		ldr	r2, .L46
 553 0002 1368     		ldr	r3, [r2]
 554 0004 1B04     		lsls	r3, r3, #16
 555 0006 1B0C     		lsrs	r3, r3, #16
 556 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 557              		.loc 1 617 0
 558 000a 1368     		ldr	r3, [r2]
 559 000c 0004     		lsls	r0, r0, #16
 560              	.LVL33:
 561 000e 1843     		orrs	r0, r3
 562 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC.c **** }
 563              		.loc 1 618 0
 564              		@ sp needed
 565 0012 7047     		bx	lr
 566              	.L47:
 567              		.align	2
 568              	.L46:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 22


 569 0014 18003A40 		.word	1077542936
 570              		.cfi_endproc
 571              	.LFE11:
 572              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 573              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 574              		.align	2
 575              		.global	ADC_SetLimitMask
 576              		.code	16
 577              		.thumb_func
 578              		.type	ADC_SetLimitMask, %function
 579              	ADC_SetLimitMask:
 580              	.LFB12:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 581              		.loc 1 639 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL34:
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 587              		.loc 1 640 0
 588 0000 0123     		movs	r3, #1
 589 0002 1840     		ands	r0, r3
 590              	.LVL35:
 591 0004 014B     		ldr	r3, .L49
 592 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 593              		.loc 1 641 0
 594              		@ sp needed
 595 0008 7047     		bx	lr
 596              	.L50:
 597 000a C046     		.align	2
 598              	.L49:
 599 000c 38023A40 		.word	1077543480
 600              		.cfi_endproc
 601              	.LFE12:
 602              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 23


 603              		.section	.text.ADC_SetSatMask,"ax",%progbits
 604              		.align	2
 605              		.global	ADC_SetSatMask
 606              		.code	16
 607              		.thumb_func
 608              		.type	ADC_SetSatMask, %function
 609              	ADC_SetSatMask:
 610              	.LFB13:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 611              		.loc 1 662 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616              	.LVL36:
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 617              		.loc 1 663 0
 618 0000 0123     		movs	r3, #1
 619 0002 1840     		ands	r0, r3
 620              	.LVL37:
 621 0004 014B     		ldr	r3, .L52
 622 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 623              		.loc 1 664 0
 624              		@ sp needed
 625 0008 7047     		bx	lr
 626              	.L53:
 627 000a C046     		.align	2
 628              	.L52:
 629 000c 28023A40 		.word	1077543464
 630              		.cfi_endproc
 631              	.LFE13:
 632              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 633              		.section	.text.ADC_SetOffset,"ax",%progbits
 634              		.align	2
 635              		.global	ADC_SetOffset
 636              		.code	16
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 24


 637              		.thumb_func
 638              		.type	ADC_SetOffset, %function
 639              	ADC_SetOffset:
 640              	.LFB14:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 641              		.loc 1 690 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              	.LVL38:
 646 0000 70B5     		push	{r4, r5, r6, lr}
 647              		.cfi_def_cfa_offset 16
 648              		.cfi_offset 4, -16
 649              		.cfi_offset 5, -12
 650              		.cfi_offset 6, -8
 651              		.cfi_offset 14, -4
 652 0002 0400     		movs	r4, r0
 653 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 654              		.loc 1 692 0
 655 0006 0028     		cmp	r0, #0
 656 0008 02D0     		beq	.L55
 657              		.loc 1 692 0 is_stmt 0 discriminator 1
 658 000a 0020     		movs	r0, #0
 659              	.LVL39:
 660 000c FFF7FEFF 		bl	CyHalt
 661              	.LVL40:
 662              	.L55:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 663              		.loc 1 694 0 is_stmt 1
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 25


 664 0010 6400     		lsls	r4, r4, #1
 665              	.LVL41:
 666 0012 014B     		ldr	r3, .L56
 667 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 668              		.loc 1 695 0
 669              		@ sp needed
 670 0016 70BD     		pop	{r4, r5, r6, pc}
 671              	.L57:
 672              		.align	2
 673              	.L56:
 674 0018 00000000 		.word	ADC_offset
 675              		.cfi_endproc
 676              	.LFE14:
 677              		.size	ADC_SetOffset, .-ADC_SetOffset
 678              		.section	.text.ADC_SetGain,"ax",%progbits
 679              		.align	2
 680              		.global	ADC_SetGain
 681              		.code	16
 682              		.thumb_func
 683              		.type	ADC_SetGain, %function
 684              	ADC_SetGain:
 685              	.LFB15:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 686              		.loc 1 724 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              	.LVL42:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 26


 691 0000 70B5     		push	{r4, r5, r6, lr}
 692              		.cfi_def_cfa_offset 16
 693              		.cfi_offset 4, -16
 694              		.cfi_offset 5, -12
 695              		.cfi_offset 6, -8
 696              		.cfi_offset 14, -4
 697 0002 0400     		movs	r4, r0
 698 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 699              		.loc 1 726 0
 700 0006 0028     		cmp	r0, #0
 701 0008 02D0     		beq	.L59
 702              		.loc 1 726 0 is_stmt 0 discriminator 1
 703 000a 0020     		movs	r0, #0
 704              	.LVL43:
 705 000c FFF7FEFF 		bl	CyHalt
 706              	.LVL44:
 707              	.L59:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 708              		.loc 1 728 0 is_stmt 1
 709 0010 A400     		lsls	r4, r4, #2
 710              	.LVL45:
 711 0012 014B     		ldr	r3, .L60
 712 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 713              		.loc 1 729 0
 714              		@ sp needed
 715              	.LVL46:
 716 0016 70BD     		pop	{r4, r5, r6, pc}
 717              	.L61:
 718              		.align	2
 719              	.L60:
 720 0018 00000000 		.word	ADC_countsPer10Volt
 721              		.cfi_endproc
 722              	.LFE15:
 723              		.size	ADC_SetGain, .-ADC_SetGain
 724              		.global	__aeabi_idiv
 725              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 726              		.align	2
 727              		.global	ADC_CountsTo_mVolts
 728              		.code	16
 729              		.thumb_func
 730              		.type	ADC_CountsTo_mVolts, %function
 731              	ADC_CountsTo_mVolts:
 732              	.LFB16:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 27


 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 733              		.loc 1 757 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              	.LVL47:
 738 0000 70B5     		push	{r4, r5, r6, lr}
 739              		.cfi_def_cfa_offset 16
 740              		.cfi_offset 4, -16
 741              		.cfi_offset 5, -12
 742              		.cfi_offset 6, -8
 743              		.cfi_offset 14, -4
 744 0002 0400     		movs	r4, r0
 745 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 746              		.loc 1 761 0
 747 0006 0028     		cmp	r0, #0
 748 0008 02D0     		beq	.L63
 749              		.loc 1 761 0 is_stmt 0 discriminator 1
 750 000a 0020     		movs	r0, #0
 751              	.LVL48:
 752 000c FFF7FEFF 		bl	CyHalt
 753              	.LVL49:
 754              	.L63:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 755              		.loc 1 772 0 is_stmt 1
 756 0010 6300     		lsls	r3, r4, #1
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 28


 757 0012 0F4A     		ldr	r2, .L66
 758 0014 995A     		ldrh	r1, [r3, r2]
 759 0016 09B2     		sxth	r1, r1
 760 0018 691A     		subs	r1, r5, r1
 761 001a 09B2     		sxth	r1, r1
 762              	.LVL50:
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 763              		.loc 1 774 0
 764 001c 0D48     		ldr	r0, .L66+4
 765 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 766              		.loc 1 775 0
 767 0020 0029     		cmp	r1, #0
 768 0022 06DD     		ble	.L64
 769              		.loc 1 775 0 is_stmt 0 discriminator 1
 770 0024 A300     		lsls	r3, r4, #2
 771 0026 0C4A     		ldr	r2, .L66+8
 772 0028 9A58     		ldr	r2, [r3, r2]
 773 002a D30F     		lsrs	r3, r2, #31
 774 002c 9A18     		adds	r2, r3, r2
 775 002e 5310     		asrs	r3, r2, #1
 776 0030 06E0     		b	.L65
 777              	.L64:
 778              		.loc 1 775 0 discriminator 2
 779 0032 A300     		lsls	r3, r4, #2
 780 0034 084A     		ldr	r2, .L66+8
 781 0036 9A58     		ldr	r2, [r3, r2]
 782 0038 D30F     		lsrs	r3, r2, #31
 783 003a 9A18     		adds	r2, r3, r2
 784 003c 5210     		asrs	r2, r2, #1
 785 003e 5342     		rsbs	r3, r2, #0
 786              	.L65:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 787              		.loc 1 774 0 is_stmt 1
 788 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 789              		.loc 1 776 0
 790 0042 A400     		lsls	r4, r4, #2
 791              	.LVL51:
 792 0044 044B     		ldr	r3, .L66+8
 793 0046 E158     		ldr	r1, [r4, r3]
 794              	.LVL52:
 795 0048 FFF7FEFF 		bl	__aeabi_idiv
 796              	.LVL53:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 797              		.loc 1 774 0
 798 004c 00B2     		sxth	r0, r0
 799              	.LVL54:
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC.c ****     }
 800              		.loc 1 779 0
 801              		@ sp needed
 802 004e 70BD     		pop	{r4, r5, r6, pc}
 803              	.L67:
 804              		.align	2
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 29


 805              	.L66:
 806 0050 00000000 		.word	ADC_offset
 807 0054 10270000 		.word	10000
 808 0058 00000000 		.word	ADC_countsPer10Volt
 809              		.cfi_endproc
 810              	.LFE16:
 811              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 812              		.global	__aeabi_lmul
 813              		.global	__aeabi_ldivmod
 814              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 815              		.align	2
 816              		.global	ADC_CountsTo_uVolts
 817              		.code	16
 818              		.thumb_func
 819              		.type	ADC_CountsTo_uVolts, %function
 820              	ADC_CountsTo_uVolts:
 821              	.LFB17:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 822              		.loc 1 811 0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 0, uses_anonymous_args = 0
 826              	.LVL55:
 827 0000 70B5     		push	{r4, r5, r6, lr}
 828              		.cfi_def_cfa_offset 16
 829              		.cfi_offset 4, -16
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 30


 830              		.cfi_offset 5, -12
 831              		.cfi_offset 6, -8
 832              		.cfi_offset 14, -4
 833 0002 0500     		movs	r5, r0
 834 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 835              		.loc 1 815 0
 836 0006 0028     		cmp	r0, #0
 837 0008 02D0     		beq	.L69
 838              		.loc 1 815 0 is_stmt 0 discriminator 1
 839 000a 0020     		movs	r0, #0
 840              	.LVL56:
 841 000c FFF7FEFF 		bl	CyHalt
 842              	.LVL57:
 843              	.L69:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 844              		.loc 1 826 0 is_stmt 1
 845 0010 6A00     		lsls	r2, r5, #1
 846 0012 084B     		ldr	r3, .L70
 847 0014 D05A     		ldrh	r0, [r2, r3]
 848 0016 00B2     		sxth	r0, r0
 849 0018 201A     		subs	r0, r4, r0
 850 001a 00B2     		sxth	r0, r0
 851              	.LVL58:
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 852              		.loc 1 828 0
 853 001c C117     		asrs	r1, r0, #31
 854 001e 064A     		ldr	r2, .L70+4
 855 0020 0023     		movs	r3, #0
 856 0022 FFF7FEFF 		bl	__aeabi_lmul
 857              	.LVL59:
 858 0026 AD00     		lsls	r5, r5, #2
 859              	.LVL60:
 860 0028 044B     		ldr	r3, .L70+8
 861 002a EA58     		ldr	r2, [r5, r3]
 862 002c D317     		asrs	r3, r2, #31
 863 002e FFF7FEFF 		bl	__aeabi_ldivmod
 864              	.LVL61:
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC.c ****     }
 865              		.loc 1 831 0
 866              		@ sp needed
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 31


 867 0032 70BD     		pop	{r4, r5, r6, pc}
 868              	.L71:
 869              		.align	2
 870              	.L70:
 871 0034 00000000 		.word	ADC_offset
 872 0038 80969800 		.word	10000000
 873 003c 00000000 		.word	ADC_countsPer10Volt
 874              		.cfi_endproc
 875              	.LFE17:
 876              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 877              		.global	__aeabi_i2f
 878              		.global	__aeabi_fmul
 879              		.global	__aeabi_fdiv
 880              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 881              		.align	2
 882              		.global	ADC_CountsTo_Volts
 883              		.code	16
 884              		.thumb_func
 885              		.type	ADC_CountsTo_Volts, %function
 886              	ADC_CountsTo_Volts:
 887              	.LFB18:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 888              		.loc 1 856 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              	.LVL62:
 893 0000 70B5     		push	{r4, r5, r6, lr}
 894              		.cfi_def_cfa_offset 16
 895              		.cfi_offset 4, -16
 896              		.cfi_offset 5, -12
 897              		.cfi_offset 6, -8
 898              		.cfi_offset 14, -4
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 32


 899 0002 0400     		movs	r4, r0
 900 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 901              		.loc 1 860 0
 902 0006 0028     		cmp	r0, #0
 903 0008 02D0     		beq	.L73
 904              		.loc 1 860 0 is_stmt 0 discriminator 1
 905 000a 0020     		movs	r0, #0
 906              	.LVL63:
 907 000c FFF7FEFF 		bl	CyHalt
 908              	.LVL64:
 909              	.L73:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 910              		.loc 1 871 0 is_stmt 1
 911 0010 6200     		lsls	r2, r4, #1
 912 0012 0A4B     		ldr	r3, .L74
 913 0014 D05A     		ldrh	r0, [r2, r3]
 914 0016 00B2     		sxth	r0, r0
 915 0018 281A     		subs	r0, r5, r0
 916 001a 00B2     		sxth	r0, r0
 917              	.LVL65:
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 918              		.loc 1 873 0
 919 001c FFF7FEFF 		bl	__aeabi_i2f
 920              	.LVL66:
 921 0020 0749     		ldr	r1, .L74+4
 922 0022 FFF7FEFF 		bl	__aeabi_fmul
 923              	.LVL67:
 924 0026 051C     		adds	r5, r0, #0
 925 0028 A400     		lsls	r4, r4, #2
 926              	.LVL68:
 927 002a 064B     		ldr	r3, .L74+8
 928 002c E058     		ldr	r0, [r4, r3]
 929 002e FFF7FEFF 		bl	__aeabi_i2f
 930              	.LVL69:
 931 0032 011C     		adds	r1, r0, #0
 932 0034 281C     		adds	r0, r5, #0
 933 0036 FFF7FEFF 		bl	__aeabi_fdiv
 934              	.LVL70:
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC.c ****     }
 935              		.loc 1 876 0
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 33


 936              		@ sp needed
 937 003a 70BD     		pop	{r4, r5, r6, pc}
 938              	.L75:
 939              		.align	2
 940              	.L74:
 941 003c 00000000 		.word	ADC_offset
 942 0040 00002041 		.word	1092616192
 943 0044 00000000 		.word	ADC_countsPer10Volt
 944              		.cfi_endproc
 945              	.LFE18:
 946              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 947              		.comm	ADC_countsPer10Volt,4,4
 948              		.comm	ADC_offset,2,4
 949              		.global	ADC_initVar
 950              		.bss
 951              		.set	.LANCHOR0,. + 0
 952              		.type	ADC_initVar, %object
 953              		.size	ADC_initVar, 1
 954              	ADC_initVar:
 955 0000 00       		.space	1
 956              		.text
 957              	.Letext0:
 958              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 959              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 960              		.section	.debug_info,"",%progbits
 961              	.Ldebug_info0:
 962 0000 75050000 		.4byte	0x575
 963 0004 0400     		.2byte	0x4
 964 0006 00000000 		.4byte	.Ldebug_abbrev0
 965 000a 04       		.byte	0x4
 966 000b 01       		.uleb128 0x1
 967 000c 32000000 		.4byte	.LASF63
 968 0010 0C       		.byte	0xc
 969 0011 D8020000 		.4byte	.LASF64
 970 0015 09010000 		.4byte	.LASF65
 971 0019 00000000 		.4byte	.Ldebug_ranges0+0
 972 001d 00000000 		.4byte	0
 973 0021 00000000 		.4byte	.Ldebug_line0
 974 0025 02       		.uleb128 0x2
 975 0026 01       		.byte	0x1
 976 0027 06       		.byte	0x6
 977 0028 F6000000 		.4byte	.LASF0
 978 002c 02       		.uleb128 0x2
 979 002d 01       		.byte	0x1
 980 002e 08       		.byte	0x8
 981 002f 3C030000 		.4byte	.LASF1
 982 0033 02       		.uleb128 0x2
 983 0034 02       		.byte	0x2
 984 0035 05       		.byte	0x5
 985 0036 55030000 		.4byte	.LASF2
 986 003a 02       		.uleb128 0x2
 987 003b 02       		.byte	0x2
 988 003c 07       		.byte	0x7
 989 003d 27020000 		.4byte	.LASF3
 990 0041 02       		.uleb128 0x2
 991 0042 04       		.byte	0x4
 992 0043 05       		.byte	0x5
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 34


 993 0044 69010000 		.4byte	.LASF4
 994 0048 02       		.uleb128 0x2
 995 0049 04       		.byte	0x4
 996 004a 07       		.byte	0x7
 997 004b F6010000 		.4byte	.LASF5
 998 004f 02       		.uleb128 0x2
 999 0050 08       		.byte	0x8
 1000 0051 05       		.byte	0x5
 1001 0052 E8000000 		.4byte	.LASF6
 1002 0056 02       		.uleb128 0x2
 1003 0057 08       		.byte	0x8
 1004 0058 07       		.byte	0x7
 1005 0059 C0000000 		.4byte	.LASF7
 1006 005d 03       		.uleb128 0x3
 1007 005e 04       		.byte	0x4
 1008 005f 05       		.byte	0x5
 1009 0060 696E7400 		.ascii	"int\000"
 1010 0064 02       		.uleb128 0x2
 1011 0065 04       		.byte	0x4
 1012 0066 07       		.byte	0x7
 1013 0067 E2010000 		.4byte	.LASF8
 1014 006b 04       		.uleb128 0x4
 1015 006c 9A010000 		.4byte	.LASF9
 1016 0070 02       		.byte	0x2
 1017 0071 FC01     		.2byte	0x1fc
 1018 0073 2C000000 		.4byte	0x2c
 1019 0077 04       		.uleb128 0x4
 1020 0078 00000000 		.4byte	.LASF10
 1021 007c 02       		.byte	0x2
 1022 007d FD01     		.2byte	0x1fd
 1023 007f 3A000000 		.4byte	0x3a
 1024 0083 04       		.uleb128 0x4
 1025 0084 B1010000 		.4byte	.LASF11
 1026 0088 02       		.byte	0x2
 1027 0089 FE01     		.2byte	0x1fe
 1028 008b 48000000 		.4byte	0x48
 1029 008f 04       		.uleb128 0x4
 1030 0090 A7030000 		.4byte	.LASF12
 1031 0094 02       		.byte	0x2
 1032 0095 0002     		.2byte	0x200
 1033 0097 33000000 		.4byte	0x33
 1034 009b 04       		.uleb128 0x4
 1035 009c 59010000 		.4byte	.LASF13
 1036 00a0 02       		.byte	0x2
 1037 00a1 0102     		.2byte	0x201
 1038 00a3 41000000 		.4byte	0x41
 1039 00a7 04       		.uleb128 0x4
 1040 00a8 66020000 		.4byte	.LASF14
 1041 00ac 02       		.byte	0x2
 1042 00ad 0202     		.2byte	0x202
 1043 00af B3000000 		.4byte	0xb3
 1044 00b3 02       		.uleb128 0x2
 1045 00b4 04       		.byte	0x4
 1046 00b5 04       		.byte	0x4
 1047 00b6 01030000 		.4byte	.LASF15
 1048 00ba 02       		.uleb128 0x2
 1049 00bb 08       		.byte	0x8
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 35


 1050 00bc 04       		.byte	0x4
 1051 00bd AA010000 		.4byte	.LASF16
 1052 00c1 04       		.uleb128 0x4
 1053 00c2 B1020000 		.4byte	.LASF17
 1054 00c6 02       		.byte	0x2
 1055 00c7 0702     		.2byte	0x207
 1056 00c9 4F000000 		.4byte	0x4f
 1057 00cd 02       		.uleb128 0x2
 1058 00ce 01       		.byte	0x1
 1059 00cf 08       		.byte	0x8
 1060 00d0 73030000 		.4byte	.LASF18
 1061 00d4 04       		.uleb128 0x4
 1062 00d5 60020000 		.4byte	.LASF19
 1063 00d9 02       		.byte	0x2
 1064 00da A802     		.2byte	0x2a8
 1065 00dc E0000000 		.4byte	0xe0
 1066 00e0 05       		.uleb128 0x5
 1067 00e1 83000000 		.4byte	0x83
 1068 00e5 02       		.uleb128 0x2
 1069 00e6 08       		.byte	0x8
 1070 00e7 04       		.byte	0x4
 1071 00e8 80020000 		.4byte	.LASF20
 1072 00ec 02       		.uleb128 0x2
 1073 00ed 04       		.byte	0x4
 1074 00ee 07       		.byte	0x7
 1075 00ef 6E020000 		.4byte	.LASF21
 1076 00f3 06       		.uleb128 0x6
 1077 00f4 29000000 		.4byte	.LASF25
 1078 00f8 01       		.byte	0x1
 1079 00f9 5E       		.byte	0x5e
 1080 00fa 00000000 		.4byte	.LFB2
 1081 00fe EC000000 		.4byte	.LFE2-.LFB2
 1082 0102 01       		.uleb128 0x1
 1083 0103 9C       		.byte	0x9c
 1084 0104 5D010000 		.4byte	0x15d
 1085 0108 07       		.uleb128 0x7
 1086 0109 68030000 		.4byte	.LASF22
 1087 010d 01       		.byte	0x1
 1088 010e 60       		.byte	0x60
 1089 010f 83000000 		.4byte	0x83
 1090 0113 00000000 		.4byte	.LLST0
 1091 0117 07       		.uleb128 0x7
 1092 0118 1D020000 		.4byte	.LASF23
 1093 011c 01       		.byte	0x1
 1094 011d 61       		.byte	0x61
 1095 011e 83000000 		.4byte	0x83
 1096 0122 1F000000 		.4byte	.LLST1
 1097 0126 07       		.uleb128 0x7
 1098 0127 0F000000 		.4byte	.LASF24
 1099 012b 01       		.byte	0x1
 1100 012c 62       		.byte	0x62
 1101 012d 9B000000 		.4byte	0x9b
 1102 0131 5D000000 		.4byte	.LLST2
 1103 0135 08       		.uleb128 0x8
 1104 0136 0A000000 		.4byte	.LVL0
 1105 013a 4C050000 		.4byte	0x54c
 1106 013e 4D010000 		.4byte	0x14d
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 36


 1107 0142 09       		.uleb128 0x9
 1108 0143 01       		.uleb128 0x1
 1109 0144 50       		.byte	0x50
 1110 0145 01       		.uleb128 0x1
 1111 0146 40       		.byte	0x40
 1112 0147 09       		.uleb128 0x9
 1113 0148 01       		.uleb128 0x1
 1114 0149 51       		.byte	0x51
 1115 014a 01       		.uleb128 0x1
 1116 014b 33       		.byte	0x33
 1117 014c 00       		.byte	0
 1118 014d 0A       		.uleb128 0xa
 1119 014e 12000000 		.4byte	.LVL1
 1120 0152 57050000 		.4byte	0x557
 1121 0156 09       		.uleb128 0x9
 1122 0157 01       		.uleb128 0x1
 1123 0158 50       		.byte	0x50
 1124 0159 01       		.uleb128 0x1
 1125 015a 40       		.byte	0x40
 1126 015b 00       		.byte	0
 1127 015c 00       		.byte	0
 1128 015d 0B       		.uleb128 0xb
 1129 015e 9C030000 		.4byte	.LASF26
 1130 0162 01       		.byte	0x1
 1131 0163 4A01     		.2byte	0x14a
 1132 0165 00000000 		.4byte	.LFB3
 1133 0169 30000000 		.4byte	.LFE3-.LFB3
 1134 016d 01       		.uleb128 0x1
 1135 016e 9C       		.byte	0x9c
 1136 016f 83010000 		.4byte	0x183
 1137 0173 0A       		.uleb128 0xa
 1138 0174 24000000 		.4byte	.LVL10
 1139 0178 62050000 		.4byte	0x562
 1140 017c 09       		.uleb128 0x9
 1141 017d 01       		.uleb128 0x1
 1142 017e 50       		.byte	0x50
 1143 017f 01       		.uleb128 0x1
 1144 0180 3A       		.byte	0x3a
 1145 0181 00       		.byte	0
 1146 0182 00       		.byte	0
 1147 0183 06       		.uleb128 0x6
 1148 0184 5F010000 		.4byte	.LASF27
 1149 0188 01       		.byte	0x1
 1150 0189 3F       		.byte	0x3f
 1151 018a 00000000 		.4byte	.LFB1
 1152 018e 20000000 		.4byte	.LFE1-.LFB1
 1153 0192 01       		.uleb128 0x1
 1154 0193 9C       		.byte	0x9c
 1155 0194 AB010000 		.4byte	0x1ab
 1156 0198 0C       		.uleb128 0xc
 1157 0199 0E000000 		.4byte	.LVL11
 1158 019d F3000000 		.4byte	0xf3
 1159 01a1 0C       		.uleb128 0xc
 1160 01a2 18000000 		.4byte	.LVL12
 1161 01a6 5D010000 		.4byte	0x15d
 1162 01aa 00       		.byte	0
 1163 01ab 0D       		.uleb128 0xd
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 37


 1164 01ac 5F030000 		.4byte	.LASF28
 1165 01b0 01       		.byte	0x1
 1166 01b1 6D01     		.2byte	0x16d
 1167 01b3 00000000 		.4byte	.LFB4
 1168 01b7 10000000 		.4byte	.LFE4-.LFB4
 1169 01bb 01       		.uleb128 0x1
 1170 01bc 9C       		.byte	0x9c
 1171 01bd 0D       		.uleb128 0xd
 1172 01be D7000000 		.4byte	.LASF29
 1173 01c2 01       		.byte	0x1
 1174 01c3 8701     		.2byte	0x187
 1175 01c5 00000000 		.4byte	.LFB5
 1176 01c9 14000000 		.4byte	.LFE5-.LFB5
 1177 01cd 01       		.uleb128 0x1
 1178 01ce 9C       		.byte	0x9c
 1179 01cf 0D       		.uleb128 0xd
 1180 01d0 49020000 		.4byte	.LASF30
 1181 01d4 01       		.byte	0x1
 1182 01d5 A001     		.2byte	0x1a0
 1183 01d7 00000000 		.4byte	.LFB6
 1184 01db 14000000 		.4byte	.LFE6-.LFB6
 1185 01df 01       		.uleb128 0x1
 1186 01e0 9C       		.byte	0x9c
 1187 01e1 0E       		.uleb128 0xe
 1188 01e2 9D020000 		.4byte	.LASF32
 1189 01e6 01       		.byte	0x1
 1190 01e7 C201     		.2byte	0x1c2
 1191 01e9 83000000 		.4byte	0x83
 1192 01ed 00000000 		.4byte	.LFB7
 1193 01f1 28000000 		.4byte	.LFE7-.LFB7
 1194 01f5 01       		.uleb128 0x1
 1195 01f6 9C       		.byte	0x9c
 1196 01f7 1C020000 		.4byte	0x21c
 1197 01fb 0F       		.uleb128 0xf
 1198 01fc C9010000 		.4byte	.LASF34
 1199 0200 01       		.byte	0x1
 1200 0201 C201     		.2byte	0x1c2
 1201 0203 83000000 		.4byte	0x83
 1202 0207 73000000 		.4byte	.LLST3
 1203 020b 10       		.uleb128 0x10
 1204 020c 02010000 		.4byte	.LASF31
 1205 0210 01       		.byte	0x1
 1206 0211 C401     		.2byte	0x1c4
 1207 0213 83000000 		.4byte	0x83
 1208 0217 B8000000 		.4byte	.LLST4
 1209 021b 00       		.byte	0
 1210 021c 0E       		.uleb128 0xe
 1211 021d C2030000 		.4byte	.LASF33
 1212 0221 01       		.byte	0x1
 1213 0222 F801     		.2byte	0x1f8
 1214 0224 8F000000 		.4byte	0x8f
 1215 0228 00000000 		.4byte	.LFB8
 1216 022c 2C000000 		.4byte	.LFE8-.LFB8
 1217 0230 01       		.uleb128 0x1
 1218 0231 9C       		.byte	0x9c
 1219 0232 66020000 		.4byte	0x266
 1220 0236 0F       		.uleb128 0xf
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 38


 1221 0237 6E030000 		.4byte	.LASF35
 1222 023b 01       		.byte	0x1
 1223 023c F801     		.2byte	0x1f8
 1224 023e 83000000 		.4byte	0x83
 1225 0242 EE000000 		.4byte	.LLST5
 1226 0246 10       		.uleb128 0x10
 1227 0247 BB030000 		.4byte	.LASF36
 1228 024b 01       		.byte	0x1
 1229 024c FA01     		.2byte	0x1fa
 1230 024e 83000000 		.4byte	0x83
 1231 0252 33010000 		.4byte	.LLST6
 1232 0256 0A       		.uleb128 0xa
 1233 0257 0C000000 		.4byte	.LVL22
 1234 025b 6D050000 		.4byte	0x56d
 1235 025f 09       		.uleb128 0x9
 1236 0260 01       		.uleb128 0x1
 1237 0261 50       		.byte	0x50
 1238 0262 01       		.uleb128 0x1
 1239 0263 30       		.byte	0x30
 1240 0264 00       		.byte	0
 1241 0265 00       		.byte	0
 1242 0266 0B       		.uleb128 0xb
 1243 0267 C8020000 		.4byte	.LASF37
 1244 026b 01       		.byte	0x1
 1245 026c 2502     		.2byte	0x225
 1246 026e 00000000 		.4byte	.LFB9
 1247 0272 10000000 		.4byte	.LFE9-.LFB9
 1248 0276 01       		.uleb128 0x1
 1249 0277 9C       		.byte	0x9c
 1250 0278 8D020000 		.4byte	0x28d
 1251 027c 0F       		.uleb128 0xf
 1252 027d B8010000 		.4byte	.LASF38
 1253 0281 01       		.byte	0x1
 1254 0282 2502     		.2byte	0x225
 1255 0284 83000000 		.4byte	0x83
 1256 0288 51010000 		.4byte	.LLST7
 1257 028c 00       		.byte	0
 1258 028d 0B       		.uleb128 0xb
 1259 028e 25030000 		.4byte	.LASF39
 1260 0292 01       		.byte	0x1
 1261 0293 5102     		.2byte	0x251
 1262 0295 00000000 		.4byte	.LFB10
 1263 0299 1C000000 		.4byte	.LFE10-.LFB10
 1264 029d 01       		.uleb128 0x1
 1265 029e 9C       		.byte	0x9c
 1266 029f B4020000 		.4byte	0x2b4
 1267 02a3 0F       		.uleb128 0xf
 1268 02a4 77020000 		.4byte	.LASF40
 1269 02a8 01       		.byte	0x1
 1270 02a9 5102     		.2byte	0x251
 1271 02ab 83000000 		.4byte	0x83
 1272 02af 72010000 		.4byte	.LLST8
 1273 02b3 00       		.byte	0
 1274 02b4 0B       		.uleb128 0xb
 1275 02b5 8C020000 		.4byte	.LASF41
 1276 02b9 01       		.byte	0x1
 1277 02ba 6602     		.2byte	0x266
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 39


 1278 02bc 00000000 		.4byte	.LFB11
 1279 02c0 18000000 		.4byte	.LFE11-.LFB11
 1280 02c4 01       		.uleb128 0x1
 1281 02c5 9C       		.byte	0x9c
 1282 02c6 DB020000 		.4byte	0x2db
 1283 02ca 0F       		.uleb128 0xf
 1284 02cb 07030000 		.4byte	.LASF42
 1285 02cf 01       		.byte	0x1
 1286 02d0 6602     		.2byte	0x266
 1287 02d2 83000000 		.4byte	0x83
 1288 02d6 93010000 		.4byte	.LLST9
 1289 02da 00       		.byte	0
 1290 02db 0B       		.uleb128 0xb
 1291 02dc D1010000 		.4byte	.LASF43
 1292 02e0 01       		.byte	0x1
 1293 02e1 7E02     		.2byte	0x27e
 1294 02e3 00000000 		.4byte	.LFB12
 1295 02e7 10000000 		.4byte	.LFE12-.LFB12
 1296 02eb 01       		.uleb128 0x1
 1297 02ec 9C       		.byte	0x9c
 1298 02ed 02030000 		.4byte	0x302
 1299 02f1 0F       		.uleb128 0xf
 1300 02f2 B8010000 		.4byte	.LASF38
 1301 02f6 01       		.byte	0x1
 1302 02f7 7E02     		.2byte	0x27e
 1303 02f9 83000000 		.4byte	0x83
 1304 02fd B4010000 		.4byte	.LLST10
 1305 0301 00       		.byte	0
 1306 0302 0B       		.uleb128 0xb
 1307 0303 08020000 		.4byte	.LASF44
 1308 0307 01       		.byte	0x1
 1309 0308 9502     		.2byte	0x295
 1310 030a 00000000 		.4byte	.LFB13
 1311 030e 10000000 		.4byte	.LFE13-.LFB13
 1312 0312 01       		.uleb128 0x1
 1313 0313 9C       		.byte	0x9c
 1314 0314 29030000 		.4byte	0x329
 1315 0318 0F       		.uleb128 0xf
 1316 0319 B8010000 		.4byte	.LASF38
 1317 031d 01       		.byte	0x1
 1318 031e 9502     		.2byte	0x295
 1319 0320 83000000 		.4byte	0x83
 1320 0324 D5010000 		.4byte	.LLST11
 1321 0328 00       		.byte	0
 1322 0329 0B       		.uleb128 0xb
 1323 032a AD030000 		.4byte	.LASF45
 1324 032e 01       		.byte	0x1
 1325 032f B102     		.2byte	0x2b1
 1326 0331 00000000 		.4byte	.LFB14
 1327 0335 1C000000 		.4byte	.LFE14-.LFB14
 1328 0339 01       		.uleb128 0x1
 1329 033a 9C       		.byte	0x9c
 1330 033b 6F030000 		.4byte	0x36f
 1331 033f 0F       		.uleb128 0xf
 1332 0340 6E030000 		.4byte	.LASF35
 1333 0344 01       		.byte	0x1
 1334 0345 B102     		.2byte	0x2b1
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 40


 1335 0347 83000000 		.4byte	0x83
 1336 034b F6010000 		.4byte	.LLST12
 1337 034f 0F       		.uleb128 0xf
 1338 0350 8B030000 		.4byte	.LASF46
 1339 0354 01       		.byte	0x1
 1340 0355 B102     		.2byte	0x2b1
 1341 0357 8F000000 		.4byte	0x8f
 1342 035b 22020000 		.4byte	.LLST13
 1343 035f 0A       		.uleb128 0xa
 1344 0360 10000000 		.4byte	.LVL40
 1345 0364 6D050000 		.4byte	0x56d
 1346 0368 09       		.uleb128 0x9
 1347 0369 01       		.uleb128 0x1
 1348 036a 50       		.byte	0x50
 1349 036b 01       		.uleb128 0x1
 1350 036c 30       		.byte	0x30
 1351 036d 00       		.byte	0
 1352 036e 00       		.byte	0
 1353 036f 0B       		.uleb128 0xb
 1354 0370 F5020000 		.4byte	.LASF47
 1355 0374 01       		.byte	0x1
 1356 0375 D302     		.2byte	0x2d3
 1357 0377 00000000 		.4byte	.LFB15
 1358 037b 1C000000 		.4byte	.LFE15-.LFB15
 1359 037f 01       		.uleb128 0x1
 1360 0380 9C       		.byte	0x9c
 1361 0381 B5030000 		.4byte	0x3b5
 1362 0385 0F       		.uleb128 0xf
 1363 0386 6E030000 		.4byte	.LASF35
 1364 038a 01       		.byte	0x1
 1365 038b D302     		.2byte	0x2d3
 1366 038d 83000000 		.4byte	0x83
 1367 0391 43020000 		.4byte	.LLST14
 1368 0395 0F       		.uleb128 0xf
 1369 0396 07000000 		.4byte	.LASF48
 1370 039a 01       		.byte	0x1
 1371 039b D302     		.2byte	0x2d3
 1372 039d 9B000000 		.4byte	0x9b
 1373 03a1 6F020000 		.4byte	.LLST15
 1374 03a5 0A       		.uleb128 0xa
 1375 03a6 10000000 		.4byte	.LVL44
 1376 03aa 6D050000 		.4byte	0x56d
 1377 03ae 09       		.uleb128 0x9
 1378 03af 01       		.uleb128 0x1
 1379 03b0 50       		.byte	0x50
 1380 03b1 01       		.uleb128 0x1
 1381 03b2 30       		.byte	0x30
 1382 03b3 00       		.byte	0
 1383 03b4 00       		.byte	0
 1384 03b5 11       		.uleb128 0x11
 1385 03b6 11030000 		.4byte	.LASF49
 1386 03ba 01       		.byte	0x1
 1387 03bb F402     		.2byte	0x2f4
 1388 03bd 8F000000 		.4byte	0x8f
 1389 03c1 00000000 		.4byte	.LFB16
 1390 03c5 5C000000 		.4byte	.LFE16-.LFB16
 1391 03c9 01       		.uleb128 0x1
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 41


 1392 03ca 9C       		.byte	0x9c
 1393 03cb 0D040000 		.4byte	0x40d
 1394 03cf 0F       		.uleb128 0xf
 1395 03d0 6E030000 		.4byte	.LASF35
 1396 03d4 01       		.byte	0x1
 1397 03d5 F402     		.2byte	0x2f4
 1398 03d7 83000000 		.4byte	0x83
 1399 03db 9F020000 		.4byte	.LLST16
 1400 03df 0F       		.uleb128 0xf
 1401 03e0 92030000 		.4byte	.LASF50
 1402 03e4 01       		.byte	0x1
 1403 03e5 F402     		.2byte	0x2f4
 1404 03e7 8F000000 		.4byte	0x8f
 1405 03eb CB020000 		.4byte	.LLST17
 1406 03ef 12       		.uleb128 0x12
 1407 03f0 59020000 		.4byte	.LASF51
 1408 03f4 01       		.byte	0x1
 1409 03f5 F602     		.2byte	0x2f6
 1410 03f7 8F000000 		.4byte	0x8f
 1411 03fb 01       		.uleb128 0x1
 1412 03fc 50       		.byte	0x50
 1413 03fd 0A       		.uleb128 0xa
 1414 03fe 10000000 		.4byte	.LVL49
 1415 0402 6D050000 		.4byte	0x56d
 1416 0406 09       		.uleb128 0x9
 1417 0407 01       		.uleb128 0x1
 1418 0408 50       		.byte	0x50
 1419 0409 01       		.uleb128 0x1
 1420 040a 30       		.byte	0x30
 1421 040b 00       		.byte	0
 1422 040c 00       		.byte	0
 1423 040d 11       		.uleb128 0x11
 1424 040e 72010000 		.4byte	.LASF52
 1425 0412 01       		.byte	0x1
 1426 0413 2A03     		.2byte	0x32a
 1427 0415 9B000000 		.4byte	0x9b
 1428 0419 00000000 		.4byte	.LFB17
 1429 041d 40000000 		.4byte	.LFE17-.LFB17
 1430 0421 01       		.uleb128 0x1
 1431 0422 9C       		.byte	0x9c
 1432 0423 63040000 		.4byte	0x463
 1433 0427 0F       		.uleb128 0xf
 1434 0428 6E030000 		.4byte	.LASF35
 1435 042c 01       		.byte	0x1
 1436 042d 2A03     		.2byte	0x32a
 1437 042f 83000000 		.4byte	0x83
 1438 0433 F7020000 		.4byte	.LLST18
 1439 0437 0F       		.uleb128 0xf
 1440 0438 92030000 		.4byte	.LASF50
 1441 043c 01       		.byte	0x1
 1442 043d 2A03     		.2byte	0x32a
 1443 043f 8F000000 		.4byte	0x8f
 1444 0443 23030000 		.4byte	.LLST19
 1445 0447 13       		.uleb128 0x13
 1446 0448 EF010000 		.4byte	.LASF66
 1447 044c 01       		.byte	0x1
 1448 044d 2C03     		.2byte	0x32c
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 42


 1449 044f C1000000 		.4byte	0xc1
 1450 0453 0A       		.uleb128 0xa
 1451 0454 10000000 		.4byte	.LVL57
 1452 0458 6D050000 		.4byte	0x56d
 1453 045c 09       		.uleb128 0x9
 1454 045d 01       		.uleb128 0x1
 1455 045e 50       		.byte	0x50
 1456 045f 01       		.uleb128 0x1
 1457 0460 30       		.byte	0x30
 1458 0461 00       		.byte	0
 1459 0462 00       		.byte	0
 1460 0463 11       		.uleb128 0x11
 1461 0464 16000000 		.4byte	.LASF53
 1462 0468 01       		.byte	0x1
 1463 0469 5703     		.2byte	0x357
 1464 046b A7000000 		.4byte	0xa7
 1465 046f 00000000 		.4byte	.LFB18
 1466 0473 48000000 		.4byte	.LFE18-.LFB18
 1467 0477 01       		.uleb128 0x1
 1468 0478 9C       		.byte	0x9c
 1469 0479 BB040000 		.4byte	0x4bb
 1470 047d 0F       		.uleb128 0xf
 1471 047e 6E030000 		.4byte	.LASF35
 1472 0482 01       		.byte	0x1
 1473 0483 5703     		.2byte	0x357
 1474 0485 83000000 		.4byte	0x83
 1475 0489 4F030000 		.4byte	.LLST20
 1476 048d 0F       		.uleb128 0xf
 1477 048e 92030000 		.4byte	.LASF50
 1478 0492 01       		.byte	0x1
 1479 0493 5703     		.2byte	0x357
 1480 0495 8F000000 		.4byte	0x8f
 1481 0499 7B030000 		.4byte	.LLST21
 1482 049d 12       		.uleb128 0x12
 1483 049e 17020000 		.4byte	.LASF54
 1484 04a2 01       		.byte	0x1
 1485 04a3 5903     		.2byte	0x359
 1486 04a5 A7000000 		.4byte	0xa7
 1487 04a9 01       		.uleb128 0x1
 1488 04aa 50       		.byte	0x50
 1489 04ab 0A       		.uleb128 0xa
 1490 04ac 10000000 		.4byte	.LVL64
 1491 04b0 6D050000 		.4byte	0x56d
 1492 04b4 09       		.uleb128 0x9
 1493 04b5 01       		.uleb128 0x1
 1494 04b6 50       		.byte	0x50
 1495 04b7 01       		.uleb128 0x1
 1496 04b8 30       		.byte	0x30
 1497 04b9 00       		.byte	0
 1498 04ba 00       		.byte	0
 1499 04bb 14       		.uleb128 0x14
 1500 04bc CB040000 		.4byte	0x4cb
 1501 04c0 CB040000 		.4byte	0x4cb
 1502 04c4 15       		.uleb128 0x15
 1503 04c5 EC000000 		.4byte	0xec
 1504 04c9 00       		.byte	0
 1505 04ca 00       		.byte	0
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 43


 1506 04cb 16       		.uleb128 0x16
 1507 04cc 83000000 		.4byte	0x83
 1508 04d0 17       		.uleb128 0x17
 1509 04d1 78030000 		.4byte	.LASF55
 1510 04d5 01       		.byte	0x1
 1511 04d6 21       		.byte	0x21
 1512 04d7 E0040000 		.4byte	0x4e0
 1513 04db 04       		.byte	0x4
 1514 04dc 00       		.byte	0
 1515 04dd 04       		.byte	0x4
 1516 04de 00       		.byte	0
 1517 04df 00       		.byte	0
 1518 04e0 16       		.uleb128 0x16
 1519 04e1 BB040000 		.4byte	0x4bb
 1520 04e5 18       		.uleb128 0x18
 1521 04e6 BD010000 		.4byte	.LASF56
 1522 04ea 01       		.byte	0x1
 1523 04eb 18       		.byte	0x18
 1524 04ec 6B000000 		.4byte	0x6b
 1525 04f0 05       		.uleb128 0x5
 1526 04f1 03       		.byte	0x3
 1527 04f2 00000000 		.4byte	ADC_initVar
 1528 04f6 14       		.uleb128 0x14
 1529 04f7 06050000 		.4byte	0x506
 1530 04fb 06050000 		.4byte	0x506
 1531 04ff 15       		.uleb128 0x15
 1532 0500 EC000000 		.4byte	0xec
 1533 0504 00       		.byte	0
 1534 0505 00       		.byte	0
 1535 0506 05       		.uleb128 0x5
 1536 0507 8F000000 		.4byte	0x8f
 1537 050b 18       		.uleb128 0x18
 1538 050c 4A030000 		.4byte	.LASF57
 1539 0510 01       		.byte	0x1
 1540 0511 19       		.byte	0x19
 1541 0512 1C050000 		.4byte	0x51c
 1542 0516 05       		.uleb128 0x5
 1543 0517 03       		.byte	0x3
 1544 0518 00000000 		.4byte	ADC_offset
 1545 051c 05       		.uleb128 0x5
 1546 051d F6040000 		.4byte	0x4f6
 1547 0521 14       		.uleb128 0x14
 1548 0522 31050000 		.4byte	0x531
 1549 0526 31050000 		.4byte	0x531
 1550 052a 15       		.uleb128 0x15
 1551 052b EC000000 		.4byte	0xec
 1552 052f 00       		.byte	0
 1553 0530 00       		.byte	0
 1554 0531 05       		.uleb128 0x5
 1555 0532 9B000000 		.4byte	0x9b
 1556 0536 18       		.uleb128 0x18
 1557 0537 86010000 		.4byte	.LASF58
 1558 053b 01       		.byte	0x1
 1559 053c 1A       		.byte	0x1a
 1560 053d 47050000 		.4byte	0x547
 1561 0541 05       		.uleb128 0x5
 1562 0542 03       		.byte	0x3
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 44


 1563 0543 00000000 		.4byte	ADC_countsPer10Volt
 1564 0547 05       		.uleb128 0x5
 1565 0548 21050000 		.4byte	0x521
 1566 054c 19       		.uleb128 0x19
 1567 054d B7020000 		.4byte	.LASF59
 1568 0551 B7020000 		.4byte	.LASF59
 1569 0555 03       		.byte	0x3
 1570 0556 D3       		.byte	0xd3
 1571 0557 19       		.uleb128 0x19
 1572 0558 3A020000 		.4byte	.LASF60
 1573 055c 3A020000 		.4byte	.LASF60
 1574 0560 03       		.byte	0x3
 1575 0561 D0       		.byte	0xd0
 1576 0562 19       		.uleb128 0x19
 1577 0563 A0010000 		.4byte	.LASF61
 1578 0567 A0010000 		.4byte	.LASF61
 1579 056b 03       		.byte	0x3
 1580 056c ED       		.byte	0xed
 1581 056d 19       		.uleb128 0x19
 1582 056e 35030000 		.4byte	.LASF62
 1583 0572 35030000 		.4byte	.LASF62
 1584 0576 03       		.byte	0x3
 1585 0577 FA       		.byte	0xfa
 1586 0578 00       		.byte	0
 1587              		.section	.debug_abbrev,"",%progbits
 1588              	.Ldebug_abbrev0:
 1589 0000 01       		.uleb128 0x1
 1590 0001 11       		.uleb128 0x11
 1591 0002 01       		.byte	0x1
 1592 0003 25       		.uleb128 0x25
 1593 0004 0E       		.uleb128 0xe
 1594 0005 13       		.uleb128 0x13
 1595 0006 0B       		.uleb128 0xb
 1596 0007 03       		.uleb128 0x3
 1597 0008 0E       		.uleb128 0xe
 1598 0009 1B       		.uleb128 0x1b
 1599 000a 0E       		.uleb128 0xe
 1600 000b 55       		.uleb128 0x55
 1601 000c 17       		.uleb128 0x17
 1602 000d 11       		.uleb128 0x11
 1603 000e 01       		.uleb128 0x1
 1604 000f 10       		.uleb128 0x10
 1605 0010 17       		.uleb128 0x17
 1606 0011 00       		.byte	0
 1607 0012 00       		.byte	0
 1608 0013 02       		.uleb128 0x2
 1609 0014 24       		.uleb128 0x24
 1610 0015 00       		.byte	0
 1611 0016 0B       		.uleb128 0xb
 1612 0017 0B       		.uleb128 0xb
 1613 0018 3E       		.uleb128 0x3e
 1614 0019 0B       		.uleb128 0xb
 1615 001a 03       		.uleb128 0x3
 1616 001b 0E       		.uleb128 0xe
 1617 001c 00       		.byte	0
 1618 001d 00       		.byte	0
 1619 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 45


 1620 001f 24       		.uleb128 0x24
 1621 0020 00       		.byte	0
 1622 0021 0B       		.uleb128 0xb
 1623 0022 0B       		.uleb128 0xb
 1624 0023 3E       		.uleb128 0x3e
 1625 0024 0B       		.uleb128 0xb
 1626 0025 03       		.uleb128 0x3
 1627 0026 08       		.uleb128 0x8
 1628 0027 00       		.byte	0
 1629 0028 00       		.byte	0
 1630 0029 04       		.uleb128 0x4
 1631 002a 16       		.uleb128 0x16
 1632 002b 00       		.byte	0
 1633 002c 03       		.uleb128 0x3
 1634 002d 0E       		.uleb128 0xe
 1635 002e 3A       		.uleb128 0x3a
 1636 002f 0B       		.uleb128 0xb
 1637 0030 3B       		.uleb128 0x3b
 1638 0031 05       		.uleb128 0x5
 1639 0032 49       		.uleb128 0x49
 1640 0033 13       		.uleb128 0x13
 1641 0034 00       		.byte	0
 1642 0035 00       		.byte	0
 1643 0036 05       		.uleb128 0x5
 1644 0037 35       		.uleb128 0x35
 1645 0038 00       		.byte	0
 1646 0039 49       		.uleb128 0x49
 1647 003a 13       		.uleb128 0x13
 1648 003b 00       		.byte	0
 1649 003c 00       		.byte	0
 1650 003d 06       		.uleb128 0x6
 1651 003e 2E       		.uleb128 0x2e
 1652 003f 01       		.byte	0x1
 1653 0040 3F       		.uleb128 0x3f
 1654 0041 19       		.uleb128 0x19
 1655 0042 03       		.uleb128 0x3
 1656 0043 0E       		.uleb128 0xe
 1657 0044 3A       		.uleb128 0x3a
 1658 0045 0B       		.uleb128 0xb
 1659 0046 3B       		.uleb128 0x3b
 1660 0047 0B       		.uleb128 0xb
 1661 0048 27       		.uleb128 0x27
 1662 0049 19       		.uleb128 0x19
 1663 004a 11       		.uleb128 0x11
 1664 004b 01       		.uleb128 0x1
 1665 004c 12       		.uleb128 0x12
 1666 004d 06       		.uleb128 0x6
 1667 004e 40       		.uleb128 0x40
 1668 004f 18       		.uleb128 0x18
 1669 0050 9742     		.uleb128 0x2117
 1670 0052 19       		.uleb128 0x19
 1671 0053 01       		.uleb128 0x1
 1672 0054 13       		.uleb128 0x13
 1673 0055 00       		.byte	0
 1674 0056 00       		.byte	0
 1675 0057 07       		.uleb128 0x7
 1676 0058 34       		.uleb128 0x34
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 46


 1677 0059 00       		.byte	0
 1678 005a 03       		.uleb128 0x3
 1679 005b 0E       		.uleb128 0xe
 1680 005c 3A       		.uleb128 0x3a
 1681 005d 0B       		.uleb128 0xb
 1682 005e 3B       		.uleb128 0x3b
 1683 005f 0B       		.uleb128 0xb
 1684 0060 49       		.uleb128 0x49
 1685 0061 13       		.uleb128 0x13
 1686 0062 02       		.uleb128 0x2
 1687 0063 17       		.uleb128 0x17
 1688 0064 00       		.byte	0
 1689 0065 00       		.byte	0
 1690 0066 08       		.uleb128 0x8
 1691 0067 898201   		.uleb128 0x4109
 1692 006a 01       		.byte	0x1
 1693 006b 11       		.uleb128 0x11
 1694 006c 01       		.uleb128 0x1
 1695 006d 31       		.uleb128 0x31
 1696 006e 13       		.uleb128 0x13
 1697 006f 01       		.uleb128 0x1
 1698 0070 13       		.uleb128 0x13
 1699 0071 00       		.byte	0
 1700 0072 00       		.byte	0
 1701 0073 09       		.uleb128 0x9
 1702 0074 8A8201   		.uleb128 0x410a
 1703 0077 00       		.byte	0
 1704 0078 02       		.uleb128 0x2
 1705 0079 18       		.uleb128 0x18
 1706 007a 9142     		.uleb128 0x2111
 1707 007c 18       		.uleb128 0x18
 1708 007d 00       		.byte	0
 1709 007e 00       		.byte	0
 1710 007f 0A       		.uleb128 0xa
 1711 0080 898201   		.uleb128 0x4109
 1712 0083 01       		.byte	0x1
 1713 0084 11       		.uleb128 0x11
 1714 0085 01       		.uleb128 0x1
 1715 0086 31       		.uleb128 0x31
 1716 0087 13       		.uleb128 0x13
 1717 0088 00       		.byte	0
 1718 0089 00       		.byte	0
 1719 008a 0B       		.uleb128 0xb
 1720 008b 2E       		.uleb128 0x2e
 1721 008c 01       		.byte	0x1
 1722 008d 3F       		.uleb128 0x3f
 1723 008e 19       		.uleb128 0x19
 1724 008f 03       		.uleb128 0x3
 1725 0090 0E       		.uleb128 0xe
 1726 0091 3A       		.uleb128 0x3a
 1727 0092 0B       		.uleb128 0xb
 1728 0093 3B       		.uleb128 0x3b
 1729 0094 05       		.uleb128 0x5
 1730 0095 27       		.uleb128 0x27
 1731 0096 19       		.uleb128 0x19
 1732 0097 11       		.uleb128 0x11
 1733 0098 01       		.uleb128 0x1
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 47


 1734 0099 12       		.uleb128 0x12
 1735 009a 06       		.uleb128 0x6
 1736 009b 40       		.uleb128 0x40
 1737 009c 18       		.uleb128 0x18
 1738 009d 9742     		.uleb128 0x2117
 1739 009f 19       		.uleb128 0x19
 1740 00a0 01       		.uleb128 0x1
 1741 00a1 13       		.uleb128 0x13
 1742 00a2 00       		.byte	0
 1743 00a3 00       		.byte	0
 1744 00a4 0C       		.uleb128 0xc
 1745 00a5 898201   		.uleb128 0x4109
 1746 00a8 00       		.byte	0
 1747 00a9 11       		.uleb128 0x11
 1748 00aa 01       		.uleb128 0x1
 1749 00ab 31       		.uleb128 0x31
 1750 00ac 13       		.uleb128 0x13
 1751 00ad 00       		.byte	0
 1752 00ae 00       		.byte	0
 1753 00af 0D       		.uleb128 0xd
 1754 00b0 2E       		.uleb128 0x2e
 1755 00b1 00       		.byte	0
 1756 00b2 3F       		.uleb128 0x3f
 1757 00b3 19       		.uleb128 0x19
 1758 00b4 03       		.uleb128 0x3
 1759 00b5 0E       		.uleb128 0xe
 1760 00b6 3A       		.uleb128 0x3a
 1761 00b7 0B       		.uleb128 0xb
 1762 00b8 3B       		.uleb128 0x3b
 1763 00b9 05       		.uleb128 0x5
 1764 00ba 27       		.uleb128 0x27
 1765 00bb 19       		.uleb128 0x19
 1766 00bc 11       		.uleb128 0x11
 1767 00bd 01       		.uleb128 0x1
 1768 00be 12       		.uleb128 0x12
 1769 00bf 06       		.uleb128 0x6
 1770 00c0 40       		.uleb128 0x40
 1771 00c1 18       		.uleb128 0x18
 1772 00c2 9742     		.uleb128 0x2117
 1773 00c4 19       		.uleb128 0x19
 1774 00c5 00       		.byte	0
 1775 00c6 00       		.byte	0
 1776 00c7 0E       		.uleb128 0xe
 1777 00c8 2E       		.uleb128 0x2e
 1778 00c9 01       		.byte	0x1
 1779 00ca 3F       		.uleb128 0x3f
 1780 00cb 19       		.uleb128 0x19
 1781 00cc 03       		.uleb128 0x3
 1782 00cd 0E       		.uleb128 0xe
 1783 00ce 3A       		.uleb128 0x3a
 1784 00cf 0B       		.uleb128 0xb
 1785 00d0 3B       		.uleb128 0x3b
 1786 00d1 05       		.uleb128 0x5
 1787 00d2 27       		.uleb128 0x27
 1788 00d3 19       		.uleb128 0x19
 1789 00d4 49       		.uleb128 0x49
 1790 00d5 13       		.uleb128 0x13
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 48


 1791 00d6 11       		.uleb128 0x11
 1792 00d7 01       		.uleb128 0x1
 1793 00d8 12       		.uleb128 0x12
 1794 00d9 06       		.uleb128 0x6
 1795 00da 40       		.uleb128 0x40
 1796 00db 18       		.uleb128 0x18
 1797 00dc 9742     		.uleb128 0x2117
 1798 00de 19       		.uleb128 0x19
 1799 00df 01       		.uleb128 0x1
 1800 00e0 13       		.uleb128 0x13
 1801 00e1 00       		.byte	0
 1802 00e2 00       		.byte	0
 1803 00e3 0F       		.uleb128 0xf
 1804 00e4 05       		.uleb128 0x5
 1805 00e5 00       		.byte	0
 1806 00e6 03       		.uleb128 0x3
 1807 00e7 0E       		.uleb128 0xe
 1808 00e8 3A       		.uleb128 0x3a
 1809 00e9 0B       		.uleb128 0xb
 1810 00ea 3B       		.uleb128 0x3b
 1811 00eb 05       		.uleb128 0x5
 1812 00ec 49       		.uleb128 0x49
 1813 00ed 13       		.uleb128 0x13
 1814 00ee 02       		.uleb128 0x2
 1815 00ef 17       		.uleb128 0x17
 1816 00f0 00       		.byte	0
 1817 00f1 00       		.byte	0
 1818 00f2 10       		.uleb128 0x10
 1819 00f3 34       		.uleb128 0x34
 1820 00f4 00       		.byte	0
 1821 00f5 03       		.uleb128 0x3
 1822 00f6 0E       		.uleb128 0xe
 1823 00f7 3A       		.uleb128 0x3a
 1824 00f8 0B       		.uleb128 0xb
 1825 00f9 3B       		.uleb128 0x3b
 1826 00fa 05       		.uleb128 0x5
 1827 00fb 49       		.uleb128 0x49
 1828 00fc 13       		.uleb128 0x13
 1829 00fd 02       		.uleb128 0x2
 1830 00fe 17       		.uleb128 0x17
 1831 00ff 00       		.byte	0
 1832 0100 00       		.byte	0
 1833 0101 11       		.uleb128 0x11
 1834 0102 2E       		.uleb128 0x2e
 1835 0103 01       		.byte	0x1
 1836 0104 3F       		.uleb128 0x3f
 1837 0105 19       		.uleb128 0x19
 1838 0106 03       		.uleb128 0x3
 1839 0107 0E       		.uleb128 0xe
 1840 0108 3A       		.uleb128 0x3a
 1841 0109 0B       		.uleb128 0xb
 1842 010a 3B       		.uleb128 0x3b
 1843 010b 05       		.uleb128 0x5
 1844 010c 27       		.uleb128 0x27
 1845 010d 19       		.uleb128 0x19
 1846 010e 49       		.uleb128 0x49
 1847 010f 13       		.uleb128 0x13
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 49


 1848 0110 11       		.uleb128 0x11
 1849 0111 01       		.uleb128 0x1
 1850 0112 12       		.uleb128 0x12
 1851 0113 06       		.uleb128 0x6
 1852 0114 40       		.uleb128 0x40
 1853 0115 18       		.uleb128 0x18
 1854 0116 9642     		.uleb128 0x2116
 1855 0118 19       		.uleb128 0x19
 1856 0119 01       		.uleb128 0x1
 1857 011a 13       		.uleb128 0x13
 1858 011b 00       		.byte	0
 1859 011c 00       		.byte	0
 1860 011d 12       		.uleb128 0x12
 1861 011e 34       		.uleb128 0x34
 1862 011f 00       		.byte	0
 1863 0120 03       		.uleb128 0x3
 1864 0121 0E       		.uleb128 0xe
 1865 0122 3A       		.uleb128 0x3a
 1866 0123 0B       		.uleb128 0xb
 1867 0124 3B       		.uleb128 0x3b
 1868 0125 05       		.uleb128 0x5
 1869 0126 49       		.uleb128 0x49
 1870 0127 13       		.uleb128 0x13
 1871 0128 02       		.uleb128 0x2
 1872 0129 18       		.uleb128 0x18
 1873 012a 00       		.byte	0
 1874 012b 00       		.byte	0
 1875 012c 13       		.uleb128 0x13
 1876 012d 34       		.uleb128 0x34
 1877 012e 00       		.byte	0
 1878 012f 03       		.uleb128 0x3
 1879 0130 0E       		.uleb128 0xe
 1880 0131 3A       		.uleb128 0x3a
 1881 0132 0B       		.uleb128 0xb
 1882 0133 3B       		.uleb128 0x3b
 1883 0134 05       		.uleb128 0x5
 1884 0135 49       		.uleb128 0x49
 1885 0136 13       		.uleb128 0x13
 1886 0137 00       		.byte	0
 1887 0138 00       		.byte	0
 1888 0139 14       		.uleb128 0x14
 1889 013a 01       		.uleb128 0x1
 1890 013b 01       		.byte	0x1
 1891 013c 49       		.uleb128 0x49
 1892 013d 13       		.uleb128 0x13
 1893 013e 01       		.uleb128 0x1
 1894 013f 13       		.uleb128 0x13
 1895 0140 00       		.byte	0
 1896 0141 00       		.byte	0
 1897 0142 15       		.uleb128 0x15
 1898 0143 21       		.uleb128 0x21
 1899 0144 00       		.byte	0
 1900 0145 49       		.uleb128 0x49
 1901 0146 13       		.uleb128 0x13
 1902 0147 2F       		.uleb128 0x2f
 1903 0148 0B       		.uleb128 0xb
 1904 0149 00       		.byte	0
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 50


 1905 014a 00       		.byte	0
 1906 014b 16       		.uleb128 0x16
 1907 014c 26       		.uleb128 0x26
 1908 014d 00       		.byte	0
 1909 014e 49       		.uleb128 0x49
 1910 014f 13       		.uleb128 0x13
 1911 0150 00       		.byte	0
 1912 0151 00       		.byte	0
 1913 0152 17       		.uleb128 0x17
 1914 0153 34       		.uleb128 0x34
 1915 0154 00       		.byte	0
 1916 0155 03       		.uleb128 0x3
 1917 0156 0E       		.uleb128 0xe
 1918 0157 3A       		.uleb128 0x3a
 1919 0158 0B       		.uleb128 0xb
 1920 0159 3B       		.uleb128 0x3b
 1921 015a 0B       		.uleb128 0xb
 1922 015b 49       		.uleb128 0x49
 1923 015c 13       		.uleb128 0x13
 1924 015d 1C       		.uleb128 0x1c
 1925 015e 0A       		.uleb128 0xa
 1926 015f 00       		.byte	0
 1927 0160 00       		.byte	0
 1928 0161 18       		.uleb128 0x18
 1929 0162 34       		.uleb128 0x34
 1930 0163 00       		.byte	0
 1931 0164 03       		.uleb128 0x3
 1932 0165 0E       		.uleb128 0xe
 1933 0166 3A       		.uleb128 0x3a
 1934 0167 0B       		.uleb128 0xb
 1935 0168 3B       		.uleb128 0x3b
 1936 0169 0B       		.uleb128 0xb
 1937 016a 49       		.uleb128 0x49
 1938 016b 13       		.uleb128 0x13
 1939 016c 3F       		.uleb128 0x3f
 1940 016d 19       		.uleb128 0x19
 1941 016e 02       		.uleb128 0x2
 1942 016f 18       		.uleb128 0x18
 1943 0170 00       		.byte	0
 1944 0171 00       		.byte	0
 1945 0172 19       		.uleb128 0x19
 1946 0173 2E       		.uleb128 0x2e
 1947 0174 00       		.byte	0
 1948 0175 3F       		.uleb128 0x3f
 1949 0176 19       		.uleb128 0x19
 1950 0177 3C       		.uleb128 0x3c
 1951 0178 19       		.uleb128 0x19
 1952 0179 6E       		.uleb128 0x6e
 1953 017a 0E       		.uleb128 0xe
 1954 017b 03       		.uleb128 0x3
 1955 017c 0E       		.uleb128 0xe
 1956 017d 3A       		.uleb128 0x3a
 1957 017e 0B       		.uleb128 0xb
 1958 017f 3B       		.uleb128 0x3b
 1959 0180 0B       		.uleb128 0xb
 1960 0181 00       		.byte	0
 1961 0182 00       		.byte	0
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 51


 1962 0183 00       		.byte	0
 1963              		.section	.debug_loc,"",%progbits
 1964              	.Ldebug_loc0:
 1965              	.LLST0:
 1966 0000 68000000 		.4byte	.LVL5
 1967 0004 6C000000 		.4byte	.LVL7
 1968 0008 0200     		.2byte	0x2
 1969 000a 30       		.byte	0x30
 1970 000b 9F       		.byte	0x9f
 1971 000c 6C000000 		.4byte	.LVL7
 1972 0010 EC000000 		.4byte	.LFE2
 1973 0014 0100     		.2byte	0x1
 1974 0016 53       		.byte	0x53
 1975 0017 00000000 		.4byte	0
 1976 001b 00000000 		.4byte	0
 1977              	.LLST1:
 1978 001f 5C000000 		.4byte	.LVL2
 1979 0023 62000000 		.4byte	.LVL3
 1980 0027 0700     		.2byte	0x7
 1981 0029 71       		.byte	0x71
 1982 002a 00       		.sleb128 0
 1983 002b 40       		.byte	0x40
 1984 002c 49       		.byte	0x49
 1985 002d 24       		.byte	0x24
 1986 002e 21       		.byte	0x21
 1987 002f 9F       		.byte	0x9f
 1988 0030 66000000 		.4byte	.LVL4
 1989 0034 6A000000 		.4byte	.LVL6
 1990 0038 0100     		.2byte	0x1
 1991 003a 53       		.byte	0x53
 1992 003b 6A000000 		.4byte	.LVL6
 1993 003f 6C000000 		.4byte	.LVL7
 1994 0043 0200     		.2byte	0x2
 1995 0045 72       		.byte	0x72
 1996 0046 00       		.sleb128 0
 1997 0047 6C000000 		.4byte	.LVL7
 1998 004b 88000000 		.4byte	.LVL9
 1999 004f 0400     		.2byte	0x4
 2000 0051 0A       		.byte	0xa
 2001 0052 0004     		.2byte	0x400
 2002 0054 9F       		.byte	0x9f
 2003 0055 00000000 		.4byte	0
 2004 0059 00000000 		.4byte	0
 2005              	.LLST2:
 2006 005d 78000000 		.4byte	.LVL8
 2007 0061 88000000 		.4byte	.LVL9
 2008 0065 0400     		.2byte	0x4
 2009 0067 0A       		.byte	0xa
 2010 0068 0010     		.2byte	0x1000
 2011 006a 9F       		.byte	0x9f
 2012 006b 00000000 		.4byte	0
 2013 006f 00000000 		.4byte	0
 2014              	.LLST3:
 2015 0073 00000000 		.4byte	.LVL13
 2016 0077 06000000 		.4byte	.LVL15
 2017 007b 0100     		.2byte	0x1
 2018 007d 50       		.byte	0x50
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 52


 2019 007e 06000000 		.4byte	.LVL15
 2020 0082 1A000000 		.4byte	.LVL17
 2021 0086 0100     		.2byte	0x1
 2022 0088 52       		.byte	0x52
 2023 0089 1A000000 		.4byte	.LVL17
 2024 008d 20000000 		.4byte	.LVL18
 2025 0091 0400     		.2byte	0x4
 2026 0093 F3       		.byte	0xf3
 2027 0094 01       		.uleb128 0x1
 2028 0095 50       		.byte	0x50
 2029 0096 9F       		.byte	0x9f
 2030 0097 20000000 		.4byte	.LVL18
 2031 009b 22000000 		.4byte	.LVL19
 2032 009f 0100     		.2byte	0x1
 2033 00a1 50       		.byte	0x50
 2034 00a2 22000000 		.4byte	.LVL19
 2035 00a6 28000000 		.4byte	.LFE7
 2036 00aa 0400     		.2byte	0x4
 2037 00ac F3       		.byte	0xf3
 2038 00ad 01       		.uleb128 0x1
 2039 00ae 50       		.byte	0x50
 2040 00af 9F       		.byte	0x9f
 2041 00b0 00000000 		.4byte	0
 2042 00b4 00000000 		.4byte	0
 2043              	.LLST4:
 2044 00b8 02000000 		.4byte	.LVL14
 2045 00bc 06000000 		.4byte	.LVL15
 2046 00c0 0200     		.2byte	0x2
 2047 00c2 30       		.byte	0x30
 2048 00c3 9F       		.byte	0x9f
 2049 00c4 0E000000 		.4byte	.LVL16
 2050 00c8 20000000 		.4byte	.LVL18
 2051 00cc 0100     		.2byte	0x1
 2052 00ce 50       		.byte	0x50
 2053 00cf 20000000 		.4byte	.LVL18
 2054 00d3 22000000 		.4byte	.LVL19
 2055 00d7 0200     		.2byte	0x2
 2056 00d9 30       		.byte	0x30
 2057 00da 9F       		.byte	0x9f
 2058 00db 22000000 		.4byte	.LVL19
 2059 00df 28000000 		.4byte	.LFE7
 2060 00e3 0100     		.2byte	0x1
 2061 00e5 50       		.byte	0x50
 2062 00e6 00000000 		.4byte	0
 2063 00ea 00000000 		.4byte	0
 2064              	.LLST5:
 2065 00ee 00000000 		.4byte	.LVL20
 2066 00f2 08000000 		.4byte	.LVL21
 2067 00f6 0100     		.2byte	0x1
 2068 00f8 50       		.byte	0x50
 2069 00f9 08000000 		.4byte	.LVL21
 2070 00fd 12000000 		.4byte	.LVL23
 2071 0101 0100     		.2byte	0x1
 2072 0103 54       		.byte	0x54
 2073 0104 12000000 		.4byte	.LVL23
 2074 0108 20000000 		.4byte	.LVL25
 2075 010c 0400     		.2byte	0x4
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 53


 2076 010e F3       		.byte	0xf3
 2077 010f 01       		.uleb128 0x1
 2078 0110 50       		.byte	0x50
 2079 0111 9F       		.byte	0x9f
 2080 0112 20000000 		.4byte	.LVL25
 2081 0116 22000000 		.4byte	.LVL26
 2082 011a 0100     		.2byte	0x1
 2083 011c 54       		.byte	0x54
 2084 011d 22000000 		.4byte	.LVL26
 2085 0121 2C000000 		.4byte	.LFE8
 2086 0125 0400     		.2byte	0x4
 2087 0127 F3       		.byte	0xf3
 2088 0128 01       		.uleb128 0x1
 2089 0129 50       		.byte	0x50
 2090 012a 9F       		.byte	0x9f
 2091 012b 00000000 		.4byte	0
 2092 012f 00000000 		.4byte	0
 2093              	.LLST6:
 2094 0133 1E000000 		.4byte	.LVL24
 2095 0137 20000000 		.4byte	.LVL25
 2096 013b 0100     		.2byte	0x1
 2097 013d 50       		.byte	0x50
 2098 013e 22000000 		.4byte	.LVL26
 2099 0142 24000000 		.4byte	.LVL27
 2100 0146 0100     		.2byte	0x1
 2101 0148 50       		.byte	0x50
 2102 0149 00000000 		.4byte	0
 2103 014d 00000000 		.4byte	0
 2104              	.LLST7:
 2105 0151 00000000 		.4byte	.LVL28
 2106 0155 04000000 		.4byte	.LVL29
 2107 0159 0100     		.2byte	0x1
 2108 015b 50       		.byte	0x50
 2109 015c 04000000 		.4byte	.LVL29
 2110 0160 10000000 		.4byte	.LFE9
 2111 0164 0400     		.2byte	0x4
 2112 0166 F3       		.byte	0xf3
 2113 0167 01       		.uleb128 0x1
 2114 0168 50       		.byte	0x50
 2115 0169 9F       		.byte	0x9f
 2116 016a 00000000 		.4byte	0
 2117 016e 00000000 		.4byte	0
 2118              	.LLST8:
 2119 0172 00000000 		.4byte	.LVL30
 2120 0176 0E000000 		.4byte	.LVL31
 2121 017a 0100     		.2byte	0x1
 2122 017c 50       		.byte	0x50
 2123 017d 0E000000 		.4byte	.LVL31
 2124 0181 1C000000 		.4byte	.LFE10
 2125 0185 0400     		.2byte	0x4
 2126 0187 F3       		.byte	0xf3
 2127 0188 01       		.uleb128 0x1
 2128 0189 50       		.byte	0x50
 2129 018a 9F       		.byte	0x9f
 2130 018b 00000000 		.4byte	0
 2131 018f 00000000 		.4byte	0
 2132              	.LLST9:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 54


 2133 0193 00000000 		.4byte	.LVL32
 2134 0197 0E000000 		.4byte	.LVL33
 2135 019b 0100     		.2byte	0x1
 2136 019d 50       		.byte	0x50
 2137 019e 0E000000 		.4byte	.LVL33
 2138 01a2 18000000 		.4byte	.LFE11
 2139 01a6 0400     		.2byte	0x4
 2140 01a8 F3       		.byte	0xf3
 2141 01a9 01       		.uleb128 0x1
 2142 01aa 50       		.byte	0x50
 2143 01ab 9F       		.byte	0x9f
 2144 01ac 00000000 		.4byte	0
 2145 01b0 00000000 		.4byte	0
 2146              	.LLST10:
 2147 01b4 00000000 		.4byte	.LVL34
 2148 01b8 04000000 		.4byte	.LVL35
 2149 01bc 0100     		.2byte	0x1
 2150 01be 50       		.byte	0x50
 2151 01bf 04000000 		.4byte	.LVL35
 2152 01c3 10000000 		.4byte	.LFE12
 2153 01c7 0400     		.2byte	0x4
 2154 01c9 F3       		.byte	0xf3
 2155 01ca 01       		.uleb128 0x1
 2156 01cb 50       		.byte	0x50
 2157 01cc 9F       		.byte	0x9f
 2158 01cd 00000000 		.4byte	0
 2159 01d1 00000000 		.4byte	0
 2160              	.LLST11:
 2161 01d5 00000000 		.4byte	.LVL36
 2162 01d9 04000000 		.4byte	.LVL37
 2163 01dd 0100     		.2byte	0x1
 2164 01df 50       		.byte	0x50
 2165 01e0 04000000 		.4byte	.LVL37
 2166 01e4 10000000 		.4byte	.LFE13
 2167 01e8 0400     		.2byte	0x4
 2168 01ea F3       		.byte	0xf3
 2169 01eb 01       		.uleb128 0x1
 2170 01ec 50       		.byte	0x50
 2171 01ed 9F       		.byte	0x9f
 2172 01ee 00000000 		.4byte	0
 2173 01f2 00000000 		.4byte	0
 2174              	.LLST12:
 2175 01f6 00000000 		.4byte	.LVL38
 2176 01fa 0C000000 		.4byte	.LVL39
 2177 01fe 0100     		.2byte	0x1
 2178 0200 50       		.byte	0x50
 2179 0201 0C000000 		.4byte	.LVL39
 2180 0205 12000000 		.4byte	.LVL41
 2181 0209 0100     		.2byte	0x1
 2182 020b 54       		.byte	0x54
 2183 020c 12000000 		.4byte	.LVL41
 2184 0210 1C000000 		.4byte	.LFE14
 2185 0214 0400     		.2byte	0x4
 2186 0216 F3       		.byte	0xf3
 2187 0217 01       		.uleb128 0x1
 2188 0218 50       		.byte	0x50
 2189 0219 9F       		.byte	0x9f
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 55


 2190 021a 00000000 		.4byte	0
 2191 021e 00000000 		.4byte	0
 2192              	.LLST13:
 2193 0222 00000000 		.4byte	.LVL38
 2194 0226 0F000000 		.4byte	.LVL40-1
 2195 022a 0100     		.2byte	0x1
 2196 022c 51       		.byte	0x51
 2197 022d 0F000000 		.4byte	.LVL40-1
 2198 0231 1C000000 		.4byte	.LFE14
 2199 0235 0400     		.2byte	0x4
 2200 0237 F3       		.byte	0xf3
 2201 0238 01       		.uleb128 0x1
 2202 0239 51       		.byte	0x51
 2203 023a 9F       		.byte	0x9f
 2204 023b 00000000 		.4byte	0
 2205 023f 00000000 		.4byte	0
 2206              	.LLST14:
 2207 0243 00000000 		.4byte	.LVL42
 2208 0247 0C000000 		.4byte	.LVL43
 2209 024b 0100     		.2byte	0x1
 2210 024d 50       		.byte	0x50
 2211 024e 0C000000 		.4byte	.LVL43
 2212 0252 12000000 		.4byte	.LVL45
 2213 0256 0100     		.2byte	0x1
 2214 0258 54       		.byte	0x54
 2215 0259 12000000 		.4byte	.LVL45
 2216 025d 1C000000 		.4byte	.LFE15
 2217 0261 0400     		.2byte	0x4
 2218 0263 F3       		.byte	0xf3
 2219 0264 01       		.uleb128 0x1
 2220 0265 50       		.byte	0x50
 2221 0266 9F       		.byte	0x9f
 2222 0267 00000000 		.4byte	0
 2223 026b 00000000 		.4byte	0
 2224              	.LLST15:
 2225 026f 00000000 		.4byte	.LVL42
 2226 0273 0F000000 		.4byte	.LVL44-1
 2227 0277 0100     		.2byte	0x1
 2228 0279 51       		.byte	0x51
 2229 027a 0F000000 		.4byte	.LVL44-1
 2230 027e 16000000 		.4byte	.LVL46
 2231 0282 0100     		.2byte	0x1
 2232 0284 55       		.byte	0x55
 2233 0285 16000000 		.4byte	.LVL46
 2234 0289 1C000000 		.4byte	.LFE15
 2235 028d 0800     		.2byte	0x8
 2236 028f F3       		.byte	0xf3
 2237 0290 01       		.uleb128 0x1
 2238 0291 50       		.byte	0x50
 2239 0292 32       		.byte	0x32
 2240 0293 24       		.byte	0x24
 2241 0294 73       		.byte	0x73
 2242 0295 00       		.sleb128 0
 2243 0296 22       		.byte	0x22
 2244 0297 00000000 		.4byte	0
 2245 029b 00000000 		.4byte	0
 2246              	.LLST16:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 56


 2247 029f 00000000 		.4byte	.LVL47
 2248 02a3 0C000000 		.4byte	.LVL48
 2249 02a7 0100     		.2byte	0x1
 2250 02a9 50       		.byte	0x50
 2251 02aa 0C000000 		.4byte	.LVL48
 2252 02ae 44000000 		.4byte	.LVL51
 2253 02b2 0100     		.2byte	0x1
 2254 02b4 54       		.byte	0x54
 2255 02b5 44000000 		.4byte	.LVL51
 2256 02b9 5C000000 		.4byte	.LFE16
 2257 02bd 0400     		.2byte	0x4
 2258 02bf F3       		.byte	0xf3
 2259 02c0 01       		.uleb128 0x1
 2260 02c1 50       		.byte	0x50
 2261 02c2 9F       		.byte	0x9f
 2262 02c3 00000000 		.4byte	0
 2263 02c7 00000000 		.4byte	0
 2264              	.LLST17:
 2265 02cb 00000000 		.4byte	.LVL47
 2266 02cf 0F000000 		.4byte	.LVL49-1
 2267 02d3 0100     		.2byte	0x1
 2268 02d5 51       		.byte	0x51
 2269 02d6 0F000000 		.4byte	.LVL49-1
 2270 02da 1C000000 		.4byte	.LVL50
 2271 02de 0400     		.2byte	0x4
 2272 02e0 F3       		.byte	0xf3
 2273 02e1 01       		.uleb128 0x1
 2274 02e2 51       		.byte	0x51
 2275 02e3 9F       		.byte	0x9f
 2276 02e4 1C000000 		.4byte	.LVL50
 2277 02e8 48000000 		.4byte	.LVL52
 2278 02ec 0100     		.2byte	0x1
 2279 02ee 51       		.byte	0x51
 2280 02ef 00000000 		.4byte	0
 2281 02f3 00000000 		.4byte	0
 2282              	.LLST18:
 2283 02f7 00000000 		.4byte	.LVL55
 2284 02fb 0C000000 		.4byte	.LVL56
 2285 02ff 0100     		.2byte	0x1
 2286 0301 50       		.byte	0x50
 2287 0302 0C000000 		.4byte	.LVL56
 2288 0306 28000000 		.4byte	.LVL60
 2289 030a 0100     		.2byte	0x1
 2290 030c 55       		.byte	0x55
 2291 030d 28000000 		.4byte	.LVL60
 2292 0311 40000000 		.4byte	.LFE17
 2293 0315 0400     		.2byte	0x4
 2294 0317 F3       		.byte	0xf3
 2295 0318 01       		.uleb128 0x1
 2296 0319 50       		.byte	0x50
 2297 031a 9F       		.byte	0x9f
 2298 031b 00000000 		.4byte	0
 2299 031f 00000000 		.4byte	0
 2300              	.LLST19:
 2301 0323 00000000 		.4byte	.LVL55
 2302 0327 0F000000 		.4byte	.LVL57-1
 2303 032b 0100     		.2byte	0x1
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 57


 2304 032d 51       		.byte	0x51
 2305 032e 0F000000 		.4byte	.LVL57-1
 2306 0332 1C000000 		.4byte	.LVL58
 2307 0336 0400     		.2byte	0x4
 2308 0338 F3       		.byte	0xf3
 2309 0339 01       		.uleb128 0x1
 2310 033a 51       		.byte	0x51
 2311 033b 9F       		.byte	0x9f
 2312 033c 1C000000 		.4byte	.LVL58
 2313 0340 25000000 		.4byte	.LVL59-1
 2314 0344 0100     		.2byte	0x1
 2315 0346 50       		.byte	0x50
 2316 0347 00000000 		.4byte	0
 2317 034b 00000000 		.4byte	0
 2318              	.LLST20:
 2319 034f 00000000 		.4byte	.LVL62
 2320 0353 0C000000 		.4byte	.LVL63
 2321 0357 0100     		.2byte	0x1
 2322 0359 50       		.byte	0x50
 2323 035a 0C000000 		.4byte	.LVL63
 2324 035e 2A000000 		.4byte	.LVL68
 2325 0362 0100     		.2byte	0x1
 2326 0364 54       		.byte	0x54
 2327 0365 2A000000 		.4byte	.LVL68
 2328 0369 48000000 		.4byte	.LFE18
 2329 036d 0400     		.2byte	0x4
 2330 036f F3       		.byte	0xf3
 2331 0370 01       		.uleb128 0x1
 2332 0371 50       		.byte	0x50
 2333 0372 9F       		.byte	0x9f
 2334 0373 00000000 		.4byte	0
 2335 0377 00000000 		.4byte	0
 2336              	.LLST21:
 2337 037b 00000000 		.4byte	.LVL62
 2338 037f 0F000000 		.4byte	.LVL64-1
 2339 0383 0100     		.2byte	0x1
 2340 0385 51       		.byte	0x51
 2341 0386 0F000000 		.4byte	.LVL64-1
 2342 038a 1C000000 		.4byte	.LVL65
 2343 038e 0400     		.2byte	0x4
 2344 0390 F3       		.byte	0xf3
 2345 0391 01       		.uleb128 0x1
 2346 0392 51       		.byte	0x51
 2347 0393 9F       		.byte	0x9f
 2348 0394 1C000000 		.4byte	.LVL65
 2349 0398 1F000000 		.4byte	.LVL66-1
 2350 039c 0100     		.2byte	0x1
 2351 039e 50       		.byte	0x50
 2352 039f 00000000 		.4byte	0
 2353 03a3 00000000 		.4byte	0
 2354              		.section	.debug_aranges,"",%progbits
 2355 0000 A4000000 		.4byte	0xa4
 2356 0004 0200     		.2byte	0x2
 2357 0006 00000000 		.4byte	.Ldebug_info0
 2358 000a 04       		.byte	0x4
 2359 000b 00       		.byte	0
 2360 000c 0000     		.2byte	0
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 58


 2361 000e 0000     		.2byte	0
 2362 0010 00000000 		.4byte	.LFB2
 2363 0014 EC000000 		.4byte	.LFE2-.LFB2
 2364 0018 00000000 		.4byte	.LFB3
 2365 001c 30000000 		.4byte	.LFE3-.LFB3
 2366 0020 00000000 		.4byte	.LFB1
 2367 0024 20000000 		.4byte	.LFE1-.LFB1
 2368 0028 00000000 		.4byte	.LFB4
 2369 002c 10000000 		.4byte	.LFE4-.LFB4
 2370 0030 00000000 		.4byte	.LFB5
 2371 0034 14000000 		.4byte	.LFE5-.LFB5
 2372 0038 00000000 		.4byte	.LFB6
 2373 003c 14000000 		.4byte	.LFE6-.LFB6
 2374 0040 00000000 		.4byte	.LFB7
 2375 0044 28000000 		.4byte	.LFE7-.LFB7
 2376 0048 00000000 		.4byte	.LFB8
 2377 004c 2C000000 		.4byte	.LFE8-.LFB8
 2378 0050 00000000 		.4byte	.LFB9
 2379 0054 10000000 		.4byte	.LFE9-.LFB9
 2380 0058 00000000 		.4byte	.LFB10
 2381 005c 1C000000 		.4byte	.LFE10-.LFB10
 2382 0060 00000000 		.4byte	.LFB11
 2383 0064 18000000 		.4byte	.LFE11-.LFB11
 2384 0068 00000000 		.4byte	.LFB12
 2385 006c 10000000 		.4byte	.LFE12-.LFB12
 2386 0070 00000000 		.4byte	.LFB13
 2387 0074 10000000 		.4byte	.LFE13-.LFB13
 2388 0078 00000000 		.4byte	.LFB14
 2389 007c 1C000000 		.4byte	.LFE14-.LFB14
 2390 0080 00000000 		.4byte	.LFB15
 2391 0084 1C000000 		.4byte	.LFE15-.LFB15
 2392 0088 00000000 		.4byte	.LFB16
 2393 008c 5C000000 		.4byte	.LFE16-.LFB16
 2394 0090 00000000 		.4byte	.LFB17
 2395 0094 40000000 		.4byte	.LFE17-.LFB17
 2396 0098 00000000 		.4byte	.LFB18
 2397 009c 48000000 		.4byte	.LFE18-.LFB18
 2398 00a0 00000000 		.4byte	0
 2399 00a4 00000000 		.4byte	0
 2400              		.section	.debug_ranges,"",%progbits
 2401              	.Ldebug_ranges0:
 2402 0000 00000000 		.4byte	.LFB2
 2403 0004 EC000000 		.4byte	.LFE2
 2404 0008 00000000 		.4byte	.LFB3
 2405 000c 30000000 		.4byte	.LFE3
 2406 0010 00000000 		.4byte	.LFB1
 2407 0014 20000000 		.4byte	.LFE1
 2408 0018 00000000 		.4byte	.LFB4
 2409 001c 10000000 		.4byte	.LFE4
 2410 0020 00000000 		.4byte	.LFB5
 2411 0024 14000000 		.4byte	.LFE5
 2412 0028 00000000 		.4byte	.LFB6
 2413 002c 14000000 		.4byte	.LFE6
 2414 0030 00000000 		.4byte	.LFB7
 2415 0034 28000000 		.4byte	.LFE7
 2416 0038 00000000 		.4byte	.LFB8
 2417 003c 2C000000 		.4byte	.LFE8
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 59


 2418 0040 00000000 		.4byte	.LFB9
 2419 0044 10000000 		.4byte	.LFE9
 2420 0048 00000000 		.4byte	.LFB10
 2421 004c 1C000000 		.4byte	.LFE10
 2422 0050 00000000 		.4byte	.LFB11
 2423 0054 18000000 		.4byte	.LFE11
 2424 0058 00000000 		.4byte	.LFB12
 2425 005c 10000000 		.4byte	.LFE12
 2426 0060 00000000 		.4byte	.LFB13
 2427 0064 10000000 		.4byte	.LFE13
 2428 0068 00000000 		.4byte	.LFB14
 2429 006c 1C000000 		.4byte	.LFE14
 2430 0070 00000000 		.4byte	.LFB15
 2431 0074 1C000000 		.4byte	.LFE15
 2432 0078 00000000 		.4byte	.LFB16
 2433 007c 5C000000 		.4byte	.LFE16
 2434 0080 00000000 		.4byte	.LFB17
 2435 0084 40000000 		.4byte	.LFE17
 2436 0088 00000000 		.4byte	.LFB18
 2437 008c 48000000 		.4byte	.LFE18
 2438 0090 00000000 		.4byte	0
 2439 0094 00000000 		.4byte	0
 2440              		.section	.debug_line,"",%progbits
 2441              	.Ldebug_line0:
 2442 0000 69020000 		.section	.debug_str,"MS",%progbits,1
 2442      02004B00 
 2442      00000201 
 2442      FB0E0D00 
 2442      01010101 
 2443              	.LASF10:
 2444 0000 75696E74 		.ascii	"uint16\000"
 2444      313600
 2445              	.LASF48:
 2446 0007 61646347 		.ascii	"adcGain\000"
 2446      61696E00 
 2447              	.LASF24:
 2448 000f 636F756E 		.ascii	"counts\000"
 2448      747300
 2449              	.LASF53:
 2450 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2450      436F756E 
 2450      7473546F 
 2450      5F566F6C 
 2450      747300
 2451              	.LASF25:
 2452 0029 4144435F 		.ascii	"ADC_Init\000"
 2452      496E6974 
 2452      00
 2453              	.LASF63:
 2454 0032 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2454      43313120 
 2454      352E342E 
 2454      31203230 
 2454      31363036 
 2455 0065 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2455      20726576 
 2455      6973696F 
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 60


 2455      6E203233 
 2455      37373135 
 2456 0098 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2456      66756E63 
 2456      74696F6E 
 2456      2D736563 
 2456      74696F6E 
 2457              	.LASF7:
 2458 00c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2458      206C6F6E 
 2458      6720756E 
 2458      7369676E 
 2458      65642069 
 2459              	.LASF29:
 2460 00d7 4144435F 		.ascii	"ADC_StartConvert\000"
 2460      53746172 
 2460      74436F6E 
 2460      76657274 
 2460      00
 2461              	.LASF6:
 2462 00e8 6C6F6E67 		.ascii	"long long int\000"
 2462      206C6F6E 
 2462      6720696E 
 2462      7400
 2463              	.LASF0:
 2464 00f6 7369676E 		.ascii	"signed char\000"
 2464      65642063 
 2464      68617200 
 2465              	.LASF31:
 2466 0102 73746174 		.ascii	"status\000"
 2466      757300
 2467              	.LASF65:
 2468 0109 433A5C55 		.ascii	"C:\\Users\\tyork\\Documents\\PSoC Creator\\ECE381_S"
 2468      73657273 
 2468      5C74796F 
 2468      726B5C44 
 2468      6F63756D 
 2469 0137 5032335F 		.ascii	"P23_Lab08_FreeRTOS\\Design01.cydsn\000"
 2469      4C616230 
 2469      385F4672 
 2469      65655254 
 2469      4F535C44 
 2470              	.LASF13:
 2471 0159 696E7433 		.ascii	"int32\000"
 2471      3200
 2472              	.LASF27:
 2473 015f 4144435F 		.ascii	"ADC_Start\000"
 2473      53746172 
 2473      7400
 2474              	.LASF4:
 2475 0169 6C6F6E67 		.ascii	"long int\000"
 2475      20696E74 
 2475      00
 2476              	.LASF52:
 2477 0172 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2477      436F756E 
 2477      7473546F 
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 61


 2477      5F75566F 
 2477      6C747300 
 2478              	.LASF58:
 2479 0186 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2479      636F756E 
 2479      74735065 
 2479      72313056 
 2479      6F6C7400 
 2480              	.LASF9:
 2481 019a 75696E74 		.ascii	"uint8\000"
 2481      3800
 2482              	.LASF61:
 2483 01a0 43794465 		.ascii	"CyDelayUs\000"
 2483      6C617955 
 2483      7300
 2484              	.LASF16:
 2485 01aa 646F7562 		.ascii	"double\000"
 2485      6C6500
 2486              	.LASF11:
 2487 01b1 75696E74 		.ascii	"uint32\000"
 2487      333200
 2488              	.LASF38:
 2489 01b8 6D61736B 		.ascii	"mask\000"
 2489      00
 2490              	.LASF56:
 2491 01bd 4144435F 		.ascii	"ADC_initVar\000"
 2491      696E6974 
 2491      56617200 
 2492              	.LASF34:
 2493 01c9 7265744D 		.ascii	"retMode\000"
 2493      6F646500 
 2494              	.LASF43:
 2495 01d1 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2495      5365744C 
 2495      696D6974 
 2495      4D61736B 
 2495      00
 2496              	.LASF8:
 2497 01e2 756E7369 		.ascii	"unsigned int\000"
 2497      676E6564 
 2497      20696E74 
 2497      00
 2498              	.LASF66:
 2499 01ef 75566F6C 		.ascii	"uVolts\000"
 2499      747300
 2500              	.LASF5:
 2501 01f6 6C6F6E67 		.ascii	"long unsigned int\000"
 2501      20756E73 
 2501      69676E65 
 2501      6420696E 
 2501      7400
 2502              	.LASF44:
 2503 0208 4144435F 		.ascii	"ADC_SetSatMask\000"
 2503      53657453 
 2503      61744D61 
 2503      736B00
 2504              	.LASF54:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 62


 2505 0217 766F6C74 		.ascii	"volts\000"
 2505      7300
 2506              	.LASF23:
 2507 021d 746D7052 		.ascii	"tmpRegVal\000"
 2507      65675661 
 2507      6C00
 2508              	.LASF3:
 2509 0227 73686F72 		.ascii	"short unsigned int\000"
 2509      7420756E 
 2509      7369676E 
 2509      65642069 
 2509      6E7400
 2510              	.LASF60:
 2511 023a 4379496E 		.ascii	"CyIntSetVector\000"
 2511      74536574 
 2511      56656374 
 2511      6F7200
 2512              	.LASF30:
 2513 0249 4144435F 		.ascii	"ADC_StopConvert\000"
 2513      53746F70 
 2513      436F6E76 
 2513      65727400 
 2514              	.LASF51:
 2515 0259 6D566F6C 		.ascii	"mVolts\000"
 2515      747300
 2516              	.LASF19:
 2517 0260 72656733 		.ascii	"reg32\000"
 2517      3200
 2518              	.LASF14:
 2519 0266 666C6F61 		.ascii	"float32\000"
 2519      74333200 
 2520              	.LASF21:
 2521 026e 73697A65 		.ascii	"sizetype\000"
 2521      74797065 
 2521      00
 2522              	.LASF40:
 2523 0277 6C6F774C 		.ascii	"lowLimit\000"
 2523      696D6974 
 2523      00
 2524              	.LASF20:
 2525 0280 6C6F6E67 		.ascii	"long double\000"
 2525      20646F75 
 2525      626C6500 
 2526              	.LASF41:
 2527 028c 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2527      53657448 
 2527      6967684C 
 2527      696D6974 
 2527      00
 2528              	.LASF32:
 2529 029d 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2529      4973456E 
 2529      64436F6E 
 2529      76657273 
 2529      696F6E00 
 2530              	.LASF17:
 2531 02b1 696E7436 		.ascii	"int64\000"
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 63


 2531      3400
 2532              	.LASF59:
 2533 02b7 4379496E 		.ascii	"CyIntSetPriority\000"
 2533      74536574 
 2533      5072696F 
 2533      72697479 
 2533      00
 2534              	.LASF37:
 2535 02c8 4144435F 		.ascii	"ADC_SetChanMask\000"
 2535      53657443 
 2535      68616E4D 
 2535      61736B00 
 2536              	.LASF64:
 2537 02d8 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2537      72617465 
 2537      645F536F 
 2537      75726365 
 2537      5C50536F 
 2538              	.LASF47:
 2539 02f5 4144435F 		.ascii	"ADC_SetGain\000"
 2539      53657447 
 2539      61696E00 
 2540              	.LASF15:
 2541 0301 666C6F61 		.ascii	"float\000"
 2541      7400
 2542              	.LASF42:
 2543 0307 68696768 		.ascii	"highLimit\000"
 2543      4C696D69 
 2543      7400
 2544              	.LASF49:
 2545 0311 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2545      436F756E 
 2545      7473546F 
 2545      5F6D566F 
 2545      6C747300 
 2546              	.LASF39:
 2547 0325 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2547      5365744C 
 2547      6F774C69 
 2547      6D697400 
 2548              	.LASF62:
 2549 0335 43794861 		.ascii	"CyHalt\000"
 2549      6C7400
 2550              	.LASF1:
 2551 033c 756E7369 		.ascii	"unsigned char\000"
 2551      676E6564 
 2551      20636861 
 2551      7200
 2552              	.LASF57:
 2553 034a 4144435F 		.ascii	"ADC_offset\000"
 2553      6F666673 
 2553      657400
 2554              	.LASF2:
 2555 0355 73686F72 		.ascii	"short int\000"
 2555      7420696E 
 2555      7400
 2556              	.LASF28:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccbVV8S6.s 			page 64


 2557 035f 4144435F 		.ascii	"ADC_Stop\000"
 2557      53746F70 
 2557      00
 2558              	.LASF22:
 2559 0368 63684E75 		.ascii	"chNum\000"
 2559      6D00
 2560              	.LASF35:
 2561 036e 6368616E 		.ascii	"chan\000"
 2561      00
 2562              	.LASF18:
 2563 0373 63686172 		.ascii	"char\000"
 2563      00
 2564              	.LASF55:
 2565 0378 4144435F 		.ascii	"ADC_channelsConfig\000"
 2565      6368616E 
 2565      6E656C73 
 2565      436F6E66 
 2565      696700
 2566              	.LASF46:
 2567 038b 6F666673 		.ascii	"offset\000"
 2567      657400
 2568              	.LASF50:
 2569 0392 61646343 		.ascii	"adcCounts\000"
 2569      6F756E74 
 2569      7300
 2570              	.LASF26:
 2571 039c 4144435F 		.ascii	"ADC_Enable\000"
 2571      456E6162 
 2571      6C6500
 2572              	.LASF12:
 2573 03a7 696E7431 		.ascii	"int16\000"
 2573      3600
 2574              	.LASF45:
 2575 03ad 4144435F 		.ascii	"ADC_SetOffset\000"
 2575      5365744F 
 2575      66667365 
 2575      7400
 2576              	.LASF36:
 2577 03bb 72657375 		.ascii	"result\000"
 2577      6C7400
 2578              	.LASF33:
 2579 03c2 4144435F 		.ascii	"ADC_GetResult16\000"
 2579      47657452 
 2579      6573756C 
 2579      74313600 
 2580              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
