ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"list.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.vListInitialise,"ax",%progbits
  20              		.align	2
  21              		.global	vListInitialise
  22              		.code	16
  23              		.thumb_func
  24              		.type	vListInitialise, %function
  25              	vListInitialise:
  26              	.LFB34:
  27              		.file 1 "FreeRTOS\\Source\\list.c"
   1:FreeRTOS\Source/list.c **** /*
   2:FreeRTOS\Source/list.c ****  * FreeRTOS Kernel V10.5.1
   3:FreeRTOS\Source/list.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS\Source/list.c ****  *
   5:FreeRTOS\Source/list.c ****  * SPDX-License-Identifier: MIT
   6:FreeRTOS\Source/list.c ****  *
   7:FreeRTOS\Source/list.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:FreeRTOS\Source/list.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:FreeRTOS\Source/list.c ****  * the Software without restriction, including without limitation the rights to
  10:FreeRTOS\Source/list.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:FreeRTOS\Source/list.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:FreeRTOS\Source/list.c ****  * subject to the following conditions:
  13:FreeRTOS\Source/list.c ****  *
  14:FreeRTOS\Source/list.c ****  * The above copyright notice and this permission notice shall be included in all
  15:FreeRTOS\Source/list.c ****  * copies or substantial portions of the Software.
  16:FreeRTOS\Source/list.c ****  *
  17:FreeRTOS\Source/list.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:FreeRTOS\Source/list.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:FreeRTOS\Source/list.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:FreeRTOS\Source/list.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:FreeRTOS\Source/list.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:FreeRTOS\Source/list.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:FreeRTOS\Source/list.c ****  *
  24:FreeRTOS\Source/list.c ****  * https://www.FreeRTOS.org
  25:FreeRTOS\Source/list.c ****  * https://github.com/FreeRTOS
  26:FreeRTOS\Source/list.c ****  *
  27:FreeRTOS\Source/list.c ****  */
  28:FreeRTOS\Source/list.c **** 
  29:FreeRTOS\Source/list.c **** 
  30:FreeRTOS\Source/list.c **** #include <stdlib.h>
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 2


  31:FreeRTOS\Source/list.c **** 
  32:FreeRTOS\Source/list.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:FreeRTOS\Source/list.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  34:FreeRTOS\Source/list.c ****  * task.h is included from an application file. */
  35:FreeRTOS\Source/list.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:FreeRTOS\Source/list.c **** 
  37:FreeRTOS\Source/list.c **** #include "FreeRTOS.h"
  38:FreeRTOS\Source/list.c **** #include "list.h"
  39:FreeRTOS\Source/list.c **** 
  40:FreeRTOS\Source/list.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  41:FreeRTOS\Source/list.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be
  42:FreeRTOS\Source/list.c ****  * defined for the header files above, but not in this file, in order to
  43:FreeRTOS\Source/list.c ****  * generate the correct privileged Vs unprivileged linkage and placement. */
  44:FreeRTOS\Source/list.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  45:FreeRTOS\Source/list.c **** 
  46:FreeRTOS\Source/list.c **** /*-----------------------------------------------------------
  47:FreeRTOS\Source/list.c **** * PUBLIC LIST API documented in list.h
  48:FreeRTOS\Source/list.c **** *----------------------------------------------------------*/
  49:FreeRTOS\Source/list.c **** 
  50:FreeRTOS\Source/list.c **** void vListInitialise( List_t * const pxList )
  51:FreeRTOS\Source/list.c **** {
  28              		.loc 1 51 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  52:FreeRTOS\Source/list.c ****     /* The list structure contains a list item which is used to mark the
  53:FreeRTOS\Source/list.c ****      * end of the list.  To initialise the list the list end is inserted
  54:FreeRTOS\Source/list.c ****      * as the only list entry. */
  55:FreeRTOS\Source/list.c ****     pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini li
  34              		.loc 1 55 0
  35 0000 0300     		movs	r3, r0
  36 0002 0833     		adds	r3, r3, #8
  37 0004 4360     		str	r3, [r0, #4]
  56:FreeRTOS\Source/list.c **** 
  57:FreeRTOS\Source/list.c ****     listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
  58:FreeRTOS\Source/list.c **** 
  59:FreeRTOS\Source/list.c ****     /* The list end value is the highest possible value in the list to
  60:FreeRTOS\Source/list.c ****      * ensure it remains at the end of the list. */
  61:FreeRTOS\Source/list.c ****     pxList->xListEnd.xItemValue = portMAX_DELAY;
  38              		.loc 1 61 0
  39 0006 0122     		movs	r2, #1
  40 0008 5242     		rsbs	r2, r2, #0
  41 000a 8260     		str	r2, [r0, #8]
  62:FreeRTOS\Source/list.c **** 
  63:FreeRTOS\Source/list.c ****     /* The list end next and previous pointers point to itself so we know
  64:FreeRTOS\Source/list.c ****      * when the list is empty. */
  65:FreeRTOS\Source/list.c ****     pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );     /*lint !e826 !e740 !e9087
  42              		.loc 1 65 0
  43 000c C360     		str	r3, [r0, #12]
  66:FreeRTOS\Source/list.c ****     pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087
  44              		.loc 1 66 0
  45 000e 0361     		str	r3, [r0, #16]
  67:FreeRTOS\Source/list.c **** 
  68:FreeRTOS\Source/list.c ****     /* Initialize the remaining fields of xListEnd when it is a proper ListItem_t */
  69:FreeRTOS\Source/list.c ****     #if ( configUSE_MINI_LIST_ITEM == 0 )
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 3


  70:FreeRTOS\Source/list.c ****     {
  71:FreeRTOS\Source/list.c ****         pxList->xListEnd.pvOwner = NULL;
  72:FreeRTOS\Source/list.c ****         pxList->xListEnd.pxContainer = NULL;
  73:FreeRTOS\Source/list.c ****         listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
  74:FreeRTOS\Source/list.c ****     }
  75:FreeRTOS\Source/list.c ****     #endif
  76:FreeRTOS\Source/list.c **** 
  77:FreeRTOS\Source/list.c ****     pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  46              		.loc 1 77 0
  47 0010 0023     		movs	r3, #0
  48 0012 0360     		str	r3, [r0]
  78:FreeRTOS\Source/list.c **** 
  79:FreeRTOS\Source/list.c ****     /* Write known values into the list if
  80:FreeRTOS\Source/list.c ****      * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  81:FreeRTOS\Source/list.c ****     listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
  82:FreeRTOS\Source/list.c ****     listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
  83:FreeRTOS\Source/list.c **** }
  49              		.loc 1 83 0
  50              		@ sp needed
  51 0014 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE34:
  54              		.size	vListInitialise, .-vListInitialise
  55 0016 C046     		.section	.text.vListInitialiseItem,"ax",%progbits
  56              		.align	2
  57              		.global	vListInitialiseItem
  58              		.code	16
  59              		.thumb_func
  60              		.type	vListInitialiseItem, %function
  61              	vListInitialiseItem:
  62              	.LFB35:
  84:FreeRTOS\Source/list.c **** /*-----------------------------------------------------------*/
  85:FreeRTOS\Source/list.c **** 
  86:FreeRTOS\Source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
  87:FreeRTOS\Source/list.c **** {
  63              		.loc 1 87 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68              	.LVL1:
  88:FreeRTOS\Source/list.c ****     /* Make sure the list item is not recorded as being on a list. */
  89:FreeRTOS\Source/list.c ****     pxItem->pxContainer = NULL;
  69              		.loc 1 89 0
  70 0000 0023     		movs	r3, #0
  71 0002 0361     		str	r3, [r0, #16]
  90:FreeRTOS\Source/list.c **** 
  91:FreeRTOS\Source/list.c ****     /* Write known values into the list item if
  92:FreeRTOS\Source/list.c ****      * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  93:FreeRTOS\Source/list.c ****     listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  94:FreeRTOS\Source/list.c ****     listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  95:FreeRTOS\Source/list.c **** }
  72              		.loc 1 95 0
  73              		@ sp needed
  74 0004 7047     		bx	lr
  75              		.cfi_endproc
  76              	.LFE35:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 4


  77              		.size	vListInitialiseItem, .-vListInitialiseItem
  78 0006 C046     		.section	.text.vListInsertEnd,"ax",%progbits
  79              		.align	2
  80              		.global	vListInsertEnd
  81              		.code	16
  82              		.thumb_func
  83              		.type	vListInsertEnd, %function
  84              	vListInsertEnd:
  85              	.LFB36:
  96:FreeRTOS\Source/list.c **** /*-----------------------------------------------------------*/
  97:FreeRTOS\Source/list.c **** 
  98:FreeRTOS\Source/list.c **** void vListInsertEnd( List_t * const pxList,
  99:FreeRTOS\Source/list.c ****                      ListItem_t * const pxNewListItem )
 100:FreeRTOS\Source/list.c **** {
  86              		.loc 1 100 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.LVL2:
 101:FreeRTOS\Source/list.c ****     ListItem_t * const pxIndex = pxList->pxIndex;
  92              		.loc 1 101 0
  93 0000 4368     		ldr	r3, [r0, #4]
  94              	.LVL3:
 102:FreeRTOS\Source/list.c **** 
 103:FreeRTOS\Source/list.c ****     /* Only effective when configASSERT() is also defined, these tests may catch
 104:FreeRTOS\Source/list.c ****      * the list data structures being overwritten in memory.  They will not catch
 105:FreeRTOS\Source/list.c ****      * data errors caused by incorrect configuration or use of FreeRTOS. */
 106:FreeRTOS\Source/list.c ****     listTEST_LIST_INTEGRITY( pxList );
 107:FreeRTOS\Source/list.c ****     listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 108:FreeRTOS\Source/list.c **** 
 109:FreeRTOS\Source/list.c ****     /* Insert a new list item into pxList, but rather than sort the list,
 110:FreeRTOS\Source/list.c ****      * makes the new list item the last item to be removed by a call to
 111:FreeRTOS\Source/list.c ****      * listGET_OWNER_OF_NEXT_ENTRY(). */
 112:FreeRTOS\Source/list.c ****     pxNewListItem->pxNext = pxIndex;
  95              		.loc 1 112 0
  96 0002 4B60     		str	r3, [r1, #4]
 113:FreeRTOS\Source/list.c ****     pxNewListItem->pxPrevious = pxIndex->pxPrevious;
  97              		.loc 1 113 0
  98 0004 9A68     		ldr	r2, [r3, #8]
  99 0006 8A60     		str	r2, [r1, #8]
 114:FreeRTOS\Source/list.c **** 
 115:FreeRTOS\Source/list.c ****     /* Only used during decision coverage testing. */
 116:FreeRTOS\Source/list.c ****     mtCOVERAGE_TEST_DELAY();
 117:FreeRTOS\Source/list.c **** 
 118:FreeRTOS\Source/list.c ****     pxIndex->pxPrevious->pxNext = pxNewListItem;
 100              		.loc 1 118 0
 101 0008 9A68     		ldr	r2, [r3, #8]
 102 000a 5160     		str	r1, [r2, #4]
 119:FreeRTOS\Source/list.c ****     pxIndex->pxPrevious = pxNewListItem;
 103              		.loc 1 119 0
 104 000c 9960     		str	r1, [r3, #8]
 120:FreeRTOS\Source/list.c **** 
 121:FreeRTOS\Source/list.c ****     /* Remember which list the item is in. */
 122:FreeRTOS\Source/list.c ****     pxNewListItem->pxContainer = pxList;
 105              		.loc 1 122 0
 106 000e 0861     		str	r0, [r1, #16]
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 5


 123:FreeRTOS\Source/list.c **** 
 124:FreeRTOS\Source/list.c ****     ( pxList->uxNumberOfItems )++;
 107              		.loc 1 124 0
 108 0010 0368     		ldr	r3, [r0]
 109              	.LVL4:
 110 0012 0133     		adds	r3, r3, #1
 111 0014 0360     		str	r3, [r0]
 125:FreeRTOS\Source/list.c **** }
 112              		.loc 1 125 0
 113              		@ sp needed
 114 0016 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE36:
 117              		.size	vListInsertEnd, .-vListInsertEnd
 118              		.section	.text.vListInsert,"ax",%progbits
 119              		.align	2
 120              		.global	vListInsert
 121              		.code	16
 122              		.thumb_func
 123              		.type	vListInsert, %function
 124              	vListInsert:
 125              	.LFB37:
 126:FreeRTOS\Source/list.c **** /*-----------------------------------------------------------*/
 127:FreeRTOS\Source/list.c **** 
 128:FreeRTOS\Source/list.c **** void vListInsert( List_t * const pxList,
 129:FreeRTOS\Source/list.c ****                   ListItem_t * const pxNewListItem )
 130:FreeRTOS\Source/list.c **** {
 126              		.loc 1 130 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              	.LVL5:
 131 0000 30B5     		push	{r4, r5, lr}
 132              		.cfi_def_cfa_offset 12
 133              		.cfi_offset 4, -12
 134              		.cfi_offset 5, -8
 135              		.cfi_offset 14, -4
 131:FreeRTOS\Source/list.c ****     ListItem_t * pxIterator;
 132:FreeRTOS\Source/list.c ****     const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 136              		.loc 1 132 0
 137 0002 0C68     		ldr	r4, [r1]
 138              	.LVL6:
 133:FreeRTOS\Source/list.c **** 
 134:FreeRTOS\Source/list.c ****     /* Only effective when configASSERT() is also defined, these tests may catch
 135:FreeRTOS\Source/list.c ****      * the list data structures being overwritten in memory.  They will not catch
 136:FreeRTOS\Source/list.c ****      * data errors caused by incorrect configuration or use of FreeRTOS. */
 137:FreeRTOS\Source/list.c ****     listTEST_LIST_INTEGRITY( pxList );
 138:FreeRTOS\Source/list.c ****     listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 139:FreeRTOS\Source/list.c **** 
 140:FreeRTOS\Source/list.c ****     /* Insert the new list item into the list, sorted in xItemValue order.
 141:FreeRTOS\Source/list.c ****      *
 142:FreeRTOS\Source/list.c ****      * If the list already contains a list item with the same item value then the
 143:FreeRTOS\Source/list.c ****      * new list item should be placed after it.  This ensures that TCBs which are
 144:FreeRTOS\Source/list.c ****      * stored in ready lists (all of which have the same xItemValue value) get a
 145:FreeRTOS\Source/list.c ****      * share of the CPU.  However, if the xItemValue is the same as the back marker
 146:FreeRTOS\Source/list.c ****      * the iteration loop below will not end.  Therefore the value is checked
 147:FreeRTOS\Source/list.c ****      * first, and the algorithm slightly modified if necessary. */
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 6


 148:FreeRTOS\Source/list.c ****     if( xValueOfInsertion == portMAX_DELAY )
 139              		.loc 1 148 0
 140 0004 631C     		adds	r3, r4, #1
 141 0006 01D1     		bne	.L5
 149:FreeRTOS\Source/list.c ****     {
 150:FreeRTOS\Source/list.c ****         pxIterator = pxList->xListEnd.pxPrevious;
 142              		.loc 1 150 0
 143 0008 0269     		ldr	r2, [r0, #16]
 144              	.LVL7:
 145 000a 07E0     		b	.L6
 146              	.LVL8:
 147              	.L5:
 151:FreeRTOS\Source/list.c ****     }
 152:FreeRTOS\Source/list.c ****     else
 153:FreeRTOS\Source/list.c ****     {
 154:FreeRTOS\Source/list.c ****         /* *** NOTE ***********************************************************
 155:FreeRTOS\Source/list.c ****         *  If you find your application is crashing here then likely causes are
 156:FreeRTOS\Source/list.c ****         *  listed below.  In addition see https://www.FreeRTOS.org/FAQHelp.html for
 157:FreeRTOS\Source/list.c ****         *  more tips, and ensure configASSERT() is defined!
 158:FreeRTOS\Source/list.c ****         *  https://www.FreeRTOS.org/a00110.html#configASSERT
 159:FreeRTOS\Source/list.c ****         *
 160:FreeRTOS\Source/list.c ****         *   1) Stack overflow -
 161:FreeRTOS\Source/list.c ****         *      see https://www.FreeRTOS.org/Stacks-and-stack-overflow-checking.html
 162:FreeRTOS\Source/list.c ****         *   2) Incorrect interrupt priority assignment, especially on Cortex-M
 163:FreeRTOS\Source/list.c ****         *      parts where numerically high priority values denote low actual
 164:FreeRTOS\Source/list.c ****         *      interrupt priorities, which can seem counter intuitive.  See
 165:FreeRTOS\Source/list.c ****         *      https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html and the definition
 166:FreeRTOS\Source/list.c ****         *      of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 167:FreeRTOS\Source/list.c ****         *      https://www.FreeRTOS.org/a00110.html
 168:FreeRTOS\Source/list.c ****         *   3) Calling an API function from within a critical section or when
 169:FreeRTOS\Source/list.c ****         *      the scheduler is suspended, or calling an API function that does
 170:FreeRTOS\Source/list.c ****         *      not end in "FromISR" from an interrupt.
 171:FreeRTOS\Source/list.c ****         *   4) Using a queue or semaphore before it has been initialised or
 172:FreeRTOS\Source/list.c ****         *      before the scheduler has been started (are interrupts firing
 173:FreeRTOS\Source/list.c ****         *      before vTaskStartScheduler() has been called?).
 174:FreeRTOS\Source/list.c ****         *   5) If the FreeRTOS port supports interrupt nesting then ensure that
 175:FreeRTOS\Source/list.c ****         *      the priority of the tick interrupt is at or below
 176:FreeRTOS\Source/list.c ****         *      configMAX_SYSCALL_INTERRUPT_PRIORITY.
 177:FreeRTOS\Source/list.c ****         **********************************************************************/
 178:FreeRTOS\Source/list.c **** 
 179:FreeRTOS\Source/list.c ****         for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <=
 148              		.loc 1 179 0
 149 000c 0200     		movs	r2, r0
 150 000e 0832     		adds	r2, r2, #8
 151              	.LVL9:
 152 0010 00E0     		b	.L7
 153              	.L8:
 154 0012 1A00     		movs	r2, r3
 155              	.LVL10:
 156              	.L7:
 157              		.loc 1 179 0 is_stmt 0 discriminator 1
 158 0014 5368     		ldr	r3, [r2, #4]
 159 0016 1D68     		ldr	r5, [r3]
 160 0018 AC42     		cmp	r4, r5
 161 001a FAD2     		bcs	.L8
 162              	.L6:
 180:FreeRTOS\Source/list.c ****         {
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 7


 181:FreeRTOS\Source/list.c ****             /* There is nothing to do here, just iterating to the wanted
 182:FreeRTOS\Source/list.c ****              * insertion position. */
 183:FreeRTOS\Source/list.c ****         }
 184:FreeRTOS\Source/list.c ****     }
 185:FreeRTOS\Source/list.c **** 
 186:FreeRTOS\Source/list.c ****     pxNewListItem->pxNext = pxIterator->pxNext;
 163              		.loc 1 186 0 is_stmt 1
 164 001c 5368     		ldr	r3, [r2, #4]
 165 001e 4B60     		str	r3, [r1, #4]
 187:FreeRTOS\Source/list.c ****     pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 166              		.loc 1 187 0
 167 0020 9960     		str	r1, [r3, #8]
 188:FreeRTOS\Source/list.c ****     pxNewListItem->pxPrevious = pxIterator;
 168              		.loc 1 188 0
 169 0022 8A60     		str	r2, [r1, #8]
 189:FreeRTOS\Source/list.c ****     pxIterator->pxNext = pxNewListItem;
 170              		.loc 1 189 0
 171 0024 5160     		str	r1, [r2, #4]
 190:FreeRTOS\Source/list.c **** 
 191:FreeRTOS\Source/list.c ****     /* Remember which list the item is in.  This allows fast removal of the
 192:FreeRTOS\Source/list.c ****      * item later. */
 193:FreeRTOS\Source/list.c ****     pxNewListItem->pxContainer = pxList;
 172              		.loc 1 193 0
 173 0026 0861     		str	r0, [r1, #16]
 194:FreeRTOS\Source/list.c **** 
 195:FreeRTOS\Source/list.c ****     ( pxList->uxNumberOfItems )++;
 174              		.loc 1 195 0
 175 0028 0368     		ldr	r3, [r0]
 176 002a 0133     		adds	r3, r3, #1
 177 002c 0360     		str	r3, [r0]
 196:FreeRTOS\Source/list.c **** }
 178              		.loc 1 196 0
 179              		@ sp needed
 180              	.LVL11:
 181 002e 30BD     		pop	{r4, r5, pc}
 182              		.cfi_endproc
 183              	.LFE37:
 184              		.size	vListInsert, .-vListInsert
 185              		.section	.text.uxListRemove,"ax",%progbits
 186              		.align	2
 187              		.global	uxListRemove
 188              		.code	16
 189              		.thumb_func
 190              		.type	uxListRemove, %function
 191              	uxListRemove:
 192              	.LFB38:
 197:FreeRTOS\Source/list.c **** /*-----------------------------------------------------------*/
 198:FreeRTOS\Source/list.c **** 
 199:FreeRTOS\Source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 200:FreeRTOS\Source/list.c **** {
 193              		.loc 1 200 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 198              	.LVL12:
 201:FreeRTOS\Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 8


 202:FreeRTOS\Source/list.c ****  * item. */
 203:FreeRTOS\Source/list.c ****     List_t * const pxList = pxItemToRemove->pxContainer;
 199              		.loc 1 203 0
 200 0000 0369     		ldr	r3, [r0, #16]
 201              	.LVL13:
 204:FreeRTOS\Source/list.c **** 
 205:FreeRTOS\Source/list.c ****     pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 202              		.loc 1 205 0
 203 0002 4268     		ldr	r2, [r0, #4]
 204 0004 8168     		ldr	r1, [r0, #8]
 205 0006 9160     		str	r1, [r2, #8]
 206:FreeRTOS\Source/list.c ****     pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 206              		.loc 1 206 0
 207 0008 8268     		ldr	r2, [r0, #8]
 208 000a 4168     		ldr	r1, [r0, #4]
 209 000c 5160     		str	r1, [r2, #4]
 207:FreeRTOS\Source/list.c **** 
 208:FreeRTOS\Source/list.c ****     /* Only used during decision coverage testing. */
 209:FreeRTOS\Source/list.c ****     mtCOVERAGE_TEST_DELAY();
 210:FreeRTOS\Source/list.c **** 
 211:FreeRTOS\Source/list.c ****     /* Make sure the index is left pointing to a valid item. */
 212:FreeRTOS\Source/list.c ****     if( pxList->pxIndex == pxItemToRemove )
 210              		.loc 1 212 0
 211 000e 5A68     		ldr	r2, [r3, #4]
 212 0010 9042     		cmp	r0, r2
 213 0012 01D1     		bne	.L10
 213:FreeRTOS\Source/list.c ****     {
 214:FreeRTOS\Source/list.c ****         pxList->pxIndex = pxItemToRemove->pxPrevious;
 214              		.loc 1 214 0
 215 0014 8268     		ldr	r2, [r0, #8]
 216 0016 5A60     		str	r2, [r3, #4]
 217              	.L10:
 215:FreeRTOS\Source/list.c ****     }
 216:FreeRTOS\Source/list.c ****     else
 217:FreeRTOS\Source/list.c ****     {
 218:FreeRTOS\Source/list.c ****         mtCOVERAGE_TEST_MARKER();
 219:FreeRTOS\Source/list.c ****     }
 220:FreeRTOS\Source/list.c **** 
 221:FreeRTOS\Source/list.c ****     pxItemToRemove->pxContainer = NULL;
 218              		.loc 1 221 0
 219 0018 0022     		movs	r2, #0
 220 001a 0261     		str	r2, [r0, #16]
 222:FreeRTOS\Source/list.c ****     ( pxList->uxNumberOfItems )--;
 221              		.loc 1 222 0
 222 001c 1A68     		ldr	r2, [r3]
 223 001e 013A     		subs	r2, r2, #1
 224 0020 1A60     		str	r2, [r3]
 223:FreeRTOS\Source/list.c **** 
 224:FreeRTOS\Source/list.c ****     return pxList->uxNumberOfItems;
 225              		.loc 1 224 0
 226 0022 1868     		ldr	r0, [r3]
 227              	.LVL14:
 225:FreeRTOS\Source/list.c **** }
 228              		.loc 1 225 0
 229              		@ sp needed
 230 0024 7047     		bx	lr
 231              		.cfi_endproc
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 9


 232              	.LFE38:
 233              		.size	uxListRemove, .-uxListRemove
 234 0026 C046     		.text
 235              	.Letext0:
 236              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 237              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 238              		.file 4 ".\\FreeRTOS\\Include/portmacro.h"
 239              		.file 5 ".\\FreeRTOS\\Include/list.h"
 240              		.section	.debug_info,"",%progbits
 241              	.Ldebug_info0:
 242 0000 B6020000 		.4byte	0x2b6
 243 0004 0400     		.2byte	0x4
 244 0006 00000000 		.4byte	.Ldebug_abbrev0
 245 000a 04       		.byte	0x4
 246 000b 01       		.uleb128 0x1
 247 000c 5D010000 		.4byte	.LASF43
 248 0010 0C       		.byte	0xc
 249 0011 1E020000 		.4byte	.LASF44
 250 0015 35020000 		.4byte	.LASF45
 251 0019 00000000 		.4byte	.Ldebug_ranges0+0
 252 001d 00000000 		.4byte	0
 253 0021 00000000 		.4byte	.Ldebug_line0
 254 0025 02       		.uleb128 0x2
 255 0026 04       		.byte	0x4
 256 0027 07       		.byte	0x7
 257 0028 10010000 		.4byte	.LASF0
 258 002c 03       		.uleb128 0x3
 259 002d 04       		.byte	0x4
 260 002e 05       		.byte	0x5
 261 002f 696E7400 		.ascii	"int\000"
 262 0033 02       		.uleb128 0x2
 263 0034 08       		.byte	0x8
 264 0035 05       		.byte	0x5
 265 0036 00020000 		.4byte	.LASF1
 266 003a 02       		.uleb128 0x2
 267 003b 08       		.byte	0x8
 268 003c 04       		.byte	0x4
 269 003d EB010000 		.4byte	.LASF2
 270 0041 02       		.uleb128 0x2
 271 0042 01       		.byte	0x1
 272 0043 06       		.byte	0x6
 273 0044 B4020000 		.4byte	.LASF3
 274 0048 02       		.uleb128 0x2
 275 0049 01       		.byte	0x1
 276 004a 08       		.byte	0x8
 277 004b 79000000 		.4byte	.LASF4
 278 004f 02       		.uleb128 0x2
 279 0050 02       		.byte	0x2
 280 0051 05       		.byte	0x5
 281 0052 E0000000 		.4byte	.LASF5
 282 0056 02       		.uleb128 0x2
 283 0057 02       		.byte	0x2
 284 0058 07       		.byte	0x7
 285 0059 40000000 		.4byte	.LASF6
 286 005d 02       		.uleb128 0x2
 287 005e 04       		.byte	0x4
 288 005f 05       		.byte	0x5
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 10


 289 0060 8E020000 		.4byte	.LASF7
 290 0064 04       		.uleb128 0x4
 291 0065 B3000000 		.4byte	.LASF12
 292 0069 02       		.byte	0x2
 293 006a 41       		.byte	0x41
 294 006b 6F000000 		.4byte	0x6f
 295 006f 02       		.uleb128 0x2
 296 0070 04       		.byte	0x4
 297 0071 07       		.byte	0x7
 298 0072 87000000 		.4byte	.LASF8
 299 0076 02       		.uleb128 0x2
 300 0077 08       		.byte	0x8
 301 0078 07       		.byte	0x7
 302 0079 3F010000 		.4byte	.LASF9
 303 007d 02       		.uleb128 0x2
 304 007e 04       		.byte	0x4
 305 007f 07       		.byte	0x7
 306 0080 F7010000 		.4byte	.LASF10
 307 0084 05       		.uleb128 0x5
 308 0085 04       		.byte	0x4
 309 0086 02       		.uleb128 0x2
 310 0087 01       		.byte	0x1
 311 0088 08       		.byte	0x8
 312 0089 0E020000 		.4byte	.LASF11
 313 008d 04       		.uleb128 0x4
 314 008e 85020000 		.4byte	.LASF13
 315 0092 03       		.byte	0x3
 316 0093 30       		.byte	0x30
 317 0094 64000000 		.4byte	0x64
 318 0098 02       		.uleb128 0x2
 319 0099 04       		.byte	0x4
 320 009a 04       		.byte	0x4
 321 009b 73000000 		.4byte	.LASF14
 322 009f 02       		.uleb128 0x2
 323 00a0 08       		.byte	0x8
 324 00a1 04       		.byte	0x4
 325 00a2 D9000000 		.4byte	.LASF15
 326 00a6 04       		.uleb128 0x4
 327 00a7 CD020000 		.4byte	.LASF16
 328 00ab 04       		.byte	0x4
 329 00ac 3B       		.byte	0x3b
 330 00ad 6F000000 		.4byte	0x6f
 331 00b1 04       		.uleb128 0x4
 332 00b2 08000000 		.4byte	.LASF17
 333 00b6 04       		.byte	0x4
 334 00b7 41       		.byte	0x41
 335 00b8 8D000000 		.4byte	0x8d
 336 00bc 06       		.uleb128 0x6
 337 00bd 68000000 		.4byte	.LASF23
 338 00c1 14       		.byte	0x14
 339 00c2 05       		.byte	0x5
 340 00c3 90       		.byte	0x90
 341 00c4 05010000 		.4byte	0x105
 342 00c8 07       		.uleb128 0x7
 343 00c9 35000000 		.4byte	.LASF18
 344 00cd 05       		.byte	0x5
 345 00ce 93       		.byte	0x93
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 11


 346 00cf B1000000 		.4byte	0xb1
 347 00d3 00       		.byte	0
 348 00d4 07       		.uleb128 0x7
 349 00d5 09010000 		.4byte	.LASF19
 350 00d9 05       		.byte	0x5
 351 00da 94       		.byte	0x94
 352 00db 05010000 		.4byte	0x105
 353 00df 04       		.byte	0x4
 354 00e0 07       		.uleb128 0x7
 355 00e1 A8000000 		.4byte	.LASF20
 356 00e5 05       		.byte	0x5
 357 00e6 95       		.byte	0x95
 358 00e7 05010000 		.4byte	0x105
 359 00eb 08       		.byte	0x8
 360 00ec 07       		.uleb128 0x7
 361 00ed 00000000 		.4byte	.LASF21
 362 00f1 05       		.byte	0x5
 363 00f2 96       		.byte	0x96
 364 00f3 84000000 		.4byte	0x84
 365 00f7 0C       		.byte	0xc
 366 00f8 07       		.uleb128 0x7
 367 00f9 5C000000 		.4byte	.LASF22
 368 00fd 05       		.byte	0x5
 369 00fe 97       		.byte	0x97
 370 00ff 3C010000 		.4byte	0x13c
 371 0103 10       		.byte	0x10
 372 0104 00       		.byte	0
 373 0105 08       		.uleb128 0x8
 374 0106 04       		.byte	0x4
 375 0107 BC000000 		.4byte	0xbc
 376 010b 06       		.uleb128 0x6
 377 010c C7020000 		.4byte	.LASF24
 378 0110 14       		.byte	0x14
 379 0111 05       		.byte	0x5
 380 0112 AC       		.byte	0xac
 381 0113 3C010000 		.4byte	0x13c
 382 0117 07       		.uleb128 0x7
 383 0118 EA000000 		.4byte	.LASF25
 384 011c 05       		.byte	0x5
 385 011d AF       		.byte	0xaf
 386 011e 89010000 		.4byte	0x189
 387 0122 00       		.byte	0
 388 0123 07       		.uleb128 0x7
 389 0124 1E000000 		.4byte	.LASF26
 390 0128 05       		.byte	0x5
 391 0129 B0       		.byte	0xb0
 392 012a 8E010000 		.4byte	0x18e
 393 012e 04       		.byte	0x4
 394 012f 07       		.uleb128 0x7
 395 0130 53000000 		.4byte	.LASF27
 396 0134 05       		.byte	0x5
 397 0135 B1       		.byte	0xb1
 398 0136 7E010000 		.4byte	0x17e
 399 013a 08       		.byte	0x8
 400 013b 00       		.byte	0
 401 013c 08       		.uleb128 0x8
 402 013d 04       		.byte	0x4
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 12


 403 013e 0B010000 		.4byte	0x10b
 404 0142 04       		.uleb128 0x4
 405 0143 13000000 		.4byte	.LASF28
 406 0147 05       		.byte	0x5
 407 0148 9A       		.byte	0x9a
 408 0149 BC000000 		.4byte	0xbc
 409 014d 06       		.uleb128 0x6
 410 014e A4020000 		.4byte	.LASF29
 411 0152 0C       		.byte	0xc
 412 0153 05       		.byte	0x5
 413 0154 9D       		.byte	0x9d
 414 0155 7E010000 		.4byte	0x17e
 415 0159 07       		.uleb128 0x7
 416 015a 35000000 		.4byte	.LASF18
 417 015e 05       		.byte	0x5
 418 015f A0       		.byte	0xa0
 419 0160 B1000000 		.4byte	0xb1
 420 0164 00       		.byte	0
 421 0165 07       		.uleb128 0x7
 422 0166 09010000 		.4byte	.LASF19
 423 016a 05       		.byte	0x5
 424 016b A1       		.byte	0xa1
 425 016c 05010000 		.4byte	0x105
 426 0170 04       		.byte	0x4
 427 0171 07       		.uleb128 0x7
 428 0172 A8000000 		.4byte	.LASF20
 429 0176 05       		.byte	0x5
 430 0177 A2       		.byte	0xa2
 431 0178 05010000 		.4byte	0x105
 432 017c 08       		.byte	0x8
 433 017d 00       		.byte	0
 434 017e 04       		.uleb128 0x4
 435 017f 26000000 		.4byte	.LASF30
 436 0183 05       		.byte	0x5
 437 0184 A4       		.byte	0xa4
 438 0185 4D010000 		.4byte	0x14d
 439 0189 09       		.uleb128 0x9
 440 018a A6000000 		.4byte	0xa6
 441 018e 08       		.uleb128 0x8
 442 018f 04       		.byte	0x4
 443 0190 42010000 		.4byte	0x142
 444 0194 04       		.uleb128 0x4
 445 0195 D2000000 		.4byte	.LASF31
 446 0199 05       		.byte	0x5
 447 019a B3       		.byte	0xb3
 448 019b 0B010000 		.4byte	0x10b
 449 019f 0A       		.uleb128 0xa
 450 01a0 1D010000 		.4byte	.LASF32
 451 01a4 01       		.byte	0x1
 452 01a5 32       		.byte	0x32
 453 01a6 00000000 		.4byte	.LFB34
 454 01aa 16000000 		.4byte	.LFE34-.LFB34
 455 01ae 01       		.uleb128 0x1
 456 01af 9C       		.byte	0x9c
 457 01b0 C2010000 		.4byte	0x1c2
 458 01b4 0B       		.uleb128 0xb
 459 01b5 C0020000 		.4byte	.LASF34
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 13


 460 01b9 01       		.byte	0x1
 461 01ba 32       		.byte	0x32
 462 01bb C8010000 		.4byte	0x1c8
 463 01bf 01       		.uleb128 0x1
 464 01c0 50       		.byte	0x50
 465 01c1 00       		.byte	0
 466 01c2 08       		.uleb128 0x8
 467 01c3 04       		.byte	0x4
 468 01c4 94010000 		.4byte	0x194
 469 01c8 0C       		.uleb128 0xc
 470 01c9 C2010000 		.4byte	0x1c2
 471 01cd 0A       		.uleb128 0xa
 472 01ce BE000000 		.4byte	.LASF33
 473 01d2 01       		.byte	0x1
 474 01d3 56       		.byte	0x56
 475 01d4 00000000 		.4byte	.LFB35
 476 01d8 06000000 		.4byte	.LFE35-.LFB35
 477 01dc 01       		.uleb128 0x1
 478 01dd 9C       		.byte	0x9c
 479 01de F0010000 		.4byte	0x1f0
 480 01e2 0B       		.uleb128 0xb
 481 01e3 56010000 		.4byte	.LASF35
 482 01e7 01       		.byte	0x1
 483 01e8 56       		.byte	0x56
 484 01e9 F0010000 		.4byte	0x1f0
 485 01ed 01       		.uleb128 0x1
 486 01ee 50       		.byte	0x50
 487 01ef 00       		.byte	0
 488 01f0 0C       		.uleb128 0xc
 489 01f1 8E010000 		.4byte	0x18e
 490 01f5 0A       		.uleb128 0xa
 491 01f6 FA000000 		.4byte	.LASF36
 492 01fa 01       		.byte	0x1
 493 01fb 62       		.byte	0x62
 494 01fc 00000000 		.4byte	.LFB36
 495 0200 18000000 		.4byte	.LFE36-.LFB36
 496 0204 01       		.uleb128 0x1
 497 0205 9C       		.byte	0x9c
 498 0206 34020000 		.4byte	0x234
 499 020a 0B       		.uleb128 0xb
 500 020b C0020000 		.4byte	.LASF34
 501 020f 01       		.byte	0x1
 502 0210 62       		.byte	0x62
 503 0211 C8010000 		.4byte	0x1c8
 504 0215 01       		.uleb128 0x1
 505 0216 50       		.byte	0x50
 506 0217 0B       		.uleb128 0xb
 507 0218 D9020000 		.4byte	.LASF37
 508 021c 01       		.byte	0x1
 509 021d 63       		.byte	0x63
 510 021e F0010000 		.4byte	0x1f0
 511 0222 01       		.uleb128 0x1
 512 0223 51       		.byte	0x51
 513 0224 0D       		.uleb128 0xd
 514 0225 1E000000 		.4byte	.LASF26
 515 0229 01       		.byte	0x1
 516 022a 65       		.byte	0x65
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 14


 517 022b F0010000 		.4byte	0x1f0
 518 022f 00000000 		.4byte	.LLST0
 519 0233 00       		.byte	0
 520 0234 0A       		.uleb128 0xa
 521 0235 E7020000 		.4byte	.LASF38
 522 0239 01       		.byte	0x1
 523 023a 80       		.byte	0x80
 524 023b 00000000 		.4byte	.LFB37
 525 023f 30000000 		.4byte	.LFE37-.LFB37
 526 0243 01       		.uleb128 0x1
 527 0244 9C       		.byte	0x9c
 528 0245 82020000 		.4byte	0x282
 529 0249 0B       		.uleb128 0xb
 530 024a C0020000 		.4byte	.LASF34
 531 024e 01       		.byte	0x1
 532 024f 80       		.byte	0x80
 533 0250 C8010000 		.4byte	0x1c8
 534 0254 01       		.uleb128 0x1
 535 0255 50       		.byte	0x50
 536 0256 0B       		.uleb128 0xb
 537 0257 D9020000 		.4byte	.LASF37
 538 025b 01       		.byte	0x1
 539 025c 81       		.byte	0x81
 540 025d F0010000 		.4byte	0x1f0
 541 0261 01       		.uleb128 0x1
 542 0262 51       		.byte	0x51
 543 0263 0D       		.uleb128 0xd
 544 0264 13020000 		.4byte	.LASF39
 545 0268 01       		.byte	0x1
 546 0269 83       		.byte	0x83
 547 026a 8E010000 		.4byte	0x18e
 548 026e 13000000 		.4byte	.LLST1
 549 0272 0D       		.uleb128 0xd
 550 0273 2D010000 		.4byte	.LASF40
 551 0277 01       		.byte	0x1
 552 0278 84       		.byte	0x84
 553 0279 82020000 		.4byte	0x282
 554 027d 31000000 		.4byte	.LLST2
 555 0281 00       		.byte	0
 556 0282 0C       		.uleb128 0xc
 557 0283 B1000000 		.4byte	0xb1
 558 0287 0E       		.uleb128 0xe
 559 0288 97020000 		.4byte	.LASF41
 560 028c 01       		.byte	0x1
 561 028d C7       		.byte	0xc7
 562 028e A6000000 		.4byte	0xa6
 563 0292 00000000 		.4byte	.LFB38
 564 0296 26000000 		.4byte	.LFE38-.LFB38
 565 029a 01       		.uleb128 0x1
 566 029b 9C       		.byte	0x9c
 567 029c 0F       		.uleb128 0xf
 568 029d 99000000 		.4byte	.LASF42
 569 02a1 01       		.byte	0x1
 570 02a2 C7       		.byte	0xc7
 571 02a3 F0010000 		.4byte	0x1f0
 572 02a7 44000000 		.4byte	.LLST3
 573 02ab 10       		.uleb128 0x10
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 15


 574 02ac C0020000 		.4byte	.LASF34
 575 02b0 01       		.byte	0x1
 576 02b1 CB       		.byte	0xcb
 577 02b2 C8010000 		.4byte	0x1c8
 578 02b6 01       		.uleb128 0x1
 579 02b7 53       		.byte	0x53
 580 02b8 00       		.byte	0
 581 02b9 00       		.byte	0
 582              		.section	.debug_abbrev,"",%progbits
 583              	.Ldebug_abbrev0:
 584 0000 01       		.uleb128 0x1
 585 0001 11       		.uleb128 0x11
 586 0002 01       		.byte	0x1
 587 0003 25       		.uleb128 0x25
 588 0004 0E       		.uleb128 0xe
 589 0005 13       		.uleb128 0x13
 590 0006 0B       		.uleb128 0xb
 591 0007 03       		.uleb128 0x3
 592 0008 0E       		.uleb128 0xe
 593 0009 1B       		.uleb128 0x1b
 594 000a 0E       		.uleb128 0xe
 595 000b 55       		.uleb128 0x55
 596 000c 17       		.uleb128 0x17
 597 000d 11       		.uleb128 0x11
 598 000e 01       		.uleb128 0x1
 599 000f 10       		.uleb128 0x10
 600 0010 17       		.uleb128 0x17
 601 0011 00       		.byte	0
 602 0012 00       		.byte	0
 603 0013 02       		.uleb128 0x2
 604 0014 24       		.uleb128 0x24
 605 0015 00       		.byte	0
 606 0016 0B       		.uleb128 0xb
 607 0017 0B       		.uleb128 0xb
 608 0018 3E       		.uleb128 0x3e
 609 0019 0B       		.uleb128 0xb
 610 001a 03       		.uleb128 0x3
 611 001b 0E       		.uleb128 0xe
 612 001c 00       		.byte	0
 613 001d 00       		.byte	0
 614 001e 03       		.uleb128 0x3
 615 001f 24       		.uleb128 0x24
 616 0020 00       		.byte	0
 617 0021 0B       		.uleb128 0xb
 618 0022 0B       		.uleb128 0xb
 619 0023 3E       		.uleb128 0x3e
 620 0024 0B       		.uleb128 0xb
 621 0025 03       		.uleb128 0x3
 622 0026 08       		.uleb128 0x8
 623 0027 00       		.byte	0
 624 0028 00       		.byte	0
 625 0029 04       		.uleb128 0x4
 626 002a 16       		.uleb128 0x16
 627 002b 00       		.byte	0
 628 002c 03       		.uleb128 0x3
 629 002d 0E       		.uleb128 0xe
 630 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 16


 631 002f 0B       		.uleb128 0xb
 632 0030 3B       		.uleb128 0x3b
 633 0031 0B       		.uleb128 0xb
 634 0032 49       		.uleb128 0x49
 635 0033 13       		.uleb128 0x13
 636 0034 00       		.byte	0
 637 0035 00       		.byte	0
 638 0036 05       		.uleb128 0x5
 639 0037 0F       		.uleb128 0xf
 640 0038 00       		.byte	0
 641 0039 0B       		.uleb128 0xb
 642 003a 0B       		.uleb128 0xb
 643 003b 00       		.byte	0
 644 003c 00       		.byte	0
 645 003d 06       		.uleb128 0x6
 646 003e 13       		.uleb128 0x13
 647 003f 01       		.byte	0x1
 648 0040 03       		.uleb128 0x3
 649 0041 0E       		.uleb128 0xe
 650 0042 0B       		.uleb128 0xb
 651 0043 0B       		.uleb128 0xb
 652 0044 3A       		.uleb128 0x3a
 653 0045 0B       		.uleb128 0xb
 654 0046 3B       		.uleb128 0x3b
 655 0047 0B       		.uleb128 0xb
 656 0048 01       		.uleb128 0x1
 657 0049 13       		.uleb128 0x13
 658 004a 00       		.byte	0
 659 004b 00       		.byte	0
 660 004c 07       		.uleb128 0x7
 661 004d 0D       		.uleb128 0xd
 662 004e 00       		.byte	0
 663 004f 03       		.uleb128 0x3
 664 0050 0E       		.uleb128 0xe
 665 0051 3A       		.uleb128 0x3a
 666 0052 0B       		.uleb128 0xb
 667 0053 3B       		.uleb128 0x3b
 668 0054 0B       		.uleb128 0xb
 669 0055 49       		.uleb128 0x49
 670 0056 13       		.uleb128 0x13
 671 0057 38       		.uleb128 0x38
 672 0058 0B       		.uleb128 0xb
 673 0059 00       		.byte	0
 674 005a 00       		.byte	0
 675 005b 08       		.uleb128 0x8
 676 005c 0F       		.uleb128 0xf
 677 005d 00       		.byte	0
 678 005e 0B       		.uleb128 0xb
 679 005f 0B       		.uleb128 0xb
 680 0060 49       		.uleb128 0x49
 681 0061 13       		.uleb128 0x13
 682 0062 00       		.byte	0
 683 0063 00       		.byte	0
 684 0064 09       		.uleb128 0x9
 685 0065 35       		.uleb128 0x35
 686 0066 00       		.byte	0
 687 0067 49       		.uleb128 0x49
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 17


 688 0068 13       		.uleb128 0x13
 689 0069 00       		.byte	0
 690 006a 00       		.byte	0
 691 006b 0A       		.uleb128 0xa
 692 006c 2E       		.uleb128 0x2e
 693 006d 01       		.byte	0x1
 694 006e 3F       		.uleb128 0x3f
 695 006f 19       		.uleb128 0x19
 696 0070 03       		.uleb128 0x3
 697 0071 0E       		.uleb128 0xe
 698 0072 3A       		.uleb128 0x3a
 699 0073 0B       		.uleb128 0xb
 700 0074 3B       		.uleb128 0x3b
 701 0075 0B       		.uleb128 0xb
 702 0076 27       		.uleb128 0x27
 703 0077 19       		.uleb128 0x19
 704 0078 11       		.uleb128 0x11
 705 0079 01       		.uleb128 0x1
 706 007a 12       		.uleb128 0x12
 707 007b 06       		.uleb128 0x6
 708 007c 40       		.uleb128 0x40
 709 007d 18       		.uleb128 0x18
 710 007e 9742     		.uleb128 0x2117
 711 0080 19       		.uleb128 0x19
 712 0081 01       		.uleb128 0x1
 713 0082 13       		.uleb128 0x13
 714 0083 00       		.byte	0
 715 0084 00       		.byte	0
 716 0085 0B       		.uleb128 0xb
 717 0086 05       		.uleb128 0x5
 718 0087 00       		.byte	0
 719 0088 03       		.uleb128 0x3
 720 0089 0E       		.uleb128 0xe
 721 008a 3A       		.uleb128 0x3a
 722 008b 0B       		.uleb128 0xb
 723 008c 3B       		.uleb128 0x3b
 724 008d 0B       		.uleb128 0xb
 725 008e 49       		.uleb128 0x49
 726 008f 13       		.uleb128 0x13
 727 0090 02       		.uleb128 0x2
 728 0091 18       		.uleb128 0x18
 729 0092 00       		.byte	0
 730 0093 00       		.byte	0
 731 0094 0C       		.uleb128 0xc
 732 0095 26       		.uleb128 0x26
 733 0096 00       		.byte	0
 734 0097 49       		.uleb128 0x49
 735 0098 13       		.uleb128 0x13
 736 0099 00       		.byte	0
 737 009a 00       		.byte	0
 738 009b 0D       		.uleb128 0xd
 739 009c 34       		.uleb128 0x34
 740 009d 00       		.byte	0
 741 009e 03       		.uleb128 0x3
 742 009f 0E       		.uleb128 0xe
 743 00a0 3A       		.uleb128 0x3a
 744 00a1 0B       		.uleb128 0xb
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 18


 745 00a2 3B       		.uleb128 0x3b
 746 00a3 0B       		.uleb128 0xb
 747 00a4 49       		.uleb128 0x49
 748 00a5 13       		.uleb128 0x13
 749 00a6 02       		.uleb128 0x2
 750 00a7 17       		.uleb128 0x17
 751 00a8 00       		.byte	0
 752 00a9 00       		.byte	0
 753 00aa 0E       		.uleb128 0xe
 754 00ab 2E       		.uleb128 0x2e
 755 00ac 01       		.byte	0x1
 756 00ad 3F       		.uleb128 0x3f
 757 00ae 19       		.uleb128 0x19
 758 00af 03       		.uleb128 0x3
 759 00b0 0E       		.uleb128 0xe
 760 00b1 3A       		.uleb128 0x3a
 761 00b2 0B       		.uleb128 0xb
 762 00b3 3B       		.uleb128 0x3b
 763 00b4 0B       		.uleb128 0xb
 764 00b5 27       		.uleb128 0x27
 765 00b6 19       		.uleb128 0x19
 766 00b7 49       		.uleb128 0x49
 767 00b8 13       		.uleb128 0x13
 768 00b9 11       		.uleb128 0x11
 769 00ba 01       		.uleb128 0x1
 770 00bb 12       		.uleb128 0x12
 771 00bc 06       		.uleb128 0x6
 772 00bd 40       		.uleb128 0x40
 773 00be 18       		.uleb128 0x18
 774 00bf 9742     		.uleb128 0x2117
 775 00c1 19       		.uleb128 0x19
 776 00c2 00       		.byte	0
 777 00c3 00       		.byte	0
 778 00c4 0F       		.uleb128 0xf
 779 00c5 05       		.uleb128 0x5
 780 00c6 00       		.byte	0
 781 00c7 03       		.uleb128 0x3
 782 00c8 0E       		.uleb128 0xe
 783 00c9 3A       		.uleb128 0x3a
 784 00ca 0B       		.uleb128 0xb
 785 00cb 3B       		.uleb128 0x3b
 786 00cc 0B       		.uleb128 0xb
 787 00cd 49       		.uleb128 0x49
 788 00ce 13       		.uleb128 0x13
 789 00cf 02       		.uleb128 0x2
 790 00d0 17       		.uleb128 0x17
 791 00d1 00       		.byte	0
 792 00d2 00       		.byte	0
 793 00d3 10       		.uleb128 0x10
 794 00d4 34       		.uleb128 0x34
 795 00d5 00       		.byte	0
 796 00d6 03       		.uleb128 0x3
 797 00d7 0E       		.uleb128 0xe
 798 00d8 3A       		.uleb128 0x3a
 799 00d9 0B       		.uleb128 0xb
 800 00da 3B       		.uleb128 0x3b
 801 00db 0B       		.uleb128 0xb
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 19


 802 00dc 49       		.uleb128 0x49
 803 00dd 13       		.uleb128 0x13
 804 00de 02       		.uleb128 0x2
 805 00df 18       		.uleb128 0x18
 806 00e0 00       		.byte	0
 807 00e1 00       		.byte	0
 808 00e2 00       		.byte	0
 809              		.section	.debug_loc,"",%progbits
 810              	.Ldebug_loc0:
 811              	.LLST0:
 812 0000 02000000 		.4byte	.LVL3
 813 0004 12000000 		.4byte	.LVL4
 814 0008 0100     		.2byte	0x1
 815 000a 53       		.byte	0x53
 816 000b 00000000 		.4byte	0
 817 000f 00000000 		.4byte	0
 818              	.LLST1:
 819 0013 0A000000 		.4byte	.LVL7
 820 0017 0C000000 		.4byte	.LVL8
 821 001b 0100     		.2byte	0x1
 822 001d 52       		.byte	0x52
 823 001e 10000000 		.4byte	.LVL9
 824 0022 30000000 		.4byte	.LFE37
 825 0026 0100     		.2byte	0x1
 826 0028 52       		.byte	0x52
 827 0029 00000000 		.4byte	0
 828 002d 00000000 		.4byte	0
 829              	.LLST2:
 830 0031 04000000 		.4byte	.LVL6
 831 0035 2E000000 		.4byte	.LVL11
 832 0039 0100     		.2byte	0x1
 833 003b 54       		.byte	0x54
 834 003c 00000000 		.4byte	0
 835 0040 00000000 		.4byte	0
 836              	.LLST3:
 837 0044 00000000 		.4byte	.LVL12
 838 0048 24000000 		.4byte	.LVL14
 839 004c 0100     		.2byte	0x1
 840 004e 50       		.byte	0x50
 841 004f 24000000 		.4byte	.LVL14
 842 0053 26000000 		.4byte	.LFE38
 843 0057 0400     		.2byte	0x4
 844 0059 F3       		.byte	0xf3
 845 005a 01       		.uleb128 0x1
 846 005b 50       		.byte	0x50
 847 005c 9F       		.byte	0x9f
 848 005d 00000000 		.4byte	0
 849 0061 00000000 		.4byte	0
 850              		.section	.debug_aranges,"",%progbits
 851 0000 3C000000 		.4byte	0x3c
 852 0004 0200     		.2byte	0x2
 853 0006 00000000 		.4byte	.Ldebug_info0
 854 000a 04       		.byte	0x4
 855 000b 00       		.byte	0
 856 000c 0000     		.2byte	0
 857 000e 0000     		.2byte	0
 858 0010 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 20


 859 0014 16000000 		.4byte	.LFE34-.LFB34
 860 0018 00000000 		.4byte	.LFB35
 861 001c 06000000 		.4byte	.LFE35-.LFB35
 862 0020 00000000 		.4byte	.LFB36
 863 0024 18000000 		.4byte	.LFE36-.LFB36
 864 0028 00000000 		.4byte	.LFB37
 865 002c 30000000 		.4byte	.LFE37-.LFB37
 866 0030 00000000 		.4byte	.LFB38
 867 0034 26000000 		.4byte	.LFE38-.LFB38
 868 0038 00000000 		.4byte	0
 869 003c 00000000 		.4byte	0
 870              		.section	.debug_ranges,"",%progbits
 871              	.Ldebug_ranges0:
 872 0000 00000000 		.4byte	.LFB34
 873 0004 16000000 		.4byte	.LFE34
 874 0008 00000000 		.4byte	.LFB35
 875 000c 06000000 		.4byte	.LFE35
 876 0010 00000000 		.4byte	.LFB36
 877 0014 18000000 		.4byte	.LFE36
 878 0018 00000000 		.4byte	.LFB37
 879 001c 30000000 		.4byte	.LFE37
 880 0020 00000000 		.4byte	.LFB38
 881 0024 26000000 		.4byte	.LFE38
 882 0028 00000000 		.4byte	0
 883 002c 00000000 		.4byte	0
 884              		.section	.debug_line,"",%progbits
 885              	.Ldebug_line0:
 886 0000 DE010000 		.section	.debug_str,"MS",%progbits,1
 886      02005601 
 886      00000201 
 886      FB0E0D00 
 886      01010101 
 887              	.LASF21:
 888 0000 70764F77 		.ascii	"pvOwner\000"
 888      6E657200 
 889              	.LASF17:
 890 0008 5469636B 		.ascii	"TickType_t\000"
 890      54797065 
 890      5F7400
 891              	.LASF28:
 892 0013 4C697374 		.ascii	"ListItem_t\000"
 892      4974656D 
 892      5F7400
 893              	.LASF26:
 894 001e 7078496E 		.ascii	"pxIndex\000"
 894      64657800 
 895              	.LASF30:
 896 0026 4D696E69 		.ascii	"MiniListItem_t\000"
 896      4C697374 
 896      4974656D 
 896      5F7400
 897              	.LASF18:
 898 0035 78497465 		.ascii	"xItemValue\000"
 898      6D56616C 
 898      756500
 899              	.LASF6:
 900 0040 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 21


 900      7420756E 
 900      7369676E 
 900      65642069 
 900      6E7400
 901              	.LASF27:
 902 0053 784C6973 		.ascii	"xListEnd\000"
 902      74456E64 
 902      00
 903              	.LASF22:
 904 005c 7076436F 		.ascii	"pvContainer\000"
 904      6E746169 
 904      6E657200 
 905              	.LASF23:
 906 0068 784C4953 		.ascii	"xLIST_ITEM\000"
 906      545F4954 
 906      454D00
 907              	.LASF14:
 908 0073 666C6F61 		.ascii	"float\000"
 908      7400
 909              	.LASF4:
 910 0079 756E7369 		.ascii	"unsigned char\000"
 910      676E6564 
 910      20636861 
 910      7200
 911              	.LASF8:
 912 0087 6C6F6E67 		.ascii	"long unsigned int\000"
 912      20756E73 
 912      69676E65 
 912      6420696E 
 912      7400
 913              	.LASF42:
 914 0099 70784974 		.ascii	"pxItemToRemove\000"
 914      656D546F 
 914      52656D6F 
 914      766500
 915              	.LASF20:
 916 00a8 70785072 		.ascii	"pxPrevious\000"
 916      6576696F 
 916      757300
 917              	.LASF12:
 918 00b3 5F5F7569 		.ascii	"__uint32_t\000"
 918      6E743332 
 918      5F7400
 919              	.LASF33:
 920 00be 764C6973 		.ascii	"vListInitialiseItem\000"
 920      74496E69 
 920      7469616C 
 920      69736549 
 920      74656D00 
 921              	.LASF31:
 922 00d2 4C697374 		.ascii	"List_t\000"
 922      5F7400
 923              	.LASF15:
 924 00d9 646F7562 		.ascii	"double\000"
 924      6C6500
 925              	.LASF5:
 926 00e0 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 22


 926      7420696E 
 926      7400
 927              	.LASF25:
 928 00ea 75784E75 		.ascii	"uxNumberOfItems\000"
 928      6D626572 
 928      4F664974 
 928      656D7300 
 929              	.LASF36:
 930 00fa 764C6973 		.ascii	"vListInsertEnd\000"
 930      74496E73 
 930      65727445 
 930      6E6400
 931              	.LASF19:
 932 0109 70784E65 		.ascii	"pxNext\000"
 932      787400
 933              	.LASF0:
 934 0110 756E7369 		.ascii	"unsigned int\000"
 934      676E6564 
 934      20696E74 
 934      00
 935              	.LASF32:
 936 011d 764C6973 		.ascii	"vListInitialise\000"
 936      74496E69 
 936      7469616C 
 936      69736500 
 937              	.LASF40:
 938 012d 7856616C 		.ascii	"xValueOfInsertion\000"
 938      75654F66 
 938      496E7365 
 938      7274696F 
 938      6E00
 939              	.LASF9:
 940 013f 6C6F6E67 		.ascii	"long long unsigned int\000"
 940      206C6F6E 
 940      6720756E 
 940      7369676E 
 940      65642069 
 941              	.LASF35:
 942 0156 70784974 		.ascii	"pxItem\000"
 942      656D00
 943              	.LASF43:
 944 015d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 944      43313120 
 944      352E342E 
 944      31203230 
 944      31363036 
 945 0190 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 945      20726576 
 945      6973696F 
 945      6E203233 
 945      37373135 
 946 01c3 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 946      66756E63 
 946      74696F6E 
 946      2D736563 
 946      74696F6E 
 947              	.LASF2:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 23


 948 01eb 6C6F6E67 		.ascii	"long double\000"
 948      20646F75 
 948      626C6500 
 949              	.LASF10:
 950 01f7 73697A65 		.ascii	"sizetype\000"
 950      74797065 
 950      00
 951              	.LASF1:
 952 0200 6C6F6E67 		.ascii	"long long int\000"
 952      206C6F6E 
 952      6720696E 
 952      7400
 953              	.LASF11:
 954 020e 63686172 		.ascii	"char\000"
 954      00
 955              	.LASF39:
 956 0213 70784974 		.ascii	"pxIterator\000"
 956      65726174 
 956      6F7200
 957              	.LASF44:
 958 021e 46726565 		.ascii	"FreeRTOS\\Source\\list.c\000"
 958      52544F53 
 958      5C536F75 
 958      7263655C 
 958      6C697374 
 959              	.LASF45:
 960 0235 433A5C55 		.ascii	"C:\\Users\\tyork\\Documents\\PSoC Creator\\ECE381_S"
 960      73657273 
 960      5C74796F 
 960      726B5C44 
 960      6F63756D 
 961 0263 5032335F 		.ascii	"P23_Lab08_FreeRTOS\\Design01.cydsn\000"
 961      4C616230 
 961      385F4672 
 961      65655254 
 961      4F535C44 
 962              	.LASF13:
 963 0285 75696E74 		.ascii	"uint32_t\000"
 963      33325F74 
 963      00
 964              	.LASF7:
 965 028e 6C6F6E67 		.ascii	"long int\000"
 965      20696E74 
 965      00
 966              	.LASF41:
 967 0297 75784C69 		.ascii	"uxListRemove\000"
 967      73745265 
 967      6D6F7665 
 967      00
 968              	.LASF29:
 969 02a4 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 969      495F4C49 
 969      53545F49 
 969      54454D00 
 970              	.LASF3:
 971 02b4 7369676E 		.ascii	"signed char\000"
 971      65642063 
ARM GAS  C:\Users\tyork\AppData\Local\Temp\cc48hS3M.s 			page 24


 971      68617200 
 972              	.LASF34:
 973 02c0 70784C69 		.ascii	"pxList\000"
 973      737400
 974              	.LASF24:
 975 02c7 784C4953 		.ascii	"xLIST\000"
 975      5400
 976              	.LASF16:
 977 02cd 55426173 		.ascii	"UBaseType_t\000"
 977      65547970 
 977      655F7400 
 978              	.LASF37:
 979 02d9 70784E65 		.ascii	"pxNewListItem\000"
 979      774C6973 
 979      74497465 
 979      6D00
 980              	.LASF38:
 981 02e7 764C6973 		.ascii	"vListInsert\000"
 981      74496E73 
 981      65727400 
 982              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
