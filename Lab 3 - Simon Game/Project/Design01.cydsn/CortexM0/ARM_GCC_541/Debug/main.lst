ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.poll_button,"ax",%progbits
  20              		.align	2
  21              		.global	poll_button
  22              		.code	16
  23              		.thumb_func
  24              		.type	poll_button, %function
  25              	poll_button:
  26              	.LFB34:
  27              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include "project.h"
  13:main.c        **** 
  14:main.c        **** static const int ROUNDS = 20;
  15:main.c        **** volatile int timeout, pressed;
  16:main.c        **** 
  17:main.c        **** // This function implements a non-blocking polling loop.
  18:main.c        **** // If neither of the buttons is pressed, it should return 0,
  19:main.c        **** // otherwise it should return a value that corresponds
  20:main.c        **** // to one of the colored buttons. To be consistent, this
  21:main.c        **** // should match the color used in the sequence
  22:main.c        **** int poll_button()
  23:main.c        **** {
  28              		.loc 1 23 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  24:main.c        ****     int button = 0;
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 2


  25:main.c        ****     
  26:main.c        ****     // XXX: Polling loop for button goes here
  27:main.c        ****     
  28:main.c        ****     return button;
  29:main.c        **** }
  34              		.loc 1 29 0
  35 0000 0020     		movs	r0, #0
  36              		@ sp needed
  37 0002 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE34:
  40              		.size	poll_button, .-poll_button
  41              		.section	.text.play_color,"ax",%progbits
  42              		.align	2
  43              		.global	play_color
  44              		.code	16
  45              		.thumb_func
  46              		.type	play_color, %function
  47              	play_color:
  48              	.LFB35:
  30:main.c        **** 
  31:main.c        **** // The play color function illuminates an led
  32:main.c        **** // using a PWM at a duty cycle given by dc for
  33:main.c        **** // a number of milliseconds equal to delay and
  34:main.c        **** // plays the correpsonding note.
  35:main.c        **** //
  36:main.c        **** //  INPUTS:
  37:main.c        **** //      color (int): A mapping to determine the
  38:main.c        **** //                   LED to play.
  39:main.c        **** //                  Suggested Colors and Notes are
  40:main.c        **** //                  0: Red (310 Hz)
  41:main.c        **** //                  1: Green (415 Hz)
  42:main.c        **** //                  2: Blue (209 Hz)
  43:main.c        **** //                  3: Yellow (252 Hz)
  44:main.c        **** //
  45:main.c        **** //      dc (int): The duty cycle of the chosen LED's
  46:main.c        **** //                PWM. Only numbers 0-100 should be
  47:main.c        **** //                valid.
  48:main.c        **** //
  49:main.c        **** //      delay (uint32): How long to play the LED and
  50:main.c        **** //                      note, in milliseconds
  51:main.c        **** 
  52:main.c        **** void play_color(int color, int dc, uint32 delay)
  53:main.c        **** {
  49              		.loc 1 53 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.LVL1:
  54:main.c        ****     
  55:main.c        **** }
  55              		.loc 1 55 0
  56              		@ sp needed
  57 0000 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE35:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 3


  60              		.size	play_color, .-play_color
  61 0002 C046     		.section	.text.play_start,"ax",%progbits
  62              		.align	2
  63              		.global	play_start
  64              		.code	16
  65              		.thumb_func
  66              		.type	play_start, %function
  67              	play_start:
  68              	.LFB36:
  56:main.c        **** 
  57:main.c        **** // This should play the start sequence of Simon, which is
  58:main.c        **** // to turn all 4 LEDs on and play a 600Hz tone for 500 ms,
  59:main.c        **** // then turn them off for 500ms, then repeat 2 more times
  60:main.c        **** void play_start()
  61:main.c        **** {
  69              		.loc 1 61 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  62:main.c        ****     
  63:main.c        **** }
  74              		.loc 1 63 0
  75              		@ sp needed
  76 0000 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE36:
  79              		.size	play_start, .-play_start
  80 0002 C046     		.section	.text.play_fail,"ax",%progbits
  81              		.align	2
  82              		.global	play_fail
  83              		.code	16
  84              		.thumb_func
  85              		.type	play_fail, %function
  86              	play_fail:
  87              	.LFB37:
  64:main.c        **** 
  65:main.c        **** // This should play the fail sequence, which is to turn on
  66:main.c        **** // all 4 LEDs and play a 42Hz tone for 1.5 seconds
  67:main.c        **** void play_fail()
  68:main.c        **** {
  88              		.loc 1 68 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  69:main.c        ****     
  70:main.c        **** }
  93              		.loc 1 70 0
  94              		@ sp needed
  95 0000 7047     		bx	lr
  96              		.cfi_endproc
  97              	.LFE37:
  98              		.size	play_fail, .-play_fail
  99 0002 C046     		.section	.text.play_win,"ax",%progbits
 100              		.align	2
 101              		.global	play_win
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 4


 102              		.code	16
 103              		.thumb_func
 104              		.type	play_win, %function
 105              	play_win:
 106              	.LFB38:
  71:main.c        **** 
  72:main.c        **** // This should play back the victory sequence. In the original
  73:main.c        **** // Simon, that plays:
  74:main.c        **** // R, Y, B, G in sequence 0.1s apart, 3 times
  75:main.c        **** // then RY, 
  76:main.c        **** // then play failure tone for 0.8s, while the lights then
  77:main.c        **** // continually flash R Y B G 0.1s apart.
  78:main.c        **** //
  79:main.c        **** // You can implement whatever victory sequence you want if
  80:main.c        **** // you don't feel like doing the original one.
  81:main.c        **** void play_win()
  82:main.c        **** {
 107              		.loc 1 82 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
  83:main.c        ****     
  84:main.c        **** }
 112              		.loc 1 84 0
 113              		@ sp needed
 114 0000 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE38:
 117              		.size	play_win, .-play_win
 118 0002 C046     		.section	.text.main,"ax",%progbits
 119              		.align	2
 120              		.global	main
 121              		.code	16
 122              		.thumb_func
 123              		.type	main, %function
 124              	main:
 125              	.LFB39:
  85:main.c        **** 
  86:main.c        **** int main(void)
  87:main.c        **** {
 126              		.loc 1 87 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 80
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130 0000 70B5     		push	{r4, r5, r6, lr}
 131              		.cfi_def_cfa_offset 16
 132              		.cfi_offset 4, -16
 133              		.cfi_offset 5, -12
 134              		.cfi_offset 6, -8
 135              		.cfi_offset 14, -4
 136 0002 94B0     		sub	sp, sp, #80
 137              		.cfi_def_cfa_offset 96
  88:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 138              		.loc 1 88 0
 139              		.syntax divided
 140              	@ 88 "main.c" 1
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 5


 141 0004 62B6     		CPSIE   i
 142              	@ 0 "" 2
 143              	.LVL2:
  89:main.c        ****     
  90:main.c        ****     /* Variables */
  91:main.c        ****     int ix = 0, num_correct = 0, errors = 0, seq_ctr = 0;
  92:main.c        ****     int simon_sequence[ROUNDS];
  93:main.c        **** 
  94:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  95:main.c        ****     PRS_Start();
 144              		.loc 1 95 0
 145              		.thumb
 146              		.syntax unified
 147 0006 FFF7FEFF 		bl	PRS_Start
 148              	.LVL3:
  96:main.c        ****     SPEAKER_PWM_Start();
 149              		.loc 1 96 0
 150 000a FFF7FEFF 		bl	SPEAKER_PWM_Start
 151              	.LVL4:
  97:main.c        ****     SPEAKER_PWM_Stop();
 152              		.loc 1 97 0
 153 000e FFF7FEFF 		bl	SPEAKER_PWM_Stop
 154              	.LVL5:
  98:main.c        ****     LED_PWM_Start();
 155              		.loc 1 98 0
 156 0012 FFF7FEFF 		bl	LED_PWM_Start
 157              	.LVL6:
  99:main.c        ****     LED_PWM_Stop();
 158              		.loc 1 99 0
 159 0016 FFF7FEFF 		bl	LED_PWM_Stop
 160              	.LVL7:
 100:main.c        ****     INPUT_TIMER_Start();
 161              		.loc 1 100 0
 162 001a FFF7FEFF 		bl	INPUT_TIMER_Start
 163              	.LVL8:
 101:main.c        ****     INPUT_TIMER_Stop();
 164              		.loc 1 101 0
 165 001e FFF7FEFF 		bl	INPUT_TIMER_Stop
 166              	.LVL9:
 102:main.c        ****     INPUT_TIMER_ISR_Start();
 167              		.loc 1 102 0
 168 0022 FFF7FEFF 		bl	INPUT_TIMER_ISR_Start
 169              	.LVL10:
 170              	.L7:
 103:main.c        **** 
 104:main.c        ****     for(;;)
 105:main.c        ****     {
 106:main.c        ****         /* Place your application code here. */
 107:main.c        ****         
 108:main.c        ****         // Wait for any button press  
 109:main.c        ****         while (poll_button() == 0);
 171              		.loc 1 109 0 discriminator 1
 172 0026 FFF7FEFF 		bl	poll_button
 173              	.LVL11:
 174 002a 041E     		subs	r4, r0, #0
 175 002c FBD0     		beq	.L7
 176 002e 0125     		movs	r5, #1
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 6


 177 0030 0026     		movs	r6, #0
 178 0032 30E0     		b	.L8
 179              	.LVL12:
 180              	.L9:
 110:main.c        ****         
 111:main.c        ****         // Play the start sequence
 112:main.c        ****         play_start();
 113:main.c        ****         
 114:main.c        ****         // XXX: Generate random sequnce of 20 rounds. Store it
 115:main.c        ****         // in simon_sequence
 116:main.c        ****         
 117:main.c        ****         
 118:main.c        ****         // Zero the sequence counter. We use this variable to keep
 119:main.c        ****         // track of how far along we are in the game        
 120:main.c        ****         seq_ctr = 1;
 121:main.c        ****         
 122:main.c        ****         // These variables keep track of how many are correct each round and
 123:main.c        ****         // if any errors are input.
 124:main.c        ****         num_correct = 0, errors = 0;
 125:main.c        **** 
 126:main.c        ****         // Start the counter at 1 (Why not zero? Due to the nature of
 127:main.c        ****         // for loops bounds checking! See below)
 128:main.c        ****         seq_ctr = 1;        
 129:main.c        ****         
 130:main.c        ****         
 131:main.c        ****         // The main game begins here. As long as there are no errors,
 132:main.c        ****         // and we haven't gone through all rounds, we are stuck in here        
 133:main.c        ****         while (seq_ctr < ROUNDS + 1 && errors == 0)
 134:main.c        ****         {
 135:main.c        ****             
 136:main.c        ****             // For each round of the game, we start with having no
 137:main.c        ****             // correct buttons pressed            
 138:main.c        ****             num_correct = 0;
 139:main.c        ****             
 140:main.c        ****             // XXX: Playback current sequence. The LED should get
 141:main.c        ****             // progressively dimmer for each color in the sequence
 142:main.c        ****             for (ix = 0; ix < seq_ctr; ix++)
 181              		.loc 1 142 0 discriminator 3
 182 0034 0133     		adds	r3, r3, #1
 183              	.LVL13:
 184 0036 00E0     		b	.L18
 185              	.LVL14:
 186              	.L21:
 187 0038 0023     		movs	r3, #0
 188              	.L18:
 189              	.LVL15:
 190              		.loc 1 142 0 is_stmt 0 discriminator 1
 191 003a AB42     		cmp	r3, r5
 192 003c FADB     		blt	.L9
 193 003e 0022     		movs	r2, #0
 194 0040 1CE0     		b	.L10
 195              	.LVL16:
 196              	.L15:
 143:main.c        ****             {
 144:main.c        ****                 
 145:main.c        ****             }
 146:main.c        ****             
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 7


 147:main.c        ****             // Since seq_ctr keeps track of the current number we have
 148:main.c        ****             // gotten correct so far, for each round we have to keep looping
 149:main.c        ****             // until we get all correct (or break if an error)
 150:main.c        ****             while (num_correct < seq_ctr)
 151:main.c        ****             {
 152:main.c        ****                 // Pressed keeps track of the current (if any) button that
 153:main.c        ****                 // was pressed. Timeout starts at 0 and gets set from
 154:main.c        ****                 // INPUT_TIMER_ISR if a button hasn't been pressed in
 155:main.c        ****                 // 3s
 156:main.c        ****                 pressed = 0;
 197              		.loc 1 156 0 is_stmt 1
 198 0042 0023     		movs	r3, #0
 199 0044 1649     		ldr	r1, .L22
 200 0046 0B60     		str	r3, [r1]
 157:main.c        ****                 timeout = 0;      
 201              		.loc 1 157 0
 202 0048 1649     		ldr	r1, .L22+4
 203 004a 0B60     		str	r3, [r1]
 158:main.c        ****                 
 159:main.c        ****                 // This is the main input loop. When poll_button returns
 160:main.c        ****                 // something non-zero, that means a button is pressed.
 161:main.c        ****                 // If timeout gets set to 1, that means 3s have elapsed
 162:main.c        ****                 // without a button press
 163:main.c        ****                 while(pressed == 0 && timeout == 0)
 204              		.loc 1 163 0
 205 004c 01E0     		b	.L11
 206              	.L13:
 164:main.c        ****                 {
 165:main.c        ****                     pressed = poll_button();
 207              		.loc 1 165 0
 208 004e 144B     		ldr	r3, .L22
 209 0050 1C60     		str	r4, [r3]
 210              	.L11:
 163:main.c        ****                 {
 211              		.loc 1 163 0
 212 0052 134B     		ldr	r3, .L22
 213 0054 1B68     		ldr	r3, [r3]
 214 0056 002B     		cmp	r3, #0
 215 0058 03D1     		bne	.L12
 163:main.c        ****                 {
 216              		.loc 1 163 0 is_stmt 0 discriminator 1
 217 005a 124B     		ldr	r3, .L22+4
 218 005c 1B68     		ldr	r3, [r3]
 219 005e 002B     		cmp	r3, #0
 220 0060 F5D0     		beq	.L13
 221              	.L12:
 166:main.c        ****                 }                
 167:main.c        ****                 
 168:main.c        ****                 // If the main input loop breaks due a timeout, then 
 169:main.c        ****                 if (timeout == 1)
 222              		.loc 1 169 0 is_stmt 1
 223 0062 104B     		ldr	r3, .L22+4
 224 0064 1B68     		ldr	r3, [r3]
 225 0066 012B     		cmp	r3, #1
 226 0068 0BD0     		beq	.L19
 170:main.c        ****                 {
 171:main.c        ****                     // Play the fail sequence
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 8


 172:main.c        ****                     play_fail();
 173:main.c        **** 
 174:main.c        ****                     // Set the error counter
 175:main.c        ****                     errors = 1;
 176:main.c        **** 
 177:main.c        ****                     // Break out of the loop for the current round.
 178:main.c        ****                     // This combined with setting errors should get
 179:main.c        ****                     // back to start of the gam
 180:main.c        ****                     break;
 181:main.c        ****                 }
 182:main.c        ****                 // otherwise, the main input loop broke due to a button press.
 183:main.c        ****                 else
 184:main.c        ****                 {
 185:main.c        ****                     // Whether right or wrong, playback the correct color
 186:main.c        ****                     play_color(pressed, (100/ROUNDS)*(ROUNDS - seq_ctr + 1), 420);
 227              		.loc 1 186 0
 228 006a 0D49     		ldr	r1, .L22
 229 006c 0B68     		ldr	r3, [r1]
 187:main.c        **** 
 188:main.c        ****                     // Check here to see pressed button is correct
 189:main.c        ****                     if (pressed == simon_sequence[num_correct])
 230              		.loc 1 189 0
 231 006e 9300     		lsls	r3, r2, #2
 232 0070 6846     		mov	r0, sp
 233 0072 1858     		ldr	r0, [r3, r0]
 234 0074 0B68     		ldr	r3, [r1]
 235 0076 9842     		cmp	r0, r3
 236 0078 05D1     		bne	.L20
 190:main.c        ****                     {
 191:main.c        ****                         // Increment the number of correctly input
 192:main.c        ****                         // buttons for the sequence
 193:main.c        ****                         num_correct++;
 237              		.loc 1 193 0
 238 007a 0132     		adds	r2, r2, #1
 239              	.LVL17:
 240              	.L10:
 150:main.c        ****             {
 241              		.loc 1 150 0
 242 007c AA42     		cmp	r2, r5
 243 007e E0DB     		blt	.L15
 244 0080 02E0     		b	.L14
 245              	.L19:
 175:main.c        **** 
 246              		.loc 1 175 0
 247 0082 0126     		movs	r6, #1
 248              	.LVL18:
 249 0084 00E0     		b	.L14
 250              	.LVL19:
 251              	.L20:
 194:main.c        ****                     }
 195:main.c        ****                     // Otherwise, the button pressed didn't match the current sequence color
 196:main.c        ****                     else
 197:main.c        ****                     {
 198:main.c        ****                         // Play the fail sequence
 199:main.c        ****                         play_fail();
 200:main.c        **** 
 201:main.c        ****                         // Set the error counter
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 9


 202:main.c        ****                         errors = 1;
 252              		.loc 1 202 0
 253 0086 0126     		movs	r6, #1
 254              	.LVL20:
 255              	.L14:
 203:main.c        **** 
 204:main.c        ****                         // Break out of the loop for the current round.
 205:main.c        ****                         // This combined with setting errors should get
 206:main.c        ****                         // back to start of the game
 207:main.c        ****                         break;
 208:main.c        ****                     }
 209:main.c        ****                 }                
 210:main.c        ****                 
 211:main.c        ****             }
 212:main.c        ****             
 213:main.c        ****             // If we get here, all the buttons entered for the current round
 214:main.c        ****             // matched the sequence! We can increment the sequence counter
 215:main.c        ****             // and go on to the next round. The original Simon delayed 0.8s
 216:main.c        ****             // between rounds.
 217:main.c        ****             if (errors == 0)
 256              		.loc 1 217 0
 257 0088 002E     		cmp	r6, #0
 258 008a 04D1     		bne	.L8
 218:main.c        ****             {
 219:main.c        ****                 seq_ctr++;
 259              		.loc 1 219 0
 260 008c 0135     		adds	r5, r5, #1
 261              	.LVL21:
 220:main.c        ****                 CyDelay(800);
 262              		.loc 1 220 0
 263 008e C820     		movs	r0, #200
 264 0090 8000     		lsls	r0, r0, #2
 265 0092 FFF7FEFF 		bl	CyDelay
 266              	.LVL22:
 267              	.L8:
 133:main.c        ****         {
 268              		.loc 1 133 0
 269 0096 142D     		cmp	r5, #20
 270 0098 C5DC     		bgt	.L7
 133:main.c        ****         {
 271              		.loc 1 133 0 is_stmt 0 discriminator 1
 272 009a 002E     		cmp	r6, #0
 273 009c CCD0     		beq	.L21
 274 009e C2E7     		b	.L7
 275              	.L23:
 276              		.align	2
 277              	.L22:
 278 00a0 00000000 		.word	pressed
 279 00a4 00000000 		.word	timeout
 280              		.cfi_endproc
 281              	.LFE39:
 282              		.size	main, .-main
 283              		.comm	pressed,4,4
 284              		.comm	timeout,4,4
 285              		.text
 286              	.Letext0:
 287              		.file 2 "Generated_Source\\PSoC4/PRS.h"
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 10


 288              		.file 3 "Generated_Source\\PSoC4/SPEAKER_PWM.h"
 289              		.file 4 "Generated_Source\\PSoC4/LED_PWM.h"
 290              		.file 5 "Generated_Source\\PSoC4/INPUT_TIMER.h"
 291              		.file 6 "Generated_Source\\PSoC4/INPUT_TIMER_ISR.h"
 292              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 293              		.file 8 "Generated_Source\\PSoC4/cytypes.h"
 294              		.section	.debug_info,"",%progbits
 295              	.Ldebug_info0:
 296 0000 A3020000 		.4byte	0x2a3
 297 0004 0400     		.2byte	0x4
 298 0006 00000000 		.4byte	.Ldebug_abbrev0
 299 000a 04       		.byte	0x4
 300 000b 01       		.uleb128 0x1
 301 000c 1E010000 		.4byte	.LASF38
 302 0010 0C       		.byte	0xc
 303 0011 16020000 		.4byte	.LASF39
 304 0015 AC010000 		.4byte	.LASF40
 305 0019 00000000 		.4byte	.Ldebug_ranges0+0
 306 001d 00000000 		.4byte	0
 307 0021 00000000 		.4byte	.Ldebug_line0
 308 0025 02       		.uleb128 0x2
 309 0026 01       		.byte	0x1
 310 0027 06       		.byte	0x6
 311 0028 8A020000 		.4byte	.LASF0
 312 002c 02       		.uleb128 0x2
 313 002d 01       		.byte	0x1
 314 002e 08       		.byte	0x8
 315 002f 1E000000 		.4byte	.LASF1
 316 0033 02       		.uleb128 0x2
 317 0034 02       		.byte	0x2
 318 0035 05       		.byte	0x5
 319 0036 A0000000 		.4byte	.LASF2
 320 003a 02       		.uleb128 0x2
 321 003b 02       		.byte	0x2
 322 003c 07       		.byte	0x7
 323 003d 52000000 		.4byte	.LASF3
 324 0041 02       		.uleb128 0x2
 325 0042 04       		.byte	0x4
 326 0043 05       		.byte	0x5
 327 0044 69020000 		.4byte	.LASF4
 328 0048 02       		.uleb128 0x2
 329 0049 04       		.byte	0x4
 330 004a 07       		.byte	0x7
 331 004b 0C010000 		.4byte	.LASF5
 332 004f 02       		.uleb128 0x2
 333 0050 08       		.byte	0x8
 334 0051 05       		.byte	0x5
 335 0052 08020000 		.4byte	.LASF6
 336 0056 02       		.uleb128 0x2
 337 0057 08       		.byte	0x8
 338 0058 07       		.byte	0x7
 339 0059 F5000000 		.4byte	.LASF7
 340 005d 03       		.uleb128 0x3
 341 005e 04       		.byte	0x4
 342 005f 05       		.byte	0x5
 343 0060 696E7400 		.ascii	"int\000"
 344 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 11


 345 0065 04       		.byte	0x4
 346 0066 07       		.byte	0x7
 347 0067 E8000000 		.4byte	.LASF8
 348 006b 04       		.uleb128 0x4
 349 006c D5000000 		.4byte	.LASF41
 350 0070 08       		.byte	0x8
 351 0071 FE01     		.2byte	0x1fe
 352 0073 48000000 		.4byte	0x48
 353 0077 02       		.uleb128 0x2
 354 0078 04       		.byte	0x4
 355 0079 04       		.byte	0x4
 356 007a 12000000 		.4byte	.LASF9
 357 007e 02       		.uleb128 0x2
 358 007f 08       		.byte	0x8
 359 0080 04       		.byte	0x4
 360 0081 88000000 		.4byte	.LASF10
 361 0085 02       		.uleb128 0x2
 362 0086 01       		.byte	0x1
 363 0087 08       		.byte	0x8
 364 0088 72020000 		.4byte	.LASF11
 365 008c 02       		.uleb128 0x2
 366 008d 08       		.byte	0x8
 367 008e 04       		.byte	0x4
 368 008f 7E020000 		.4byte	.LASF12
 369 0093 02       		.uleb128 0x2
 370 0094 04       		.byte	0x4
 371 0095 07       		.byte	0x7
 372 0096 FF010000 		.4byte	.LASF13
 373 009a 05       		.uleb128 0x5
 374 009b 9D020000 		.4byte	.LASF14
 375 009f 01       		.byte	0x1
 376 00a0 16       		.byte	0x16
 377 00a1 5D000000 		.4byte	0x5d
 378 00a5 00000000 		.4byte	.LFB34
 379 00a9 04000000 		.4byte	.LFE34-.LFB34
 380 00ad 01       		.uleb128 0x1
 381 00ae 9C       		.byte	0x9c
 382 00af C0000000 		.4byte	0xc0
 383 00b3 06       		.uleb128 0x6
 384 00b4 77020000 		.4byte	.LASF21
 385 00b8 01       		.byte	0x1
 386 00b9 18       		.byte	0x18
 387 00ba 5D000000 		.4byte	0x5d
 388 00be 00       		.byte	0
 389 00bf 00       		.byte	0
 390 00c0 07       		.uleb128 0x7
 391 00c1 2E020000 		.4byte	.LASF15
 392 00c5 01       		.byte	0x1
 393 00c6 34       		.byte	0x34
 394 00c7 00000000 		.4byte	.LFB35
 395 00cb 02000000 		.4byte	.LFE35-.LFB35
 396 00cf 01       		.uleb128 0x1
 397 00d0 9C       		.byte	0x9c
 398 00d1 FC000000 		.4byte	0xfc
 399 00d5 08       		.uleb128 0x8
 400 00d6 AA000000 		.4byte	.LASF16
 401 00da 01       		.byte	0x1
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 12


 402 00db 34       		.byte	0x34
 403 00dc 5D000000 		.4byte	0x5d
 404 00e0 01       		.uleb128 0x1
 405 00e1 50       		.byte	0x50
 406 00e2 09       		.uleb128 0x9
 407 00e3 646300   		.ascii	"dc\000"
 408 00e6 01       		.byte	0x1
 409 00e7 34       		.byte	0x34
 410 00e8 5D000000 		.4byte	0x5d
 411 00ec 01       		.uleb128 0x1
 412 00ed 51       		.byte	0x51
 413 00ee 08       		.uleb128 0x8
 414 00ef 18000000 		.4byte	.LASF17
 415 00f3 01       		.byte	0x1
 416 00f4 34       		.byte	0x34
 417 00f5 6B000000 		.4byte	0x6b
 418 00f9 01       		.uleb128 0x1
 419 00fa 52       		.byte	0x52
 420 00fb 00       		.byte	0
 421 00fc 0A       		.uleb128 0xa
 422 00fd 65000000 		.4byte	.LASF18
 423 0101 01       		.byte	0x1
 424 0102 3C       		.byte	0x3c
 425 0103 00000000 		.4byte	.LFB36
 426 0107 02000000 		.4byte	.LFE36-.LFB36
 427 010b 01       		.uleb128 0x1
 428 010c 9C       		.byte	0x9c
 429 010d 0A       		.uleb128 0xa
 430 010e 70000000 		.4byte	.LASF19
 431 0112 01       		.byte	0x1
 432 0113 43       		.byte	0x43
 433 0114 00000000 		.4byte	.LFB37
 434 0118 02000000 		.4byte	.LFE37-.LFB37
 435 011c 01       		.uleb128 0x1
 436 011d 9C       		.byte	0x9c
 437 011e 0A       		.uleb128 0xa
 438 011f 25020000 		.4byte	.LASF20
 439 0123 01       		.byte	0x1
 440 0124 51       		.byte	0x51
 441 0125 00000000 		.4byte	.LFB38
 442 0129 02000000 		.4byte	.LFE38-.LFB38
 443 012d 01       		.uleb128 0x1
 444 012e 9C       		.byte	0x9c
 445 012f 0B       		.uleb128 0xb
 446 0130 DC000000 		.4byte	.LASF42
 447 0134 01       		.byte	0x1
 448 0135 56       		.byte	0x56
 449 0136 5D000000 		.4byte	0x5d
 450 013a 00000000 		.4byte	.LFB39
 451 013e A8000000 		.4byte	.LFE39-.LFB39
 452 0142 01       		.uleb128 0x1
 453 0143 9C       		.byte	0x9c
 454 0144 F4010000 		.4byte	0x1f4
 455 0148 0C       		.uleb128 0xc
 456 0149 697800   		.ascii	"ix\000"
 457 014c 01       		.byte	0x1
 458 014d 5B       		.byte	0x5b
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 13


 459 014e 5D000000 		.4byte	0x5d
 460 0152 00000000 		.4byte	.LLST0
 461 0156 0D       		.uleb128 0xd
 462 0157 2C000000 		.4byte	.LASF22
 463 015b 01       		.byte	0x1
 464 015c 5B       		.byte	0x5b
 465 015d 5D000000 		.4byte	0x5d
 466 0161 2A000000 		.4byte	.LLST1
 467 0165 0D       		.uleb128 0xd
 468 0166 E1000000 		.4byte	.LASF23
 469 016a 01       		.byte	0x1
 470 016b 5B       		.byte	0x5b
 471 016c 5D000000 		.4byte	0x5d
 472 0170 49000000 		.4byte	.LLST2
 473 0174 0D       		.uleb128 0xd
 474 0175 4A000000 		.4byte	.LASF24
 475 0179 01       		.byte	0x1
 476 017a 5B       		.byte	0x5b
 477 017b 5D000000 		.4byte	0x5d
 478 017f 73000000 		.4byte	.LLST3
 479 0183 0E       		.uleb128 0xe
 480 0184 C6000000 		.4byte	.LASF25
 481 0188 01       		.byte	0x1
 482 0189 5C       		.byte	0x5c
 483 018a F4010000 		.4byte	0x1f4
 484 018e 02       		.uleb128 0x2
 485 018f 7D       		.byte	0x7d
 486 0190 00       		.sleb128 0
 487 0191 0F       		.uleb128 0xf
 488 0192 0A000000 		.4byte	.LVL3
 489 0196 3D020000 		.4byte	0x23d
 490 019a 0F       		.uleb128 0xf
 491 019b 0E000000 		.4byte	.LVL4
 492 019f 48020000 		.4byte	0x248
 493 01a3 0F       		.uleb128 0xf
 494 01a4 12000000 		.4byte	.LVL5
 495 01a8 54020000 		.4byte	0x254
 496 01ac 0F       		.uleb128 0xf
 497 01ad 16000000 		.4byte	.LVL6
 498 01b1 60020000 		.4byte	0x260
 499 01b5 0F       		.uleb128 0xf
 500 01b6 1A000000 		.4byte	.LVL7
 501 01ba 6C020000 		.4byte	0x26c
 502 01be 0F       		.uleb128 0xf
 503 01bf 1E000000 		.4byte	.LVL8
 504 01c3 78020000 		.4byte	0x278
 505 01c7 0F       		.uleb128 0xf
 506 01c8 22000000 		.4byte	.LVL9
 507 01cc 84020000 		.4byte	0x284
 508 01d0 0F       		.uleb128 0xf
 509 01d1 26000000 		.4byte	.LVL10
 510 01d5 90020000 		.4byte	0x290
 511 01d9 0F       		.uleb128 0xf
 512 01da 2A000000 		.4byte	.LVL11
 513 01de 9A000000 		.4byte	0x9a
 514 01e2 10       		.uleb128 0x10
 515 01e3 96000000 		.4byte	.LVL22
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 14


 516 01e7 9B020000 		.4byte	0x29b
 517 01eb 11       		.uleb128 0x11
 518 01ec 01       		.uleb128 0x1
 519 01ed 50       		.byte	0x50
 520 01ee 03       		.uleb128 0x3
 521 01ef 0A       		.byte	0xa
 522 01f0 2003     		.2byte	0x320
 523 01f2 00       		.byte	0
 524 01f3 00       		.byte	0
 525 01f4 12       		.uleb128 0x12
 526 01f5 5D000000 		.4byte	0x5d
 527 01f9 05020000 		.4byte	0x205
 528 01fd 13       		.uleb128 0x13
 529 01fe 93000000 		.4byte	0x93
 530 0202 01       		.uleb128 0x1
 531 0203 43       		.byte	0x43
 532 0204 00       		.byte	0
 533 0205 06       		.uleb128 0x6
 534 0206 96020000 		.4byte	.LASF26
 535 020a 01       		.byte	0x1
 536 020b 0E       		.byte	0xe
 537 020c 11020000 		.4byte	0x211
 538 0210 14       		.byte	0x14
 539 0211 14       		.uleb128 0x14
 540 0212 5D000000 		.4byte	0x5d
 541 0216 15       		.uleb128 0x15
 542 0217 1D020000 		.4byte	.LASF27
 543 021b 01       		.byte	0x1
 544 021c 0F       		.byte	0xf
 545 021d 27020000 		.4byte	0x227
 546 0221 05       		.uleb128 0x5
 547 0222 03       		.byte	0x3
 548 0223 00000000 		.4byte	timeout
 549 0227 16       		.uleb128 0x16
 550 0228 5D000000 		.4byte	0x5d
 551 022c 15       		.uleb128 0x15
 552 022d 00000000 		.4byte	.LASF28
 553 0231 01       		.byte	0x1
 554 0232 0F       		.byte	0xf
 555 0233 27020000 		.4byte	0x227
 556 0237 05       		.uleb128 0x5
 557 0238 03       		.byte	0x3
 558 0239 00000000 		.4byte	pressed
 559 023d 17       		.uleb128 0x17
 560 023e 08000000 		.4byte	.LASF29
 561 0242 08000000 		.4byte	.LASF29
 562 0246 02       		.byte	0x2
 563 0247 59       		.byte	0x59
 564 0248 18       		.uleb128 0x18
 565 0249 39020000 		.4byte	.LASF30
 566 024d 39020000 		.4byte	.LASF30
 567 0251 03       		.byte	0x3
 568 0252 3201     		.2byte	0x132
 569 0254 18       		.uleb128 0x18
 570 0255 4B020000 		.4byte	.LASF31
 571 0259 4B020000 		.4byte	.LASF31
 572 025d 03       		.byte	0x3
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 15


 573 025e 3301     		.2byte	0x133
 574 0260 18       		.uleb128 0x18
 575 0261 7A000000 		.4byte	.LASF32
 576 0265 7A000000 		.4byte	.LASF32
 577 0269 04       		.byte	0x4
 578 026a 3201     		.2byte	0x132
 579 026c 18       		.uleb128 0x18
 580 026d 5C020000 		.4byte	.LASF33
 581 0271 5C020000 		.4byte	.LASF33
 582 0275 04       		.byte	0x4
 583 0276 3301     		.2byte	0x133
 584 0278 18       		.uleb128 0x18
 585 0279 38000000 		.4byte	.LASF34
 586 027d 38000000 		.4byte	.LASF34
 587 0281 05       		.byte	0x5
 588 0282 3201     		.2byte	0x132
 589 0284 18       		.uleb128 0x18
 590 0285 8F000000 		.4byte	.LASF35
 591 0289 8F000000 		.4byte	.LASF35
 592 028d 05       		.byte	0x5
 593 028e 3301     		.2byte	0x133
 594 0290 17       		.uleb128 0x17
 595 0291 B0000000 		.4byte	.LASF36
 596 0295 B0000000 		.4byte	.LASF36
 597 0299 06       		.byte	0x6
 598 029a 17       		.byte	0x17
 599 029b 17       		.uleb128 0x17
 600 029c A9020000 		.4byte	.LASF37
 601 02a0 A9020000 		.4byte	.LASF37
 602 02a4 07       		.byte	0x7
 603 02a5 EC       		.byte	0xec
 604 02a6 00       		.byte	0
 605              		.section	.debug_abbrev,"",%progbits
 606              	.Ldebug_abbrev0:
 607 0000 01       		.uleb128 0x1
 608 0001 11       		.uleb128 0x11
 609 0002 01       		.byte	0x1
 610 0003 25       		.uleb128 0x25
 611 0004 0E       		.uleb128 0xe
 612 0005 13       		.uleb128 0x13
 613 0006 0B       		.uleb128 0xb
 614 0007 03       		.uleb128 0x3
 615 0008 0E       		.uleb128 0xe
 616 0009 1B       		.uleb128 0x1b
 617 000a 0E       		.uleb128 0xe
 618 000b 55       		.uleb128 0x55
 619 000c 17       		.uleb128 0x17
 620 000d 11       		.uleb128 0x11
 621 000e 01       		.uleb128 0x1
 622 000f 10       		.uleb128 0x10
 623 0010 17       		.uleb128 0x17
 624 0011 00       		.byte	0
 625 0012 00       		.byte	0
 626 0013 02       		.uleb128 0x2
 627 0014 24       		.uleb128 0x24
 628 0015 00       		.byte	0
 629 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 16


 630 0017 0B       		.uleb128 0xb
 631 0018 3E       		.uleb128 0x3e
 632 0019 0B       		.uleb128 0xb
 633 001a 03       		.uleb128 0x3
 634 001b 0E       		.uleb128 0xe
 635 001c 00       		.byte	0
 636 001d 00       		.byte	0
 637 001e 03       		.uleb128 0x3
 638 001f 24       		.uleb128 0x24
 639 0020 00       		.byte	0
 640 0021 0B       		.uleb128 0xb
 641 0022 0B       		.uleb128 0xb
 642 0023 3E       		.uleb128 0x3e
 643 0024 0B       		.uleb128 0xb
 644 0025 03       		.uleb128 0x3
 645 0026 08       		.uleb128 0x8
 646 0027 00       		.byte	0
 647 0028 00       		.byte	0
 648 0029 04       		.uleb128 0x4
 649 002a 16       		.uleb128 0x16
 650 002b 00       		.byte	0
 651 002c 03       		.uleb128 0x3
 652 002d 0E       		.uleb128 0xe
 653 002e 3A       		.uleb128 0x3a
 654 002f 0B       		.uleb128 0xb
 655 0030 3B       		.uleb128 0x3b
 656 0031 05       		.uleb128 0x5
 657 0032 49       		.uleb128 0x49
 658 0033 13       		.uleb128 0x13
 659 0034 00       		.byte	0
 660 0035 00       		.byte	0
 661 0036 05       		.uleb128 0x5
 662 0037 2E       		.uleb128 0x2e
 663 0038 01       		.byte	0x1
 664 0039 3F       		.uleb128 0x3f
 665 003a 19       		.uleb128 0x19
 666 003b 03       		.uleb128 0x3
 667 003c 0E       		.uleb128 0xe
 668 003d 3A       		.uleb128 0x3a
 669 003e 0B       		.uleb128 0xb
 670 003f 3B       		.uleb128 0x3b
 671 0040 0B       		.uleb128 0xb
 672 0041 49       		.uleb128 0x49
 673 0042 13       		.uleb128 0x13
 674 0043 11       		.uleb128 0x11
 675 0044 01       		.uleb128 0x1
 676 0045 12       		.uleb128 0x12
 677 0046 06       		.uleb128 0x6
 678 0047 40       		.uleb128 0x40
 679 0048 18       		.uleb128 0x18
 680 0049 9742     		.uleb128 0x2117
 681 004b 19       		.uleb128 0x19
 682 004c 01       		.uleb128 0x1
 683 004d 13       		.uleb128 0x13
 684 004e 00       		.byte	0
 685 004f 00       		.byte	0
 686 0050 06       		.uleb128 0x6
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 17


 687 0051 34       		.uleb128 0x34
 688 0052 00       		.byte	0
 689 0053 03       		.uleb128 0x3
 690 0054 0E       		.uleb128 0xe
 691 0055 3A       		.uleb128 0x3a
 692 0056 0B       		.uleb128 0xb
 693 0057 3B       		.uleb128 0x3b
 694 0058 0B       		.uleb128 0xb
 695 0059 49       		.uleb128 0x49
 696 005a 13       		.uleb128 0x13
 697 005b 1C       		.uleb128 0x1c
 698 005c 0B       		.uleb128 0xb
 699 005d 00       		.byte	0
 700 005e 00       		.byte	0
 701 005f 07       		.uleb128 0x7
 702 0060 2E       		.uleb128 0x2e
 703 0061 01       		.byte	0x1
 704 0062 3F       		.uleb128 0x3f
 705 0063 19       		.uleb128 0x19
 706 0064 03       		.uleb128 0x3
 707 0065 0E       		.uleb128 0xe
 708 0066 3A       		.uleb128 0x3a
 709 0067 0B       		.uleb128 0xb
 710 0068 3B       		.uleb128 0x3b
 711 0069 0B       		.uleb128 0xb
 712 006a 27       		.uleb128 0x27
 713 006b 19       		.uleb128 0x19
 714 006c 11       		.uleb128 0x11
 715 006d 01       		.uleb128 0x1
 716 006e 12       		.uleb128 0x12
 717 006f 06       		.uleb128 0x6
 718 0070 40       		.uleb128 0x40
 719 0071 18       		.uleb128 0x18
 720 0072 9742     		.uleb128 0x2117
 721 0074 19       		.uleb128 0x19
 722 0075 01       		.uleb128 0x1
 723 0076 13       		.uleb128 0x13
 724 0077 00       		.byte	0
 725 0078 00       		.byte	0
 726 0079 08       		.uleb128 0x8
 727 007a 05       		.uleb128 0x5
 728 007b 00       		.byte	0
 729 007c 03       		.uleb128 0x3
 730 007d 0E       		.uleb128 0xe
 731 007e 3A       		.uleb128 0x3a
 732 007f 0B       		.uleb128 0xb
 733 0080 3B       		.uleb128 0x3b
 734 0081 0B       		.uleb128 0xb
 735 0082 49       		.uleb128 0x49
 736 0083 13       		.uleb128 0x13
 737 0084 02       		.uleb128 0x2
 738 0085 18       		.uleb128 0x18
 739 0086 00       		.byte	0
 740 0087 00       		.byte	0
 741 0088 09       		.uleb128 0x9
 742 0089 05       		.uleb128 0x5
 743 008a 00       		.byte	0
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 18


 744 008b 03       		.uleb128 0x3
 745 008c 08       		.uleb128 0x8
 746 008d 3A       		.uleb128 0x3a
 747 008e 0B       		.uleb128 0xb
 748 008f 3B       		.uleb128 0x3b
 749 0090 0B       		.uleb128 0xb
 750 0091 49       		.uleb128 0x49
 751 0092 13       		.uleb128 0x13
 752 0093 02       		.uleb128 0x2
 753 0094 18       		.uleb128 0x18
 754 0095 00       		.byte	0
 755 0096 00       		.byte	0
 756 0097 0A       		.uleb128 0xa
 757 0098 2E       		.uleb128 0x2e
 758 0099 00       		.byte	0
 759 009a 3F       		.uleb128 0x3f
 760 009b 19       		.uleb128 0x19
 761 009c 03       		.uleb128 0x3
 762 009d 0E       		.uleb128 0xe
 763 009e 3A       		.uleb128 0x3a
 764 009f 0B       		.uleb128 0xb
 765 00a0 3B       		.uleb128 0x3b
 766 00a1 0B       		.uleb128 0xb
 767 00a2 11       		.uleb128 0x11
 768 00a3 01       		.uleb128 0x1
 769 00a4 12       		.uleb128 0x12
 770 00a5 06       		.uleb128 0x6
 771 00a6 40       		.uleb128 0x40
 772 00a7 18       		.uleb128 0x18
 773 00a8 9742     		.uleb128 0x2117
 774 00aa 19       		.uleb128 0x19
 775 00ab 00       		.byte	0
 776 00ac 00       		.byte	0
 777 00ad 0B       		.uleb128 0xb
 778 00ae 2E       		.uleb128 0x2e
 779 00af 01       		.byte	0x1
 780 00b0 3F       		.uleb128 0x3f
 781 00b1 19       		.uleb128 0x19
 782 00b2 03       		.uleb128 0x3
 783 00b3 0E       		.uleb128 0xe
 784 00b4 3A       		.uleb128 0x3a
 785 00b5 0B       		.uleb128 0xb
 786 00b6 3B       		.uleb128 0x3b
 787 00b7 0B       		.uleb128 0xb
 788 00b8 27       		.uleb128 0x27
 789 00b9 19       		.uleb128 0x19
 790 00ba 49       		.uleb128 0x49
 791 00bb 13       		.uleb128 0x13
 792 00bc 8701     		.uleb128 0x87
 793 00be 19       		.uleb128 0x19
 794 00bf 11       		.uleb128 0x11
 795 00c0 01       		.uleb128 0x1
 796 00c1 12       		.uleb128 0x12
 797 00c2 06       		.uleb128 0x6
 798 00c3 40       		.uleb128 0x40
 799 00c4 18       		.uleb128 0x18
 800 00c5 9742     		.uleb128 0x2117
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 19


 801 00c7 19       		.uleb128 0x19
 802 00c8 01       		.uleb128 0x1
 803 00c9 13       		.uleb128 0x13
 804 00ca 00       		.byte	0
 805 00cb 00       		.byte	0
 806 00cc 0C       		.uleb128 0xc
 807 00cd 34       		.uleb128 0x34
 808 00ce 00       		.byte	0
 809 00cf 03       		.uleb128 0x3
 810 00d0 08       		.uleb128 0x8
 811 00d1 3A       		.uleb128 0x3a
 812 00d2 0B       		.uleb128 0xb
 813 00d3 3B       		.uleb128 0x3b
 814 00d4 0B       		.uleb128 0xb
 815 00d5 49       		.uleb128 0x49
 816 00d6 13       		.uleb128 0x13
 817 00d7 02       		.uleb128 0x2
 818 00d8 17       		.uleb128 0x17
 819 00d9 00       		.byte	0
 820 00da 00       		.byte	0
 821 00db 0D       		.uleb128 0xd
 822 00dc 34       		.uleb128 0x34
 823 00dd 00       		.byte	0
 824 00de 03       		.uleb128 0x3
 825 00df 0E       		.uleb128 0xe
 826 00e0 3A       		.uleb128 0x3a
 827 00e1 0B       		.uleb128 0xb
 828 00e2 3B       		.uleb128 0x3b
 829 00e3 0B       		.uleb128 0xb
 830 00e4 49       		.uleb128 0x49
 831 00e5 13       		.uleb128 0x13
 832 00e6 02       		.uleb128 0x2
 833 00e7 17       		.uleb128 0x17
 834 00e8 00       		.byte	0
 835 00e9 00       		.byte	0
 836 00ea 0E       		.uleb128 0xe
 837 00eb 34       		.uleb128 0x34
 838 00ec 00       		.byte	0
 839 00ed 03       		.uleb128 0x3
 840 00ee 0E       		.uleb128 0xe
 841 00ef 3A       		.uleb128 0x3a
 842 00f0 0B       		.uleb128 0xb
 843 00f1 3B       		.uleb128 0x3b
 844 00f2 0B       		.uleb128 0xb
 845 00f3 49       		.uleb128 0x49
 846 00f4 13       		.uleb128 0x13
 847 00f5 02       		.uleb128 0x2
 848 00f6 18       		.uleb128 0x18
 849 00f7 00       		.byte	0
 850 00f8 00       		.byte	0
 851 00f9 0F       		.uleb128 0xf
 852 00fa 898201   		.uleb128 0x4109
 853 00fd 00       		.byte	0
 854 00fe 11       		.uleb128 0x11
 855 00ff 01       		.uleb128 0x1
 856 0100 31       		.uleb128 0x31
 857 0101 13       		.uleb128 0x13
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 20


 858 0102 00       		.byte	0
 859 0103 00       		.byte	0
 860 0104 10       		.uleb128 0x10
 861 0105 898201   		.uleb128 0x4109
 862 0108 01       		.byte	0x1
 863 0109 11       		.uleb128 0x11
 864 010a 01       		.uleb128 0x1
 865 010b 31       		.uleb128 0x31
 866 010c 13       		.uleb128 0x13
 867 010d 00       		.byte	0
 868 010e 00       		.byte	0
 869 010f 11       		.uleb128 0x11
 870 0110 8A8201   		.uleb128 0x410a
 871 0113 00       		.byte	0
 872 0114 02       		.uleb128 0x2
 873 0115 18       		.uleb128 0x18
 874 0116 9142     		.uleb128 0x2111
 875 0118 18       		.uleb128 0x18
 876 0119 00       		.byte	0
 877 011a 00       		.byte	0
 878 011b 12       		.uleb128 0x12
 879 011c 01       		.uleb128 0x1
 880 011d 01       		.byte	0x1
 881 011e 49       		.uleb128 0x49
 882 011f 13       		.uleb128 0x13
 883 0120 01       		.uleb128 0x1
 884 0121 13       		.uleb128 0x13
 885 0122 00       		.byte	0
 886 0123 00       		.byte	0
 887 0124 13       		.uleb128 0x13
 888 0125 21       		.uleb128 0x21
 889 0126 00       		.byte	0
 890 0127 49       		.uleb128 0x49
 891 0128 13       		.uleb128 0x13
 892 0129 2F       		.uleb128 0x2f
 893 012a 18       		.uleb128 0x18
 894 012b 00       		.byte	0
 895 012c 00       		.byte	0
 896 012d 14       		.uleb128 0x14
 897 012e 26       		.uleb128 0x26
 898 012f 00       		.byte	0
 899 0130 49       		.uleb128 0x49
 900 0131 13       		.uleb128 0x13
 901 0132 00       		.byte	0
 902 0133 00       		.byte	0
 903 0134 15       		.uleb128 0x15
 904 0135 34       		.uleb128 0x34
 905 0136 00       		.byte	0
 906 0137 03       		.uleb128 0x3
 907 0138 0E       		.uleb128 0xe
 908 0139 3A       		.uleb128 0x3a
 909 013a 0B       		.uleb128 0xb
 910 013b 3B       		.uleb128 0x3b
 911 013c 0B       		.uleb128 0xb
 912 013d 49       		.uleb128 0x49
 913 013e 13       		.uleb128 0x13
 914 013f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 21


 915 0140 19       		.uleb128 0x19
 916 0141 02       		.uleb128 0x2
 917 0142 18       		.uleb128 0x18
 918 0143 00       		.byte	0
 919 0144 00       		.byte	0
 920 0145 16       		.uleb128 0x16
 921 0146 35       		.uleb128 0x35
 922 0147 00       		.byte	0
 923 0148 49       		.uleb128 0x49
 924 0149 13       		.uleb128 0x13
 925 014a 00       		.byte	0
 926 014b 00       		.byte	0
 927 014c 17       		.uleb128 0x17
 928 014d 2E       		.uleb128 0x2e
 929 014e 00       		.byte	0
 930 014f 3F       		.uleb128 0x3f
 931 0150 19       		.uleb128 0x19
 932 0151 3C       		.uleb128 0x3c
 933 0152 19       		.uleb128 0x19
 934 0153 6E       		.uleb128 0x6e
 935 0154 0E       		.uleb128 0xe
 936 0155 03       		.uleb128 0x3
 937 0156 0E       		.uleb128 0xe
 938 0157 3A       		.uleb128 0x3a
 939 0158 0B       		.uleb128 0xb
 940 0159 3B       		.uleb128 0x3b
 941 015a 0B       		.uleb128 0xb
 942 015b 00       		.byte	0
 943 015c 00       		.byte	0
 944 015d 18       		.uleb128 0x18
 945 015e 2E       		.uleb128 0x2e
 946 015f 00       		.byte	0
 947 0160 3F       		.uleb128 0x3f
 948 0161 19       		.uleb128 0x19
 949 0162 3C       		.uleb128 0x3c
 950 0163 19       		.uleb128 0x19
 951 0164 6E       		.uleb128 0x6e
 952 0165 0E       		.uleb128 0xe
 953 0166 03       		.uleb128 0x3
 954 0167 0E       		.uleb128 0xe
 955 0168 3A       		.uleb128 0x3a
 956 0169 0B       		.uleb128 0xb
 957 016a 3B       		.uleb128 0x3b
 958 016b 05       		.uleb128 0x5
 959 016c 00       		.byte	0
 960 016d 00       		.byte	0
 961 016e 00       		.byte	0
 962              		.section	.debug_loc,"",%progbits
 963              	.Ldebug_loc0:
 964              	.LLST0:
 965 0000 06000000 		.4byte	.LVL2
 966 0004 26000000 		.4byte	.LVL10
 967 0008 0200     		.2byte	0x2
 968 000a 30       		.byte	0x30
 969 000b 9F       		.byte	0x9f
 970 000c 34000000 		.4byte	.LVL12
 971 0010 38000000 		.4byte	.LVL14
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 22


 972 0014 0100     		.2byte	0x1
 973 0016 53       		.byte	0x53
 974 0017 3A000000 		.4byte	.LVL15
 975 001b 42000000 		.4byte	.LVL16
 976 001f 0100     		.2byte	0x1
 977 0021 53       		.byte	0x53
 978 0022 00000000 		.4byte	0
 979 0026 00000000 		.4byte	0
 980              	.LLST1:
 981 002a 06000000 		.4byte	.LVL2
 982 002e 26000000 		.4byte	.LVL10
 983 0032 0200     		.2byte	0x2
 984 0034 30       		.byte	0x30
 985 0035 9F       		.byte	0x9f
 986 0036 42000000 		.4byte	.LVL16
 987 003a 95000000 		.4byte	.LVL22-1
 988 003e 0100     		.2byte	0x1
 989 0040 52       		.byte	0x52
 990 0041 00000000 		.4byte	0
 991 0045 00000000 		.4byte	0
 992              	.LLST2:
 993 0049 06000000 		.4byte	.LVL2
 994 004d 26000000 		.4byte	.LVL10
 995 0051 0200     		.2byte	0x2
 996 0053 30       		.byte	0x30
 997 0054 9F       		.byte	0x9f
 998 0055 34000000 		.4byte	.LVL12
 999 0059 84000000 		.4byte	.LVL18
 1000 005d 0100     		.2byte	0x1
 1001 005f 56       		.byte	0x56
 1002 0060 86000000 		.4byte	.LVL19
 1003 0064 A8000000 		.4byte	.LFE39
 1004 0068 0100     		.2byte	0x1
 1005 006a 56       		.byte	0x56
 1006 006b 00000000 		.4byte	0
 1007 006f 00000000 		.4byte	0
 1008              	.LLST3:
 1009 0073 06000000 		.4byte	.LVL2
 1010 0077 26000000 		.4byte	.LVL10
 1011 007b 0200     		.2byte	0x2
 1012 007d 30       		.byte	0x30
 1013 007e 9F       		.byte	0x9f
 1014 007f 34000000 		.4byte	.LVL12
 1015 0083 A8000000 		.4byte	.LFE39
 1016 0087 0100     		.2byte	0x1
 1017 0089 55       		.byte	0x55
 1018 008a 00000000 		.4byte	0
 1019 008e 00000000 		.4byte	0
 1020              		.section	.debug_aranges,"",%progbits
 1021 0000 44000000 		.4byte	0x44
 1022 0004 0200     		.2byte	0x2
 1023 0006 00000000 		.4byte	.Ldebug_info0
 1024 000a 04       		.byte	0x4
 1025 000b 00       		.byte	0
 1026 000c 0000     		.2byte	0
 1027 000e 0000     		.2byte	0
 1028 0010 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 23


 1029 0014 04000000 		.4byte	.LFE34-.LFB34
 1030 0018 00000000 		.4byte	.LFB35
 1031 001c 02000000 		.4byte	.LFE35-.LFB35
 1032 0020 00000000 		.4byte	.LFB36
 1033 0024 02000000 		.4byte	.LFE36-.LFB36
 1034 0028 00000000 		.4byte	.LFB37
 1035 002c 02000000 		.4byte	.LFE37-.LFB37
 1036 0030 00000000 		.4byte	.LFB38
 1037 0034 02000000 		.4byte	.LFE38-.LFB38
 1038 0038 00000000 		.4byte	.LFB39
 1039 003c A8000000 		.4byte	.LFE39-.LFB39
 1040 0040 00000000 		.4byte	0
 1041 0044 00000000 		.4byte	0
 1042              		.section	.debug_ranges,"",%progbits
 1043              	.Ldebug_ranges0:
 1044 0000 00000000 		.4byte	.LFB34
 1045 0004 04000000 		.4byte	.LFE34
 1046 0008 00000000 		.4byte	.LFB35
 1047 000c 02000000 		.4byte	.LFE35
 1048 0010 00000000 		.4byte	.LFB36
 1049 0014 02000000 		.4byte	.LFE36
 1050 0018 00000000 		.4byte	.LFB37
 1051 001c 02000000 		.4byte	.LFE37
 1052 0020 00000000 		.4byte	.LFB38
 1053 0024 02000000 		.4byte	.LFE38
 1054 0028 00000000 		.4byte	.LFB39
 1055 002c A8000000 		.4byte	.LFE39
 1056 0030 00000000 		.4byte	0
 1057 0034 00000000 		.4byte	0
 1058              		.section	.debug_line,"",%progbits
 1059              	.Ldebug_line0:
 1060 0000 49010000 		.section	.debug_str,"MS",%progbits,1
 1060      02009900 
 1060      00000201 
 1060      FB0E0D00 
 1060      01010101 
 1061              	.LASF28:
 1062 0000 70726573 		.ascii	"pressed\000"
 1062      73656400 
 1063              	.LASF29:
 1064 0008 5052535F 		.ascii	"PRS_Start\000"
 1064      53746172 
 1064      7400
 1065              	.LASF9:
 1066 0012 666C6F61 		.ascii	"float\000"
 1066      7400
 1067              	.LASF17:
 1068 0018 64656C61 		.ascii	"delay\000"
 1068      7900
 1069              	.LASF1:
 1070 001e 756E7369 		.ascii	"unsigned char\000"
 1070      676E6564 
 1070      20636861 
 1070      7200
 1071              	.LASF22:
 1072 002c 6E756D5F 		.ascii	"num_correct\000"
 1072      636F7272 
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 24


 1072      65637400 
 1073              	.LASF34:
 1074 0038 494E5055 		.ascii	"INPUT_TIMER_Start\000"
 1074      545F5449 
 1074      4D45525F 
 1074      53746172 
 1074      7400
 1075              	.LASF24:
 1076 004a 7365715F 		.ascii	"seq_ctr\000"
 1076      63747200 
 1077              	.LASF3:
 1078 0052 73686F72 		.ascii	"short unsigned int\000"
 1078      7420756E 
 1078      7369676E 
 1078      65642069 
 1078      6E7400
 1079              	.LASF18:
 1080 0065 706C6179 		.ascii	"play_start\000"
 1080      5F737461 
 1080      727400
 1081              	.LASF19:
 1082 0070 706C6179 		.ascii	"play_fail\000"
 1082      5F666169 
 1082      6C00
 1083              	.LASF32:
 1084 007a 4C45445F 		.ascii	"LED_PWM_Start\000"
 1084      50574D5F 
 1084      53746172 
 1084      7400
 1085              	.LASF10:
 1086 0088 646F7562 		.ascii	"double\000"
 1086      6C6500
 1087              	.LASF35:
 1088 008f 494E5055 		.ascii	"INPUT_TIMER_Stop\000"
 1088      545F5449 
 1088      4D45525F 
 1088      53746F70 
 1088      00
 1089              	.LASF2:
 1090 00a0 73686F72 		.ascii	"short int\000"
 1090      7420696E 
 1090      7400
 1091              	.LASF16:
 1092 00aa 636F6C6F 		.ascii	"color\000"
 1092      7200
 1093              	.LASF36:
 1094 00b0 494E5055 		.ascii	"INPUT_TIMER_ISR_Start\000"
 1094      545F5449 
 1094      4D45525F 
 1094      4953525F 
 1094      53746172 
 1095              	.LASF25:
 1096 00c6 73696D6F 		.ascii	"simon_sequence\000"
 1096      6E5F7365 
 1096      7175656E 
 1096      636500
 1097              	.LASF41:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 25


 1098 00d5 75696E74 		.ascii	"uint32\000"
 1098      333200
 1099              	.LASF42:
 1100 00dc 6D61696E 		.ascii	"main\000"
 1100      00
 1101              	.LASF23:
 1102 00e1 6572726F 		.ascii	"errors\000"
 1102      727300
 1103              	.LASF8:
 1104 00e8 756E7369 		.ascii	"unsigned int\000"
 1104      676E6564 
 1104      20696E74 
 1104      00
 1105              	.LASF7:
 1106 00f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1106      206C6F6E 
 1106      6720756E 
 1106      7369676E 
 1106      65642069 
 1107              	.LASF5:
 1108 010c 6C6F6E67 		.ascii	"long unsigned int\000"
 1108      20756E73 
 1108      69676E65 
 1108      6420696E 
 1108      7400
 1109              	.LASF38:
 1110 011e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1110      43313120 
 1110      352E342E 
 1110      31203230 
 1110      31363036 
 1111 0151 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1111      20726576 
 1111      6973696F 
 1111      6E203233 
 1111      37373135 
 1112 0184 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1112      66756E63 
 1112      74696F6E 
 1112      2D736563 
 1112      74696F6E 
 1113              	.LASF40:
 1114 01ac 433A5C55 		.ascii	"C:\\Users\\tyork\\Documents\\PSoC Creator\\ECE381_S"
 1114      73657273 
 1114      5C74796F 
 1114      726B5C44 
 1114      6F63756D 
 1115 01da 5032335F 		.ascii	"P23_Lab03_Simon_Clone\\Design01.cydsn\000"
 1115      4C616230 
 1115      335F5369 
 1115      6D6F6E5F 
 1115      436C6F6E 
 1116              	.LASF13:
 1117 01ff 73697A65 		.ascii	"sizetype\000"
 1117      74797065 
 1117      00
 1118              	.LASF6:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 26


 1119 0208 6C6F6E67 		.ascii	"long long int\000"
 1119      206C6F6E 
 1119      6720696E 
 1119      7400
 1120              	.LASF39:
 1121 0216 6D61696E 		.ascii	"main.c\000"
 1121      2E6300
 1122              	.LASF27:
 1123 021d 74696D65 		.ascii	"timeout\000"
 1123      6F757400 
 1124              	.LASF20:
 1125 0225 706C6179 		.ascii	"play_win\000"
 1125      5F77696E 
 1125      00
 1126              	.LASF15:
 1127 022e 706C6179 		.ascii	"play_color\000"
 1127      5F636F6C 
 1127      6F7200
 1128              	.LASF30:
 1129 0239 53504541 		.ascii	"SPEAKER_PWM_Start\000"
 1129      4B45525F 
 1129      50574D5F 
 1129      53746172 
 1129      7400
 1130              	.LASF31:
 1131 024b 53504541 		.ascii	"SPEAKER_PWM_Stop\000"
 1131      4B45525F 
 1131      50574D5F 
 1131      53746F70 
 1131      00
 1132              	.LASF33:
 1133 025c 4C45445F 		.ascii	"LED_PWM_Stop\000"
 1133      50574D5F 
 1133      53746F70 
 1133      00
 1134              	.LASF4:
 1135 0269 6C6F6E67 		.ascii	"long int\000"
 1135      20696E74 
 1135      00
 1136              	.LASF11:
 1137 0272 63686172 		.ascii	"char\000"
 1137      00
 1138              	.LASF21:
 1139 0277 62757474 		.ascii	"button\000"
 1139      6F6E00
 1140              	.LASF12:
 1141 027e 6C6F6E67 		.ascii	"long double\000"
 1141      20646F75 
 1141      626C6500 
 1142              	.LASF0:
 1143 028a 7369676E 		.ascii	"signed char\000"
 1143      65642063 
 1143      68617200 
 1144              	.LASF26:
 1145 0296 524F554E 		.ascii	"ROUNDS\000"
 1145      445300
 1146              	.LASF14:
ARM GAS  C:\Users\tyork\AppData\Local\Temp\ccvlEja4.s 			page 27


 1147 029d 706F6C6C 		.ascii	"poll_button\000"
 1147      5F627574 
 1147      746F6E00 
 1148              	.LASF37:
 1149 02a9 43794465 		.ascii	"CyDelay\000"
 1149      6C617900 
 1150              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
